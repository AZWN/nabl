module nabl2/runtime/solver/typechecking

imports

  runtime/editor/origins
  
  nabl2shared
  nabl2/runtime/common/-
  nabl2/runtime/solver/-
 
rules
 
  solve-constraint: (CValueOf(o,val),sol) -> [res]
  where <sol-v> sol => v*;
        <not(lookup)> (o, v*)
  with res := (<sol-set-v(|o,val)> sol, [])

  solve-constraint: (CTypeOf(o,ty,msginfo),sol) -> [res]
  where <is-ground> o
  with <sol-t> sol => t*
     ; ( <lookup> (o, t*) => ty'
       < !(sol, [CEqual(ty, ty', msginfo)])
       + !(<sol-set-t(|o,ty)> sol, [])
       ) => res

rules

  constraint-priority: CTypeOf(_,_,_) -> 1

  constraint-message: CTypeOf(p,ty,msginfo) -> <default-message(|["Failed to get type of ",p])> msginfo

