module nabl2/runtime/analysis/main

imports

  signatures/nabl2/shared/common/-
  signatures/nabl2/shared/constraints/-
  nabl2/shared/-

  signatures/nabl2/runtime/analysis/-
  nabl2/runtime/analysis/-
  nabl2/runtime/prelude/-


rules

  nabl2--analyze(pre):
    AnalyzeInitial(resource) -> InitialResult(C,params,(labels,wf,order),rel*)
    with <debug> $[Initializing [resource]];
      labels := <nabl2--labels>;
      wf := <nabl2--labels-wf>;
      order := <nabl2--label-order>;
      rel* := <nabl2--relations>;
      (params,C) := <nabl2--generate-constraint-init(|resource)> resource


  nabl2--analyze(pre):
    AnalyzeUnit(resource,ast,args) -> UnitResult(ast',constraint*)
    where not(<nabl2--is-empty-ast> ast)
    with <debug> $[Preprocessing AST [resource]];
      ast' := <pre;nabl2--index-ast(|resource)> ast
    with <debug> $[Generating constraints [resource]];
      constraint* := <nabl2--generate-constraint-file(|resource,args)> ast'

  nabl2--analyze(pre):
    AnalyzeUnit(resource,ast,_) -> UnitResult(ast,constraint*)
    where <nabl2--is-empty-ast> ast
    with constraint* := [CFalse(Message(Warning(),"Empty file was not parsed.",<nabl2--get-ast-index> resource))]
 

  nabl2--analyze(pre):
    AnalyzeFinal(resource) -> FinalResult()


  nabl2--is-empty-ast = is-tuple; ?()
