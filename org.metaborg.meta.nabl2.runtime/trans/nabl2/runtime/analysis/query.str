module nabl2/runtime/analysis/query 

imports

  signatures/nabl2/shared/common/-
  signatures/nabl2/shared/constraints/-
  nabl2/shared/-

  signatures/nabl2/runtime/common/-
  signatures/nabl2/runtime/constraints/-

signature

  constructors

    AnalysisToken : Analysis

rules

  /**
   * @type node:Term -> List((ref:Occurrence,decl:Occurrence))
   */
  nabl2--get-ast-resolution =
    prim("SG_get_ast_resolution")

  /**
   * @param key : Term
   * @type node:Term -> value:Term
   */
  nabl2--get-ast-property(|key) =
    prim("SG_get_ast_property",key)

  nabl2--get-ast-params =
    nabl2--get-ast-property(|Params())

  nabl2--get-ast-type =
    nabl2--get-ast-property(|Type())

rules

  /**
   * @type ref:Occurrence -> (decl:Occurrence,Path))
   */
  nabl2--get-ref-resolution =
    prim("SG_get_ref_resolution")

  /**
   * @param key : Term
   * @type decl:Occurrence -> value:Term
   */
  nabl2--get-decl-property(|key) =
    prim("SG_get_decl_property",key)

  /**
   * @param key : Term
   * @type decl:Occurrence -> Type
   */
  nabl2--get-decl-type =
    nabl2--get-decl-property(|Type())

rules

  nabl2--get-ast-analysis: term -> a
    with a := <nabl2--copy-ast-index(|term)> AnalysisToken()

  nabl2--get-resource-analysis: resource -> a
    with idx := TermIndex(resource,0);
         a := <nabl2--set-ast-index(|idx)> AnalysisToken()

  nabl2--get-custom-analysis =
    prim("SG_get_custom_analysis")

rules

  nabl2--mk-occurrence        = !Occurrence(DefaultNamespace(),<id>,<nabl2--get-ast-index>)
  nabl2--mk-occurrence(|ns)   = !Occurrence(Namespace(ns),<id>,<nabl2--get-ast-index>)
  nabl2--mk-occurrence(|ns,t) = !Occurrence(Namespace(ns),<id>,<nabl2--get-ast-index> t)

  nabl2--occurrence-name = ?Occurrence(_,name,index); <nabl2--try-copy-origin(|index)> name

  nabl2--occurrence-ns = ?Occurrence(ns,_,index); <nabl2--try-copy-origin(|index)> ns
