module nabl2/runtime/editor/services

imports

  libspoofax/term/annotation

  nabl2/runtime/analysis/-
  nabl2/runtime/prelude/-
  nabl2/runtime/pp
  nabl2/api
  signatures/nabl2/runtime/common/-

signature constructors
  HyperlinkText : Term -> Term

rules

  // HACK: all these rules test if the node has a term index, because
  //       sometimes Spoofax Core passes a node without one

  nabl2--editor-resolve: (node, _, _, _, _) -> decls
    where <nabl2-get-ast-index> node;
          a := <nabl2-get-ast-analysis> node
    where refs := <nabl2-get-ast-refs(|a)> node
    where not([] := refs) // failure has Spoofax Core try a parent node
    with decls := <mapconcat(nabl2-get-resolved-names(|a);
                             map(nabl2-prepare-resolved-name))> refs

  nabl2-prepare-resolved-name: (name, path) -> result{a*, HyperlinkText(path)}
    with result{a*} := <nabl2-get-occurrence-index> name

  nabl2--editor-hover: (node, _, _, _, _) -> label
    where <nabl2-get-ast-index> node;
          a := <nabl2-get-ast-analysis> node
    with  ast-labels  := <nabl2--ast-hover(|a)> node;
          decl-labels := <nabl2--decl-hover(|a)> node;
          labels := <conc> (ast-labels, decl-labels)
    where not([] := labels) // failure has Spoofax Core try a parent node
    with  label := <nabl2--lines> labels

  nabl2--ast-hover(|a): node -> labels
    with if type := <nabl2-get-ast-type(|a)> node then
           labels := [$[Type: [<nabl2--hover-type-string(|a)> type]]]
         else
           labels := []
         end

  nabl2--decl-hover(|a): node -> labels
    with decls := <nabl2-get-ast-decls(|a)> node;
         declTypes := <filter(!(<id>, <nabl2-get-type(|a)>))> decls;
         labels := <map(\ (decl, type) -> $[[<nabl2--hover-decl-string(|a)> decl] : [<nabl2--hover-type-string(|a)> type]] \)> declTypes

  nabl2--hover-decl-string(|a) = nabl2--strict(
    topdown(try(nabl2--strip-occurrence-index));
    nabl2--focus-term(|a);
    pp-NaBL2-CTerm;
    nabl2--xmlencode
  )

  nabl2--hover-type-string(|a) = nabl2--strict(
    topdown(try(nabl2--strip-occurrence-index));
    nabl2--focus-term(|a);
    pp-NaBL2-objlangterm;
    nabl2--xmlencode
  )

  nabl2--lines = nabl2--strict(
    separate-by(!"<br>");
    <conc> (<id>, ["<br>"]);
    concat-strings
  )

  nabl2--simplify-ast-indices = topdown(try(nabl2--simplify-ast-index))

  nabl2--simplify-ast-index: t{a*} -> t{i,a'*}
    where ([_|_], a'*) := <partition(?TermIndex(_, i))> a*
