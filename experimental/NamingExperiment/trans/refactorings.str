module refactorings

imports
  namingexperiment
  analysis-library
  lib/refactor-common.generated
  include/NamingExperiment
  lib/editor-common.generated  

strategies
 
  rename-entity:
    (newname, selected-name, position, ast, path, project-path) -> ([(ast, new-ast)], errors, [], [])
    with
      (ast', old-defs, old-uses, _, _, _) := <analyze-top> (ast, path, project-path);
      _{old-uri} := <collect-one(origin-equal(|selected-name))> ast';
      new-uri    := <get-new-uri(|newname)> old-uri
    with
      if <index-get> Def(new-uri) then
        errors := ["A definition with this name already exists"]
      else
        new-ast  := <topdown(try(rename(|old-uri, newname)))> ast';
        (_, new-defs, new-uses, _, _, _) := <analyze-top> (<strip-annos> new-ast, path, project-path);
        comparison := <zip> (<conc> (old-defs, old-uses), <conc> (new-defs, new-uses));
        errors     := <filter(rename-error(|old-uri, new-uri))> comparison
      end

  rename(|before-uri, after-name):
    a{before-uri} -> after-name
  
  get-new-uri(|new-name):
    [namespace, name | ancestor] -> [namespace, new-name | ancestor]

  rename-error(|old-uri, new-uri):
    (entry1, entry2) -> (entry1, error)
    where
      uri1 := <get-uri> entry1;
      uri2 := <get-uri> entry2;
      if <is-uri-descendant-of> (uri1, old-uri) then
        not(
          <is-uri-descendant-of> (uri2, new-uri);
          <is-uri-descendant-same(|<length> old-uri)> (uri1, uri2)
        );
        error := "New name collides with existing name"
      else
        (not(!uri1 => uri2) <+ !uri2 => new-uri);
        error := "Existing name collides with new name"
      end

  is-uri-descendant-of:
    ([namespace-descendant | uri-descendant], [namespace-ancestor | uri-ancestor]) ->
    <is-uri-descendant-of'> (uri-descendant, uri-ancestor)

  is-uri-descendant-of':
    (uri-descendant, uri-ancestor) -> <id>
    where
      eq
    <+
      <is-uri-descendant-of'> (<Tl> uri-descendant, uri-ancestor) 
 
  get-uri:
    Def(uri) -> uri
    
  get-uri:
    Use(uri, _) -> uri
  
  is-uri-descendant-same(|ancestor-length):
    (uri1, uri2) -> <id>
    where
      <eq> (<length> uri1, <length> uri2);
      (<length> uri1 => ancestor-length <+ <is-uri-descendant-same'(|ancestor-length)> (uri1, uri2))
    
  is-uri-descendant-same'(|ancestor-length):
    ([a | a*], [a | b*]) -> <id>
    where
      <length> a* => ancestor-length
    <+
      <is-uri-descendant-same'(|ancestor-length)> (a*, b*)
