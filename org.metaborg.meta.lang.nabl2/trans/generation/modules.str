module generation/modules

imports
  signatures/-
  libstrc

imports
  generation/rules
  generation/signatures
  generation/relations
  generation/resolution
    
rules // modules
  
  module-to-str:
    Module(n, s*) -> Module(n', [Imports(lib*)|s'*])
    with
      n'   := $[analysis/[n]]
    ; lib* := [
                Import("libstratego-gpp"),
                Import("runtime/tmpl/pp"),
                Import("libstratego-sglr"),
                Import("runtime/editor/annotations"),
                Import("libanalysis2/-"),
                Import("libanalysis2/positioning/-"),
                Import("libanalysis2/nabl2/-"),
                Import("signatures/libanalysis2/-"),
                Import("signatures/libanalysis2/equality/-"),
                Import("signatures/libanalysis2/namebinding/-"),
                Import("signatures/libanalysis2/positioning/-"),
                Import("signatures/libanalysis2/solver/-"),
                Import("signatures/libanalysis2/typechecking/-"),
                Import("pp/libanalysis2/-"),
                Import("pp/libanalysis2/namebinding/-"),
                Import("pp/libanalysis2/typechecking/-")
              ]
    ; s'* := <mapconcat(section-to-str)> s*
 
  section-to-str = ?Imports(_); MkSingleton <+ rules-to-str <+ signature-to-str <+ relations-to-str <+ resolution-to-str