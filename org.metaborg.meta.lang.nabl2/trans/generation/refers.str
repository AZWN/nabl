module generation-2/refers

imports

  include/NameBindingLanguage
  generation/namespaces
  generation-2/util

rules
	
  clauses-to-refers-strategy(|term,scope) =
    collect-strategies(filter(refers-clause-to-strategy(|term,scope)))

  refers-clause-to-strategy(|term,scope):
    RefClause([RefClausePart(_, NamespaceRef(CurrentLanguage(), ns),
                             name, _, Current(), NoWhere())])
      -> (|[ ~pos := <get-position> ~term
           ; ~ref := RefId(~ns',~name,~pos)
           ; ~decl := DeclVar(<NewDeclVar>)
           ; ~refers-c := [FRef(~ref,~scope), CResolves(~ref,~decl,~pos)]
           ; ~refers-a := [~ref]
          ]|, refers-c, refers-a)
    with
      ns'   := <ns-name;str-op0> ns;
      pos   := <newname;str-var> "pos";
      ref   := <newname;str-var> "ref";
      decl  := <newname;str-var> "decl";
      refers-c := <newname;str-list-var> "refers-c";
      refers-a := <newname;str-list-var> "refers-a"

  refers-clause-to-strategy(|term,scope):
    RefClause(_) -> <fail>
  with debug(!"IGNORED ")