module generation-2/defines

imports

  include/NameBindingLanguage
  generation/namespaces
  generation-2/util

rules
	
  clauses-to-defines-strategy(|term,scope) =
    collect-strategies(filter(defines-clause-to-strategy(|term,scope)))

  defines-clause-to-strategy(|term,scope):
    DefClause(_, _, NamespaceRef(CurrentLanguage(),ns),
              name, _, Current(), NoWhere())
      -> (|[ ~decl := DeclId(~ns',~name,<get-position> ~term)
           ; ~defines-c := [FDecl(~decl,~scope)]
           ; ~defines-a := [~decl]
          ]|, defines-c, defines-a)
    with
      ns'   := <ns-name;str-op0> ns;
      decl  := <newname;str-var> "decl";
      defines-c := <newname;str-list-var> "defines-c";
      defines-a := <newname;str-list-var> "defines-a"

  defines-clause-to-strategy(|term,scope):
    DefClause(_, _, _, _, _, _, _) -> <fail>
  with debug(!"IGNORED ")