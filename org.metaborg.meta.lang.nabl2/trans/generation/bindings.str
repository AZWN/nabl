module generation-2/bindings

imports
  
  libstrc
  include/NameBindingLanguage
  lib/editor-common.generated

  generation-2/scopes
  generation-2/defines
  generation-2/refers
  generation-2/imports
  generation-2/util

rules // binding rules

  bindings-to-rules:
    Bindings(r*) -> Rules(<map(binding-to-strategy)> r*)
 
  binding-to-strategy:
    BindingRule(pattern, _, clause*) ->
    |[ nabl-ts-constraint(|~scope):
    	   ~wpattern -> (~term'',[~scope-c, ~c, ~sub-c])
         with ?~term
            ; ~scope-s
            ; (~term',~sub-c) := <nabl-ts-traverse-children(|~scope')> ~term
         where ~pattern := ~term'
         with ~s
            ; a* := [~scope-a,~a]
            ; ~term'' := <add-annotations(|a*)> ~term'
    ]|
    with wpattern := <make-wild> pattern
       ; term := <newname;str-var> "term"
       ; term' := <newname;str-var> "term"
       ; term'' := <newname;str-var> "term"
       ; scope := <newname;str-var> "scope"
       ; (scope-s,scope',scope-c,scope-a) := <clauses-to-scopes-strategy(|scope)> clause*
       ; sub-c := <newname;str-list-var> "sub-c"
    	 ; (s,c,a) := <collect-strategies( ![ <clauses-to-defines-strategy(|term',scope)>
    	                                    , <clauses-to-refers-strategy(|term',scope)>
    	                                    , <clauses-to-imports-strategy(|term',scope')>
    	                                    ] )> clause*