module rules/core/Facts

imports 

  common/Identifiers
  terms/Terms 
  terms/Vars  
  rules/core/Constraints
  rules/core/Scopes
  
context-free syntax

  Fact.NewScope = <new scope <Var> in <ScopeRef>>

context-free syntax

  Fact.Declaration = <declares <Binder> in <ScopeRef> <AssocScope>>
  Fact.Reference   = <references <Binder> in <ScopeRef>>

  Binder.Bind = <<Namespace> <Term>>
  
  Namespace.Name      = 
  Namespace.Namespace = <<Id>::>
  
  AssocScope.None  = 
  AssocScope.Assoc = <with associated scope <ScopeRef>>
  
context-free syntax

  Fact.NamedImport  = <imports <Binder> into <ScopeRef> <Substitution>>
  Fact.DirectImport = <imports from <ScopeRef> into <ScopeRef> <Substitution>>

  Substitution.None  =
  Substitution.Subst = <with <Term>>

context-free syntax

  Fact.HasType = <declares <Term> : <Pattern>> 
  Fact.SubType = [declares [Pattern] <: [Pattern]] 
   
lexical syntax

  Keyword = "scope"
  Keyword = "declares"
  Keyword = "references"
  Keyword = "imports"
  Keyword = "with"
  Keyword = "without"
  Keyword = "new"
  Keyword = "from"