module constraints/Constraints

imports 

  terms/Terms 
  terms/Vars  
  constraints/Messages
  
context-free syntax

  BaseConstraint.Match   = [[VarRef] == [Pattern]] 
  BaseConstraint.HasType = <<VarRef> has type <Var>> 
  BaseConstraint.Resolves = <<VarRef> resolves to <Var>>
  // Proposition.InRelation = [[Term] [Relation] [Term]] 
  BaseConstraint.HasScope = <<Term> has associated scope <Var>>

  Constraint         = <<BaseConstraint>;>
  Constraint.Success = <<BaseConstraint> and <Message>;>
  Constraint.Failure = <<BaseConstraint> else <Message>;>  