Spec(
  [ Label("java/names/Main!EXT")
  , Label("java/names/Main!IMPL")
  , Label("java/names/Main!IMP_ST")
  , Label("java/names/Main!IMP_OD")
  , Label("java/names/Main!LEX")
  , Label("java/names/Main!PKGC")
  ]
, [Label("java/types/Main!withType"), Label("java/names/PackageNames!pkg"), Label("java/names/TypeNames!type"), Decl()]
, EOP()
, [ Rule(
      NoName()
    , C("statics!projectOk", [Var("s"){OfSort(SCOPE())}])
    , CConj(
        C("statics!builtinArrayLength", [Var("s"){OfSort(SCOPE())}], NoMessage())
      , C("statics!builtinObject", [Var("s"){OfSort(SCOPE())}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C("statics!fileOk", [Var("s"){OfSort(SCOPE())}, Var("compilationUnit"){OfSort(SORT("CompilationUnit"))}])
    , C("java/packages/CompilationUnits!compilationUnitOk", [Var("s"){OfSort(SCOPE())}, Var("compilationUnit"){OfSort(SORT("CompilationUnit"))}], NoMessage())
    )
  , Rule(NoName(), C("statics!builtinObject", [Var("s"){OfSort(SCOPE())}]), CTrue())
  , Rule(NoName(), C("statics!builtinArrayLength", [Var("s"){OfSort(SCOPE())}]), CTrue())
  , Rule(
      NoName()
    , C("java/expressions/Main!exprOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("Expression")))}, Var("out50"){OfSort(SORT("TYPE"))}])
    , CExists(
        [Var("wld83"){OfSort(SORT("TYPE"))}]
      , CConj(CEqual(Var("out50"){OfSort(SORT("TYPE"))}, Var("wld83"){OfSort(SORT("TYPE"))}, NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOptOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("Expression"))}], Var("xs_2"){OfSort(LIST(SORT("Expression")))}){OfSort(LIST(SORT("Expression")))}
        , Var("out51"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("y_1"){OfSort(SORT("TYPE"))}, Var("exprOk29"){OfSort(SORT("TYPE"))}, Var("exprOptOk1"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out51"){OfSort(SORT("TYPE"))}, Var("y_1"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("Expression"))}, Var("exprOk29"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("exprOk29"){OfSort(SORT("TYPE"))}, Var("y_1"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOptOk"
              , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("Expression")))}, Var("exprOptOk1"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("exprOptOk1"){OfSort(SORT("TYPE"))}, Var("y_1"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/Main!exprListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("Expression")))}, Var("out52"){OfSort(LIST(SORT("TYPE")))}])
    , CConj(CEqual(Var("out52"){OfSort(LIST(SORT("TYPE")))}, List([]){OfSort(LIST(SORT("TYPE")))}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprListOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("Expression"))}], Var("xs_2"){OfSort(LIST(SORT("Expression")))}){OfSort(LIST(SORT("Expression")))}
        , Var("out53"){OfSort(LIST(SORT("TYPE")))}
        ]
      )
    , CExists(
        [Var("y_1"){OfSort(SORT("TYPE"))}, Var("ys_1"){OfSort(LIST(SORT("TYPE")))}, Var("exprOk30"){OfSort(SORT("TYPE"))}, Var("exprListOk4"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          CEqual(
            Var("out53"){OfSort(LIST(SORT("TYPE")))}
          , ListTail([Var("y_1"){OfSort(SORT("TYPE"))}], Var("ys_1"){OfSort(LIST(SORT("TYPE")))}){OfSort(LIST(SORT("TYPE")))}
          , NoMessage()
          )
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("Expression"))}, Var("exprOk30"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("exprOk30"){OfSort(SORT("TYPE"))}, Var("y_1"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprListOk"
              , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk4"){OfSort(LIST(SORT("TYPE")))}]
              , NoMessage()
              )
            , CEqual(Var("exprListOk4"){OfSort(LIST(SORT("TYPE")))}, Var("ys_1"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodReferenceRType"
          , [Var("refType"){OfSort(SORT("ReferenceType"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}]
          ){OfSort(SORT("Expression"))}
        , Var("out111"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld223"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out111"){OfSort(SORT("TYPE"))}, Var("wld223"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodReferenceExpr"
          , [Var("expr"){OfSort(SORT("Expression"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}]
          ){OfSort(SORT("Expression"))}
        , Var("out112"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprOk91"){OfSort(SORT("TYPE"))}, Var("wld224"){OfSort(SORT("TYPE"))}, Var("wld225"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out112"){OfSort(SORT("TYPE"))}, Var("wld224"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk91"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld225"){OfSort(SORT("TYPE"))}, Var("exprOk91"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("MethodReferenceSuper", [Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("Expression"))}
        , Var("out113"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld226"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out113"){OfSort(SORT("TYPE"))}, Var("wld226"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodReferenceQSuper"
          , [Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}]
          ){OfSort(SORT("Expression"))}
        , Var("out114"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("typeNameOk10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld227"){OfSort(SORT("TYPE"))}, Var("wld228"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CEqual(Var("out114"){OfSort(SORT("TYPE"))}, Var("wld227"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/TypeNames!typeNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
              , NoMessage()
              )
            , CEqual(Var("typeNameOk10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld228"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("MethodReferenceCType", [Var("clsType"){OfSort(SORT("ClassType"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]){OfSort(SORT("Expression"))}
        , Var("out115"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld229"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out115"){OfSort(SORT("TYPE"))}, Var("wld229"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("MethodReferenceAType", [Var("arrayType"){OfSort(SORT("ArrayType"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]){OfSort(SORT("Expression"))}
        , Var("out116"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld230"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out116"){OfSort(SORT("TYPE"))}, Var("wld230"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!arrayTypeOk", [Var("s"){OfSort(SCOPE())}, Var("arrayType"){OfSort(SORT("ArrayType"))}], NoMessage())
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "AnnoDec"
          , [Var("intfModList"){OfSort(LIST(SORT("InterfaceModifier")))}, Var("id"){OfSort(SORT("Id"))}, Var("annoTypeMemDeclList"){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}]
          ){OfSort(SORT("AnnotationTypeDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_anno"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/InterfaceDeclarations!intfModListOk", [Var("s"){OfSort(SCOPE())}, Var("intfModList"){OfSort(LIST(SORT("InterfaceModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_anno"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_anno"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/interfaces/AnnotationTypes!annoTypeMemDeclListOk", [Var("s_anno"){OfSort(SCOPE())}, Var("annoTypeMemDeclList"){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/AnnotationTypes!annoTypeMemDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("AnnotationTypeMemberDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!annoTypeMemDeclOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("AnnotationTypeMemberDeclaration"))}], NoMessage())
      , C("java/interfaces/AnnotationTypes!annoTypeMemDeclListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("AnnotationTypeMemberDeclaration")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AnnotationTypeElementDeclaration2AnnotationTypeMemberDeclaration", [Var("annoTypeElemDecl"){OfSort(SORT("AnnotationTypeElementDeclaration"))}]){OfSort(SORT("AnnotationTypeMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!annoTypeElemDeclOk", [Var("s"){OfSort(SCOPE())}, Var("annoTypeElemDecl"){OfSort(SORT("AnnotationTypeElementDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ConstantDeclaration2AnnotationTypeMemberDeclaration", [Var("constDecl"){OfSort(SORT("ConstantDeclaration"))}]){OfSort(SORT("AnnotationTypeMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/ConstantDeclarations!constDeclOk", [Var("s"){OfSort(SCOPE())}, Var("constDecl"){OfSort(SORT("ConstantDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassDeclaration2AnnotationTypeMemberDeclaration", [Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}]){OfSort(SORT("AnnotationTypeMemberDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InterfaceDeclaration2AnnotationTypeMemberDeclaration", [Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}]){OfSort(SORT("AnnotationTypeMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfDeclOk", [Var("s"){OfSort(SCOPE())}, Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SemiColon2AnnotationTypeMemberDeclaration", [Wld(){OfSort(SORT("SemiColon"))}]){OfSort(SORT("AnnotationTypeMemberDeclaration"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeElemDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "AnnotationTypeElementDecl"
          , [ Var("annoTypeElemModList"){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}
            , Var("unannType"){OfSort(SORT("UnannType"))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}
            , Var("defaultValOpt"){OfSort(LIST(SORT("DefaultValue")))}
            ]
          ){OfSort(SORT("AnnotationTypeElementDeclaration"))}
        ]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!annoTypeElemModListOk", [Var("s"){OfSort(SCOPE())}, Var("annoTypeElemModList"){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!annDimsEmptyOk", [Var("s"){OfSort(SCOPE())}, Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}], NoMessage())
          , CConj(
              C("java/interfaces/AnnotationTypes!defaultValOptOk", [Var("s"){OfSort(SCOPE())}, Var("defaultValOpt"){OfSort(LIST(SORT("DefaultValue")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/AnnotationTypes!annoTypeElemModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeElemModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("AnnotationTypeElementModifier"))}], Var("xs_2"){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!annoTypeElemModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("AnnotationTypeElementModifier"))}], NoMessage())
      , C("java/interfaces/AnnotationTypes!annoTypeElemModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("AnnotationTypeElementModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeElemModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2AnnotationTypeElementModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("AnnotationTypeElementModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeElemModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2AnnotationTypeElementModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("AnnotationTypeElementModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!annoTypeElemModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Abstract2AnnotationTypeElementModifier", [Wld(){OfSort(SORT("Abstract"))}]){OfSort(SORT("AnnotationTypeElementModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/interfaces/AnnotationTypes!defaultValOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("DefaultValue")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!defaultValOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("DefaultValue"))}], Var("xs_2"){OfSort(LIST(SORT("DefaultValue")))}){OfSort(LIST(SORT("DefaultValue")))}]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!defaultValOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("DefaultValue"))}], NoMessage())
      , C("java/interfaces/AnnotationTypes!defaultValOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("DefaultValue")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/AnnotationTypes!defaultValOk"
      , [Var("s"){OfSort(SCOPE())}, Op("DefaultVal", [Var("elemVal"){OfSort(SORT("ElementValue"))}]){OfSort(SORT("DefaultValue"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValOk", [Var("s"){OfSort(SCOPE())}, Var("elemVal"){OfSort(SORT("ElementValue"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/literals/StringLiterals!stringLitOk", [Op("StringLiteral", [Wld(){OfSort(STRING())}]){OfSort(SORT("StringLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!exprNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExpressionName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("ExpressionName"))}, Var("out30"){OfSort(TUPLE([]))}]
      )
    , CExists(
        [Var("resolveLexicalExprName0"){OfSort(TUPLE([]))}, Var("wld54"){OfSort(TUPLE([]))}, Var("wld55"){OfSort(TUPLE([]))}]
      , CConj(
          CEqual(Var("out30"){OfSort(TUPLE([]))}, Var("wld54"){OfSort(TUPLE([]))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/ExpressionNames!resolveLexicalExprName"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalExprName0"){OfSort(TUPLE([]))}]
              , NoMessage()
              )
            , CEqual(Var("resolveLexicalExprName0"){OfSort(TUPLE([]))}, Var("wld55"){OfSort(TUPLE([]))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!exprNameOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("ExpressionName", [Var("ambName"){OfSort(SORT("AmbiguousName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("ExpressionName"))}
        , Var("out31"){OfSort(TUPLE([]))}
        ]
      )
    , CExists(
        [Var("wld56"){OfSort(TUPLE([]))}]
      , CConj(
          CEqual(Var("out31"){OfSort(TUPLE([]))}, Var("wld56"){OfSort(TUPLE([]))}, NoMessage())
        , CExists(
            [ Var("s_amb"){OfSort(SCOPE())}
            , Var("ambNameOk0"){OfSort(TUPLE([]))}
            , Var("resolveMemberExprName0"){OfSort(TUPLE([]))}
            , Var("wld57"){OfSort(TUPLE([]))}
            , Var("wld58"){OfSort(TUPLE([]))}
            ]
          , CConj(
              CConj(
                C(
                  "java/names/ExpressionNames!ambNameOk"
                , [Var("s"){OfSort(SCOPE())}, Var("ambName"){OfSort(SORT("AmbiguousName"))}, Var("ambNameOk0"){OfSort(TUPLE([]))}]
                , NoMessage()
                )
              , CEqual(Var("ambNameOk0"){OfSort(TUPLE([]))}, Var("wld57"){OfSort(TUPLE([]))}, NoMessage())
              )
            , CConj(
                CConj(
                  C(
                    "java/names/ExpressionNames!resolveMemberExprName"
                  , [Var("s_amb"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberExprName0"){OfSort(TUPLE([]))}]
                  , NoMessage()
                  )
                , CEqual(Var("resolveMemberExprName0"){OfSort(TUPLE([]))}, Var("wld58"){OfSort(TUPLE([]))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!resolveLexicalExprName"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out32"){OfSort(TUPLE([]))}]
      )
    , CConj(CEqual(Var("out32"){OfSort(TUPLE([]))}, Tuple([]){OfSort(TUPLE([]))}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!resolveMemberExprName"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out33"){OfSort(TUPLE([]))}]
      )
    , CConj(CEqual(Var("out33"){OfSort(TUPLE([]))}, Tuple([]){OfSort(TUPLE([]))}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!ambNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AmbiguousName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("AmbiguousName"))}, Var("out34"){OfSort(TUPLE([]))}]
      )
    , CExists(
        [Var("wld59"){OfSort(TUPLE([]))}]
      , CConj(CEqual(Var("out34"){OfSort(TUPLE([]))}, Var("wld59"){OfSort(TUPLE([]))}, NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/ExpressionNames!ambNameOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AmbiguousName", [Var("ambName"){OfSort(SORT("AmbiguousName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("AmbiguousName"))}
        , Var("out35"){OfSort(TUPLE([]))}
        ]
      )
    , CExists(
        [Var("ambNameOk1"){OfSort(TUPLE([]))}, Var("wld60"){OfSort(TUPLE([]))}, Var("wld61"){OfSort(TUPLE([]))}]
      , CConj(
          CEqual(Var("out35"){OfSort(TUPLE([]))}, Var("wld60"){OfSort(TUPLE([]))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/ExpressionNames!ambNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("ambName"){OfSort(SORT("AmbiguousName"))}, Var("ambNameOk1"){OfSort(TUPLE([]))}]
              , NoMessage()
              )
            , CEqual(Var("ambNameOk1"){OfSort(TUPLE([]))}, Var("wld61"){OfSort(TUPLE([]))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!refTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassType2ReferenceType", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("ReferenceType"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!refTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayType2ReferenceType", [Var("arrayType"){OfSort(SORT("ArrayType"))}]){OfSort(SORT("ReferenceType"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!arrayTypeOk", [Var("s"){OfSort(SCOPE())}, Var("arrayType"){OfSort(SORT("ArrayType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/types/ReferenceTypes!clsTypeListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ClassType")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!clsTypeListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ClassType"))}], Var("xs_2"){OfSort(LIST(SORT("ClassType")))}){OfSort(LIST(SORT("ClassType")))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ClassType"))}], NoMessage())
      , C("java/types/ReferenceTypes!clsTypeListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ClassType")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!clsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ClassType"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("ClassType"))}
        ]
      )
    , CExists(
        [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("resolveLexicalTypeNames3"){ OfSort(
                                                                                                                                                                           LIST(
                                                                                                                                                                             TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                                                                           )
                                                                                                                                                                         )
                                                                                                                                                                       }]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/TypeNames!singleTypeDecl"
              , [Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames3"){ OfSort(
                                                                                   LIST(
                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                   )
                                                                                 )
                                                                               }, Var("singleTypeDecl6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/names/TypeNames!resolveLexicalTypeNames"
                , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames3"){ OfSort(
                                                                                                                LIST(
                                                                                                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                )
                                                                                                              )
                                                                                                            }]
                , NoMessage()
                )
              , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
              )
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!clsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ClassOrInterfaceTypeMember"
          , [Var("clsType"){OfSort(SORT("ClassType"))}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("ClassType"))}
        ]
      )
    , CExists(
        [ Var("s_pkgOrCls"){OfSort(SCOPE())}
        , Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("pkgOrClsTypeOk0"){OfSort(SCOPE())}
        , Var("singleTypeDecl7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("resolveMemberTypeNames3"){ OfSort(
                                            LIST(
                                              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                            )
                                          )
                                        }
        ]
      , CConj(
          CConj(
            C(
              "java/types/ReferenceTypes!pkgOrClsTypeOk"
            , [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}, Var("pkgOrClsTypeOk0"){OfSort(SCOPE())}]
            , NoMessage()
            )
          , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrClsTypeOk0"){OfSort(SCOPE())}, NoMessage())
          )
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              CConj(
                C(
                  "java/names/TypeNames!singleTypeDecl"
                , [Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames3"){ OfSort(
                                                                                    LIST(
                                                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                    )
                                                                                  )
                                                                                }, Var("singleTypeDecl7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
                , NoMessage()
                )
              , CConj(
                  C(
                    "java/names/TypeNames!resolveMemberTypeNames"
                  , [Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames3"){ OfSort(
                                                                                                                          LIST(
                                                                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                          )
                                                                                                                        )
                                                                                                                      }]
                  , NoMessage()
                  )
                , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
                )
              )
            , CConj(
                C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!pkgOrClsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ClassType"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("ClassType"))}
        , Var("out44"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope5"){OfSort(SCOPE())}, Var("resolveLexicalPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out44"){OfSort(SCOPE())}, Var("s_pkgOrCls"){OfSort(SCOPE())}, NoMessage())
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              CConj(
                C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("resolveLexicalPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope5"){OfSort(SCOPE())}], NoMessage())
              , CConj(
                  C(
                    "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName"
                  , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                  , NoMessage()
                  )
                , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope5"){OfSort(SCOPE())}, NoMessage())
                )
              )
            , CConj(
                C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!pkgOrClsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ClassOrInterfaceTypeMember"
          , [Var("clsType"){OfSort(SORT("ClassType"))}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("ClassType"))}
        , Var("out45"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("s_pkgOrCls"){OfSort(SCOPE())}]
      , CConj(
          CEqual(Var("out45"){OfSort(SCOPE())}, Var("s_pkgOrCls"){OfSort(SCOPE())}, NoMessage())
        , CExists(
            [Var("s_pkgOrCls'"){OfSort(SCOPE())}, Var("pkgOrClsTypeOk1"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope6"){OfSort(SCOPE())}, Var("resolveMemberPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
          , CConj(
              CConj(
                C(
                  "java/types/ReferenceTypes!pkgOrClsTypeOk"
                , [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}, Var("pkgOrClsTypeOk1"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CEqual(Var("s_pkgOrCls'"){OfSort(SCOPE())}, Var("pkgOrClsTypeOk1"){OfSort(SCOPE())}, NoMessage())
              )
            , CConj(
                C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
              , CConj(
                  CConj(
                    C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("resolveMemberPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope6"){OfSort(SCOPE())}], NoMessage())
                  , CConj(
                      C(
                        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName"
                      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgOrTypeName4"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                      , NoMessage()
                      )
                    , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope6"){OfSort(SCOPE())}, NoMessage())
                    )
                  )
                , CConj(
                    C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!typeVarOk"
      , [Var("s"){OfSort(SCOPE())}, Op("TypeVar", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("TypeVariable"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!arrayTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayTypePrimitive", [Var("primType"){OfSort(SORT("PrimitiveType"))}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}]){OfSort(SORT("ArrayType"))}]
      )
    , CConj(
        C("java/types/PrimitiveTypes!primTypeOk", [Var("s"){OfSort(SCOPE())}, Var("primType"){OfSort(SORT("PrimitiveType"))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!annDimsOk", [Var("s"){OfSort(SCOPE())}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!arrayTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayTypeClassType", [Var("clsType"){OfSort(SORT("ClassType"))}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}]){OfSort(SORT("ArrayType"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!annDimsOk", [Var("s"){OfSort(SCOPE())}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!annDimsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AnnotatedDims2AnnotatedDims", [Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}]){OfSort(SORT("AnnotatedDims"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!annDimListOk", [Var("s"){OfSort(SCOPE())}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!annDimsEmptyOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AnnotatedDims2AnnotatedDimsEmpty", [Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}]){OfSort(SORT("AnnotatedDimsEmpty"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!annDimListOk", [Var("s"){OfSort(SCOPE())}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/types/ReferenceTypes!annDimListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("AnnotatedDim")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!annDimListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("AnnotatedDim"))}], Var("xs_2"){OfSort(LIST(SORT("AnnotatedDim")))}){OfSort(LIST(SORT("AnnotatedDim")))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!annDimOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("AnnotatedDim"))}], NoMessage())
      , C("java/types/ReferenceTypes!annDimListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!annDimOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AnnotateDim", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}]){OfSort(SORT("AnnotatedDim"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!typeScope"
      , [Op("CLASS", [Var("s_cls"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}, Var("out46"){OfSort(SCOPE())}]
      )
    , CConj(CEqual(Var("out46"){OfSort(SCOPE())}, Var("s_cls"){OfSort(SCOPE())}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!typeScope"
      , [Op("INTF", [Var("s_intf"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}, Var("out47"){OfSort(SCOPE())}]
      )
    , CConj(CEqual(Var("out47"){OfSort(SCOPE())}, Var("s_intf"){OfSort(SCOPE())}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/types/ReferenceTypes!typeScope"
      , [Op("ENUM", [Var("s_enum"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}, Var("out48"){OfSort(SCOPE())}]
      )
    , CConj(CEqual(Var("out48"){OfSort(SCOPE())}, Var("s_enum"){OfSort(SCOPE())}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "NormalInterface"
          , [ Var("intfModList"){OfSort(LIST(SORT("InterfaceModifier")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}
            , Var("extendsIntfsOpt"){OfSort(LIST(SORT("ExtendsInterfaces")))}
            , Var("intfMemDeclList"){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}
            ]
          ){OfSort(SORT("InterfaceDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_intf"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/InterfaceDeclarations!intfModListOk", [Var("s"){OfSort(SCOPE())}, Var("intfModList"){OfSort(LIST(SORT("InterfaceModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_intf"){OfSort(SCOPE())}])
          , CConj(
              C(
                "java/names/TypeNames!declareType"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Op("INTF", [Var("s_intf"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/classes/ClassDeclarations!typeParamsOptOk"
                , [Var("s"){OfSort(SCOPE())}, Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}, Var("s_intf"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  CTellEdge(Var("s_intf"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
                , CConj(
                    C("java/interfaces/InterfaceDeclarations!extendsIntfsOptOk", [Var("s"){OfSort(SCOPE())}, Var("extendsIntfsOpt"){OfSort(LIST(SORT("ExtendsInterfaces")))}], NoMessage())
                  , CConj(
                      C("java/interfaces/InterfaceDeclarations!intfMemDeclListOk", [Var("s_intf"){OfSort(SCOPE())}, Var("intfMemDeclList"){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}], NoMessage())
                    , CTrue()
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AnnotationTypeDeclaration2InterfaceDeclaration", [Var("annoTypeDecl"){OfSort(SORT("AnnotationTypeDeclaration"))}]){OfSort(SORT("InterfaceDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/AnnotationTypes!annoTypeDeclOk", [Var("s"){OfSort(SCOPE())}, Var("annoTypeDecl"){OfSort(SORT("AnnotationTypeDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/InterfaceDeclarations!intfModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("InterfaceModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("InterfaceModifier"))}], Var("xs_2"){OfSort(LIST(SORT("InterfaceModifier")))}){OfSort(LIST(SORT("InterfaceModifier")))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("InterfaceModifier"))}], NoMessage())
      , C("java/interfaces/InterfaceDeclarations!intfModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("InterfaceModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2InterfaceModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2InterfaceModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Protected2InterfaceModifier", [Wld(){OfSort(SORT("Protected"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Private2InterfaceModifier", [Wld(){OfSort(SORT("Private"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Abstract2InterfaceModifier", [Wld(){OfSort(SORT("Abstract"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2InterfaceModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Strictfp2InterfaceModifier", [Wld(){OfSort(SORT("Strictfp"))}]){OfSort(SORT("InterfaceModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/interfaces/InterfaceDeclarations!extendsIntfsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ExtendsInterfaces")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!extendsIntfsOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ExtendsInterfaces"))}], Var("xs_2"){OfSort(LIST(SORT("ExtendsInterfaces")))}){OfSort(LIST(SORT("ExtendsInterfaces")))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!extendsIntfsOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ExtendsInterfaces"))}], NoMessage())
      , C("java/interfaces/InterfaceDeclarations!extendsIntfsOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ExtendsInterfaces")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!extendsIntfsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExtendsInterfaces", [Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}]){OfSort(SORT("ExtendsInterfaces"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeListOk", [Var("s"){OfSort(SCOPE())}, Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/InterfaceDeclarations!intfMemDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("InterfaceMemberDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfMemDeclOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("InterfaceMemberDeclaration"))}], NoMessage())
      , C("java/interfaces/InterfaceDeclarations!intfMemDeclListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("InterfaceMemberDeclaration")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ConstantDeclaration2InterfaceMemberDeclaration", [Var("constDecl"){OfSort(SORT("ConstantDeclaration"))}]){OfSort(SORT("InterfaceMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/ConstantDeclarations!constDeclOk", [Var("s"){OfSort(SCOPE())}, Var("constDecl"){OfSort(SORT("ConstantDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InterfaceMethodDeclaration2InterfaceMemberDeclaration", [Var("intfMthdDecl"){OfSort(SORT("InterfaceMethodDeclaration"))}]){OfSort(SORT("InterfaceMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/InterfaceMethodDeclarations!intfMthdDeclOk", [Var("s"){OfSort(SCOPE())}, Var("intfMthdDecl"){OfSort(SORT("InterfaceMethodDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassDeclaration2InterfaceMemberDeclaration", [Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}]){OfSort(SORT("InterfaceMemberDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InterfaceDeclaration2InterfaceMemberDeclaration", [Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}]){OfSort(SORT("InterfaceMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfDeclOk", [Var("s"){OfSort(SCOPE())}, Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceDeclarations!intfMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SemiColon2InterfaceMemberDeclaration", [Wld(){OfSort(SORT("SemiColon"))}]){OfSort(SORT("InterfaceMemberDeclaration"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/IntegerLiterals!intLitOk", [Op("Deci", [Wld(){OfSort(STRING())}]){OfSort(SORT("IntLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/IntegerLiterals!intLitOk", [Op("Hexa", [Wld(){OfSort(STRING())}]){OfSort(SORT("IntLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/IntegerLiterals!intLitOk", [Op("Octa", [Wld(){OfSort(STRING())}]){OfSort(SORT("IntLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/IntegerLiterals!intLitOk", [Op("Bin", [Wld(){OfSort(STRING())}]){OfSort(SORT("IntLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Blocks!blkOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Block", [Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}]){OfSort(SORT("Block"))}]
      )
    , CConj(
        C("java/statements/Blocks!blkStmtListOk", [Var("s"){OfSort(SCOPE())}, Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Blocks!blkStmtListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("BlockStatement")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Blocks!blkStmtListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("BlockStatement"))}], Var("xs_2"){OfSort(LIST(SORT("BlockStatement")))}){OfSort(LIST(SORT("BlockStatement")))}]
      )
    , CConj(
        C("java/statements/Blocks!blkStmtOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("BlockStatement"))}], NoMessage())
      , C("java/statements/Blocks!blkStmtListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("BlockStatement")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Blocks!blkStmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("LocalVariableDeclarationStatement2BlockStatement", [Var("localVarDeclStmt"){OfSort(SORT("LocalVariableDeclarationStatement"))}]){OfSort(SORT("BlockStatement"))}]
      )
    , CConj(
        C("java/statements/LocalVariableDeclarations!localVarDeclStmtOk", [Var("s"){OfSort(SCOPE())}, Var("localVarDeclStmt"){OfSort(SORT("LocalVariableDeclarationStatement"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Blocks!blkStmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassDeclaration2BlockStatement", [Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}]){OfSort(SORT("BlockStatement"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Blocks!blkStmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Statement2BlockStatement", [Var("stmt"){OfSort(SORT("Statement"))}]){OfSort(SORT("BlockStatement"))}]
      )
    , CConj(
        C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/types/ParameterizedTypes!typeArgsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("TypeArguments")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!typeArgsOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("TypeArguments"))}], Var("xs_2"){OfSort(LIST(SORT("TypeArguments")))}){OfSort(LIST(SORT("TypeArguments")))}]
      )
    , CConj(
        C("java/types/ParameterizedTypes!typeArgsOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("TypeArguments"))}], NoMessage())
      , C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!typeArgsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("TypeArguments", [Var("typeArgList"){OfSort(LIST(SORT("TypeArgument")))}]){OfSort(SORT("TypeArguments"))}]
      )
    , CConj(
        C("java/types/ParameterizedTypes!typeArgListOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgList"){OfSort(LIST(SORT("TypeArgument")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/types/ParameterizedTypes!typeArgListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("TypeArgument")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!typeArgListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("TypeArgument"))}], Var("xs_2"){OfSort(LIST(SORT("TypeArgument")))}){OfSort(LIST(SORT("TypeArgument")))}]
      )
    , CConj(
        C("java/types/ParameterizedTypes!typeArgOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("TypeArgument"))}], NoMessage())
      , C("java/types/ParameterizedTypes!typeArgListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("TypeArgument")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!typeArgOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ReferenceType2TypeArgument", [Var("refType"){OfSort(SORT("ReferenceType"))}]){OfSort(SORT("TypeArgument"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!typeArgOk"
      , [Var("s"){OfSort(SCOPE())}, Op("WildCard2TypeArgument", [Var("wildCard"){OfSort(SORT("WildCard"))}]){OfSort(SORT("TypeArgument"))}]
      )
    , CConj(
        C("java/types/ParameterizedTypes!wildCardOk", [Var("s"){OfSort(SCOPE())}, Var("wildCard"){OfSort(SORT("WildCard"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!wildCardOk"
      , [Var("s"){OfSort(SCOPE())}, Op("WildCard", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}]){OfSort(SORT("WildCard"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!wildCardOk"
      , [Var("s"){OfSort(SCOPE())}, Op("WildCardExtends", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("refType"){OfSort(SORT("ReferenceType"))}]){OfSort(SORT("WildCard"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/ParameterizedTypes!wildCardOk"
      , [Var("s"){OfSort(SCOPE())}, Op("WildCardSuper", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("refType"){OfSort(SORT("ReferenceType"))}]){OfSort(SORT("WildCard"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/packages/PackageDeclarations!pkgDeclOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("PackageDeclaration")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/packages/PackageDeclarations!pkgDeclOptOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("PackageDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("PackageDeclaration")))}){OfSort(LIST(SORT("PackageDeclaration")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/packages/PackageDeclarations!pkgDeclOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("PackageDeclaration"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/packages/PackageDeclarations!pkgDeclOptOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("PackageDeclaration")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/PackageDeclarations!pkgDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("PackageDeclaration", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("idList"){OfSort(LIST(SORT("Id")))}]){OfSort(SORT("PackageDeclaration"))}
        , Var("s_pkg"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("wld203"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("wld203"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CConj(
            C(
              "java/packages/PackageDeclarations!declarePkgIds"
            , [Var("s"){OfSort(SCOPE())}, Var("idList"){OfSort(LIST(SORT("Id")))}, Var("s_pkg"){OfSort(SCOPE())}]
            , NoMessage()
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/PackageDeclarations!declarePkgIds"
      , [Var("s"){OfSort(SCOPE())}, List([Var("id"){OfSort(SORT("Id"))}]){OfSort(LIST(SORT("Id")))}, Var("s_pkg"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("resolveMemberPkgNames2"){ OfSort(
                                          LIST(
                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                          )
                                        )
                                      }]
      , CConj(
          C(
            "java/names/PackageNames!declarePkg"
          , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]
          , NoMessage()
          )
        , CConj(
            CConj(
              C(
                "java/names/PackageNames!resolveMemberPkgNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames2"){ OfSort(
                                                                                                            LIST(
                                                                                                              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                            )
                                                                                                          )
                                                                                                        }]
              , NoMessage()
              )
            , C(
                "java/names/PackageNames!composePkgPathList"
              , [Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}, Var("resolveMemberPkgNames2"){ OfSort(
                                                                                                                LIST(
                                                                                                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                )
                                                                                                              )
                                                                                                            }]
              , NoMessage()
              )
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/PackageDeclarations!declarePkgIds"
      , [ Var("s"){OfSort(SCOPE())}
        , ListTail([Var("id"){OfSort(SORT("Id"))}], Var("idList"){OfSort(LIST(SORT("Id")))}){OfSort(LIST(SORT("Id")))}
        , Var("s_pkg"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("s_pkg'"){OfSort(SCOPE())}, Var("resolveMemberPkgNames3"){ OfSort(
                                                                          LIST(
                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                          )
                                                                        )
                                                                      }]
      , CConj(
          CNew([Var("s_pkg'"){OfSort(SCOPE())}])
        , CConj(
            C(
              "java/names/PackageNames!declarePkg"
            , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("s_pkg'"){OfSort(SCOPE())}]
            , NoMessage()
            )
          , CConj(
              CConj(
                C(
                  "java/names/PackageNames!resolveMemberPkgNames"
                , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames3"){ OfSort(
                                                                                                              LIST(
                                                                                                                TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                              )
                                                                                                            )
                                                                                                          }]
                , NoMessage()
                )
              , C(
                  "java/names/PackageNames!composePkgPathList"
                , [Var("id"){OfSort(SORT("Id"))}, Var("s_pkg'"){OfSort(SCOPE())}, Var("resolveMemberPkgNames3"){ OfSort(
                                                                                                                   LIST(
                                                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                   )
                                                                                                                 )
                                                                                                               }]
                , NoMessage()
                )
              )
            , CConj(
                C(
                  "java/packages/PackageDeclarations!declarePkgIds"
                , [Var("s_pkg'"){OfSort(SCOPE())}, Var("idList"){OfSort(LIST(SORT("Id")))}, Var("s_pkg"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Invoke", [Var("mthdName"){OfSort(SORT("MethodName"))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]){OfSort(SORT("Expression"))}
        , Var("out54"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("mthdNameOk0"){OfSort(TUPLE([]))}
        , Var("exprListOk5"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld84"){OfSort(SORT("TYPE"))}
        , Var("wld85"){OfSort(TUPLE([]))}
        , Var("wld86"){OfSort(LIST(SORT("TYPE")))}
        ]
      , CConj(
          CEqual(Var("out54"){OfSort(SORT("TYPE"))}, Var("wld84"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/MethodNames!mthdNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("mthdName"){OfSort(SORT("MethodName"))}, Var("mthdNameOk0"){OfSort(TUPLE([]))}]
              , NoMessage()
              )
            , CEqual(Var("mthdNameOk0"){OfSort(TUPLE([]))}, Var("wld85"){OfSort(TUPLE([]))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprListOk"
                , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk5"){OfSort(LIST(SORT("TYPE")))}]
                , NoMessage()
                )
              , CEqual(Var("wld86"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk5"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "InvokeQExp"
          , [Var("expr"){OfSort(SORT("Expression"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]
          ){OfSort(SORT("Expression"))}
        , Var("out55"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk31"){OfSort(SORT("TYPE"))}
        , Var("exprListOk6"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld87"){OfSort(SORT("TYPE"))}
        , Var("wld88"){OfSort(SORT("TYPE"))}
        , Var("wld89"){OfSort(LIST(SORT("TYPE")))}
        ]
      , CConj(
          CEqual(Var("out55"){OfSort(SORT("TYPE"))}, Var("wld87"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk31"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld88"){OfSort(SORT("TYPE"))}, Var("exprOk31"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprListOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk6"){OfSort(LIST(SORT("TYPE")))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld89"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk6"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "InvokeSuper"
          , [Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]
          ){OfSort(SORT("Expression"))}
        , Var("out56"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprListOk7"){OfSort(LIST(SORT("TYPE")))}, Var("wld90"){OfSort(SORT("TYPE"))}, Var("wld91"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          CEqual(Var("out56"){OfSort(SORT("TYPE"))}, Var("wld90"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprListOk"
                , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk7"){OfSort(LIST(SORT("TYPE")))}]
                , NoMessage()
                )
              , CEqual(Var("wld91"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk7"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "InvokeQSuper"
          , [Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("id"){OfSort(SORT("Id"))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]
          ){OfSort(SORT("Expression"))}
        , Var("out57"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("typeNameOk7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("exprListOk8"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld92"){OfSort(SORT("TYPE"))}
        , Var("wld93"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("wld94"){OfSort(LIST(SORT("TYPE")))}
        ]
      , CConj(
          CEqual(Var("out57"){OfSort(SORT("TYPE"))}, Var("wld92"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/TypeNames!typeNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
              , NoMessage()
              )
            , CEqual(Var("typeNameOk7"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld93"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprListOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk8"){OfSort(LIST(SORT("TYPE")))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld94"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk8"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Mul", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out80"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk45"){OfSort(SORT("TYPE"))}
        , Var("exprOk46"){OfSort(SORT("TYPE"))}
        , Var("wld137"){OfSort(SORT("TYPE"))}
        , Var("wld138"){OfSort(SORT("TYPE"))}
        , Var("wld139"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out80"){OfSort(SORT("TYPE"))}, Var("wld137"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk45"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld138"){OfSort(SORT("TYPE"))}, Var("exprOk45"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk46"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld139"){OfSort(SORT("TYPE"))}, Var("exprOk46"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Div", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out81"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk47"){OfSort(SORT("TYPE"))}
        , Var("exprOk48"){OfSort(SORT("TYPE"))}
        , Var("wld140"){OfSort(SORT("TYPE"))}
        , Var("wld141"){OfSort(SORT("TYPE"))}
        , Var("wld142"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out81"){OfSort(SORT("TYPE"))}, Var("wld140"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk47"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld141"){OfSort(SORT("TYPE"))}, Var("exprOk47"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk48"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld142"){OfSort(SORT("TYPE"))}, Var("exprOk48"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Mod", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out82"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk49"){OfSort(SORT("TYPE"))}
        , Var("exprOk50"){OfSort(SORT("TYPE"))}
        , Var("wld143"){OfSort(SORT("TYPE"))}
        , Var("wld144"){OfSort(SORT("TYPE"))}
        , Var("wld145"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out82"){OfSort(SORT("TYPE"))}, Var("wld143"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk49"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld144"){OfSort(SORT("TYPE"))}, Var("exprOk49"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk50"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld145"){OfSort(SORT("TYPE"))}, Var("exprOk50"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Add", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out83"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk51"){OfSort(SORT("TYPE"))}
        , Var("exprOk52"){OfSort(SORT("TYPE"))}
        , Var("wld146"){OfSort(SORT("TYPE"))}
        , Var("wld147"){OfSort(SORT("TYPE"))}
        , Var("wld148"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out83"){OfSort(SORT("TYPE"))}, Var("wld146"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk51"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld147"){OfSort(SORT("TYPE"))}, Var("exprOk51"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk52"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld148"){OfSort(SORT("TYPE"))}, Var("exprOk52"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Sub", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out84"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk53"){OfSort(SORT("TYPE"))}
        , Var("exprOk54"){OfSort(SORT("TYPE"))}
        , Var("wld149"){OfSort(SORT("TYPE"))}
        , Var("wld150"){OfSort(SORT("TYPE"))}
        , Var("wld151"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out84"){OfSort(SORT("TYPE"))}, Var("wld149"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk53"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld150"){OfSort(SORT("TYPE"))}, Var("exprOk53"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk54"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld151"){OfSort(SORT("TYPE"))}, Var("exprOk54"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LeftShift", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out85"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk55"){OfSort(SORT("TYPE"))}
        , Var("exprOk56"){OfSort(SORT("TYPE"))}
        , Var("wld152"){OfSort(SORT("TYPE"))}
        , Var("wld153"){OfSort(SORT("TYPE"))}
        , Var("wld154"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out85"){OfSort(SORT("TYPE"))}, Var("wld152"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk55"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld153"){OfSort(SORT("TYPE"))}, Var("exprOk55"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk56"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld154"){OfSort(SORT("TYPE"))}, Var("exprOk56"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("RightShift", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out86"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk57"){OfSort(SORT("TYPE"))}
        , Var("exprOk58"){OfSort(SORT("TYPE"))}
        , Var("wld155"){OfSort(SORT("TYPE"))}
        , Var("wld156"){OfSort(SORT("TYPE"))}
        , Var("wld157"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out86"){OfSort(SORT("TYPE"))}, Var("wld155"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk57"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld156"){OfSort(SORT("TYPE"))}, Var("exprOk57"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk58"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld157"){OfSort(SORT("TYPE"))}, Var("exprOk58"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("URightShift", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out87"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk59"){OfSort(SORT("TYPE"))}
        , Var("exprOk60"){OfSort(SORT("TYPE"))}
        , Var("wld158"){OfSort(SORT("TYPE"))}
        , Var("wld159"){OfSort(SORT("TYPE"))}
        , Var("wld160"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out87"){OfSort(SORT("TYPE"))}, Var("wld158"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk59"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld159"){OfSort(SORT("TYPE"))}, Var("exprOk59"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk60"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld160"){OfSort(SORT("TYPE"))}, Var("exprOk60"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Lt", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out88"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk61"){OfSort(SORT("TYPE"))}
        , Var("exprOk62"){OfSort(SORT("TYPE"))}
        , Var("wld161"){OfSort(SORT("TYPE"))}
        , Var("wld162"){OfSort(SORT("TYPE"))}
        , Var("wld163"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out88"){OfSort(SORT("TYPE"))}, Var("wld161"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk61"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld162"){OfSort(SORT("TYPE"))}, Var("exprOk61"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk62"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld163"){OfSort(SORT("TYPE"))}, Var("exprOk62"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Gt", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out89"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk63"){OfSort(SORT("TYPE"))}
        , Var("exprOk64"){OfSort(SORT("TYPE"))}
        , Var("wld164"){OfSort(SORT("TYPE"))}
        , Var("wld165"){OfSort(SORT("TYPE"))}
        , Var("wld166"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out89"){OfSort(SORT("TYPE"))}, Var("wld164"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk63"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld165"){OfSort(SORT("TYPE"))}, Var("exprOk63"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk64"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld166"){OfSort(SORT("TYPE"))}, Var("exprOk64"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LtEq", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out90"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk65"){OfSort(SORT("TYPE"))}
        , Var("exprOk66"){OfSort(SORT("TYPE"))}
        , Var("wld167"){OfSort(SORT("TYPE"))}
        , Var("wld168"){OfSort(SORT("TYPE"))}
        , Var("wld169"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out90"){OfSort(SORT("TYPE"))}, Var("wld167"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk65"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld168"){OfSort(SORT("TYPE"))}, Var("exprOk65"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk66"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld169"){OfSort(SORT("TYPE"))}, Var("exprOk66"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("GtEq", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out91"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk67"){OfSort(SORT("TYPE"))}
        , Var("exprOk68"){OfSort(SORT("TYPE"))}
        , Var("wld170"){OfSort(SORT("TYPE"))}
        , Var("wld171"){OfSort(SORT("TYPE"))}
        , Var("wld172"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out91"){OfSort(SORT("TYPE"))}, Var("wld170"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk67"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld171"){OfSort(SORT("TYPE"))}, Var("exprOk67"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk68"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld172"){OfSort(SORT("TYPE"))}, Var("exprOk68"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("InstanceOf", [Var("expr"){OfSort(SORT("Expression"))}, Var("refType"){OfSort(SORT("ReferenceType"))}]){OfSort(SORT("Expression"))}
        , Var("out92"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprOk69"){OfSort(SORT("TYPE"))}, Var("wld173"){OfSort(SORT("TYPE"))}, Var("wld174"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out92"){OfSort(SORT("TYPE"))}, Var("wld173"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk69"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld174"){OfSort(SORT("TYPE"))}, Var("exprOk69"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Eq", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out93"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk70"){OfSort(SORT("TYPE"))}
        , Var("exprOk71"){OfSort(SORT("TYPE"))}
        , Var("wld175"){OfSort(SORT("TYPE"))}
        , Var("wld176"){OfSort(SORT("TYPE"))}
        , Var("wld177"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out93"){OfSort(SORT("TYPE"))}, Var("wld175"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk70"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld176"){OfSort(SORT("TYPE"))}, Var("exprOk70"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk71"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld177"){OfSort(SORT("TYPE"))}, Var("exprOk71"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("NotEq", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out94"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk72"){OfSort(SORT("TYPE"))}
        , Var("exprOk73"){OfSort(SORT("TYPE"))}
        , Var("wld178"){OfSort(SORT("TYPE"))}
        , Var("wld179"){OfSort(SORT("TYPE"))}
        , Var("wld180"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out94"){OfSort(SORT("TYPE"))}, Var("wld178"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk72"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld179"){OfSort(SORT("TYPE"))}, Var("exprOk72"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk73"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld180"){OfSort(SORT("TYPE"))}, Var("exprOk73"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("And", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out95"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk74"){OfSort(SORT("TYPE"))}
        , Var("exprOk75"){OfSort(SORT("TYPE"))}
        , Var("wld181"){OfSort(SORT("TYPE"))}
        , Var("wld182"){OfSort(SORT("TYPE"))}
        , Var("wld183"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out95"){OfSort(SORT("TYPE"))}, Var("wld181"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk74"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld182"){OfSort(SORT("TYPE"))}, Var("exprOk74"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk75"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld183"){OfSort(SORT("TYPE"))}, Var("exprOk75"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Xor", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out96"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk76"){OfSort(SORT("TYPE"))}
        , Var("exprOk77"){OfSort(SORT("TYPE"))}
        , Var("wld184"){OfSort(SORT("TYPE"))}
        , Var("wld185"){OfSort(SORT("TYPE"))}
        , Var("wld186"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out96"){OfSort(SORT("TYPE"))}, Var("wld184"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk76"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld185"){OfSort(SORT("TYPE"))}, Var("exprOk76"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk77"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld186"){OfSort(SORT("TYPE"))}, Var("exprOk77"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Or", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out97"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk78"){OfSort(SORT("TYPE"))}
        , Var("exprOk79"){OfSort(SORT("TYPE"))}
        , Var("wld187"){OfSort(SORT("TYPE"))}
        , Var("wld188"){OfSort(SORT("TYPE"))}
        , Var("wld189"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out97"){OfSort(SORT("TYPE"))}, Var("wld187"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk78"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld188"){OfSort(SORT("TYPE"))}, Var("exprOk78"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk79"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld189"){OfSort(SORT("TYPE"))}, Var("exprOk79"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LazyAnd", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out98"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk80"){OfSort(SORT("TYPE"))}
        , Var("exprOk81"){OfSort(SORT("TYPE"))}
        , Var("wld190"){OfSort(SORT("TYPE"))}
        , Var("wld191"){OfSort(SORT("TYPE"))}
        , Var("wld192"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out98"){OfSort(SORT("TYPE"))}, Var("wld190"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk80"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld191"){OfSort(SORT("TYPE"))}, Var("exprOk80"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk81"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld192"){OfSort(SORT("TYPE"))}, Var("exprOk81"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LazyOr", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out99"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk82"){OfSort(SORT("TYPE"))}
        , Var("exprOk83"){OfSort(SORT("TYPE"))}
        , Var("wld193"){OfSort(SORT("TYPE"))}
        , Var("wld194"){OfSort(SORT("TYPE"))}
        , Var("wld195"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out99"){OfSort(SORT("TYPE"))}, Var("wld193"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk82"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld194"){OfSort(SORT("TYPE"))}, Var("exprOk82"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk83"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld195"){OfSort(SORT("TYPE"))}, Var("exprOk83"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "Cond"
          , [Var("expr_cond"){OfSort(SORT("Expression"))}, Var("expr_then"){OfSort(SORT("Expression"))}, Var("expr_else"){OfSort(SORT("Expression"))}]
          ){OfSort(SORT("Expression"))}
        , Var("out100"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("exprOk84"){OfSort(SORT("TYPE"))}
        , Var("exprOk85"){OfSort(SORT("TYPE"))}
        , Var("exprOk86"){OfSort(SORT("TYPE"))}
        , Var("wld196"){OfSort(SORT("TYPE"))}
        , Var("wld197"){OfSort(SORT("TYPE"))}
        , Var("wld198"){OfSort(SORT("TYPE"))}
        , Var("wld199"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out100"){OfSort(SORT("TYPE"))}, Var("wld196"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr_cond"){OfSort(SORT("Expression"))}, Var("exprOk84"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld197"){OfSort(SORT("TYPE"))}, Var("exprOk84"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr_then"){OfSort(SORT("Expression"))}, Var("exprOk85"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld198"){OfSort(SORT("TYPE"))}, Var("exprOk85"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("expr_else"){OfSort(SORT("Expression"))}, Var("exprOk86"){OfSort(SORT("TYPE"))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld199"){OfSort(SORT("TYPE"))}, Var("exprOk86"){OfSort(SORT("TYPE"))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/literals/FloatingPointLiterals!floatLitOk", [Op("DeciFloat", [Wld(){OfSort(STRING())}]){OfSort(SORT("FloatLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/FloatingPointLiterals!floatLitOk", [Op("HexaFloat", [Wld(){OfSort(STRING())}]){OfSort(SORT("FloatLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/FloatingPointLiterals!floatLitOk", [Op("DeciDouble", [Wld(){OfSort(STRING())}]){OfSort(SORT("FloatLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/FloatingPointLiterals!floatLitOk", [Op("HexaDouble", [Wld(){OfSort(STRING())}]){OfSort(SORT("FloatLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/Main!matchType", [Var("T"){OfSort(SORT("TYPE"))}, Var("out102"){OfSort(SCOPE())}])
    , CExists(
        [Var("s"){OfSort(SCOPE())}, Var("toType0"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out102"){OfSort(SCOPE())}, Var("s"){OfSort(SCOPE())}, NoMessage())
        , CConj(
            C("java/types/Main!toType", [Var("s"){OfSort(SCOPE())}, Var("toType0"){OfSort(SORT("TYPE"))}], NoMessage())
          , CEqual(Var("T"){OfSort(SORT("TYPE"))}, Var("toType0"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/types/Main!toType", [Var("s"){OfSort(SCOPE())}, Var("out103"){OfSort(SORT("TYPE"))}])
    , CExists(
        [Var("T"){OfSort(SORT("TYPE"))}, Var("wld211"){OfSort(PATH())}]
      , CConj(
          CEqual(Var("out103"){OfSort(SORT("TYPE"))}, Var("T"){OfSort(SORT("TYPE"))}, NoMessage())
        , CResolveQuery(
            Label("java/types/Main!withType")
          , Filter(
              Epsilon()
            , LLam(
                [Wld(){OfSort(SORT("TYPE"))}]
              , CExists(
                  [Var("wld208"){OfSort(TUPLE([]))}]
                , CConj(CEqual(Tuple([]){OfSort(TUPLE([]))}, Var("wld208"){OfSort(TUPLE([]))}, NoMessage()), CTrue())
                )
              )
            )
          , Min(
              []
            , LLam(
                [Wld(){OfSort(SORT("TYPE"))}, Wld(){OfSort(SORT("TYPE"))}]
              , CExists(
                  [Var("wld209"){OfSort(TUPLE([]))}, Var("wld210"){OfSort(TUPLE([]))}]
                , CConj(
                    CEqual(Tuple([]){OfSort(TUPLE([]))}, Var("wld209"){OfSort(TUPLE([]))}, NoMessage())
                  , CConj(CEqual(Tuple([]){OfSort(TUPLE([]))}, Var("wld210"){OfSort(TUPLE([]))}, NoMessage()), CTrue())
                  )
                )
              )
            )
          , Var("s"){OfSort(SCOPE())}
          , List([Tuple([Var("wld211"){OfSort(PATH())}, Var("T"){OfSort(SORT("TYPE"))}]){OfSort(TUPLE([PATH(), SORT("TYPE")]))}]){OfSort(LIST(TUPLE([PATH(), SORT("TYPE")])))}
          , NoMessage()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/types/Main!fromType", [Var("T"){OfSort(SORT("TYPE"))}, Var("out104"){OfSort(SCOPE())}])
    , CExists(
        [Var("s"){OfSort(SCOPE())}]
      , CConj(
          CEqual(Var("out104"){OfSort(SCOPE())}, Var("s"){OfSort(SCOPE())}, NoMessage())
        , CConj(
            CNew([Var("s"){OfSort(SCOPE())}])
          , CTellRel(Label("java/types/Main!withType"), [Var("T"){OfSort(SORT("TYPE"))}], Var("s"){OfSort(SCOPE())})
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/Main!typeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PrimitiveType2Type", [Var("primType"){OfSort(SORT("PrimitiveType"))}]){OfSort(SORT("Type"))}]
      )
    , CConj(
        C("java/types/PrimitiveTypes!primTypeOk", [Var("s"){OfSort(SCOPE())}, Var("primType"){OfSort(SORT("PrimitiveType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/Main!typeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ReferenceType2Type", [Var("refType"){OfSort(SORT("ReferenceType"))}]){OfSort(SORT("Type"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ConstantDecl"
          , [Var("constModList"){OfSort(LIST(SORT("ConstantModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}]
          ){OfSort(SORT("ConstantDeclaration"))}
        ]
      )
    , CConj(
        C("java/interfaces/ConstantDeclarations!constModListOk", [Var("s"){OfSort(SCOPE())}, Var("constModList"){OfSort(LIST(SORT("ConstantModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclListOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/ConstantDeclarations!constModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ConstantModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ConstantModifier"))}], Var("xs_2"){OfSort(LIST(SORT("ConstantModifier")))}){OfSort(LIST(SORT("ConstantModifier")))}]
      )
    , CConj(
        C("java/interfaces/ConstantDeclarations!constModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ConstantModifier"))}], NoMessage())
      , C("java/interfaces/ConstantDeclarations!constModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ConstantModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2ConstantModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("ConstantModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2ConstantModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("ConstantModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2ConstantModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("ConstantModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/ConstantDeclarations!constModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Final2ConstantModifier", [Wld(){OfSort(SORT("Final"))}]){OfSort(SORT("ConstantModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/NullLiteral!nullLitOk", [Op("Null", []){OfSort(SORT("NullLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/LocalVariableDeclarations!localVarDeclStmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("LocVarDeclStm", [Var("localVarDecl"){OfSort(SORT("LocalVariableDeclaration"))}]){OfSort(SORT("LocalVariableDeclarationStatement"))}]
      )
    , CConj(
        C("java/statements/LocalVariableDeclarations!localVarDeclOk", [Var("s"){OfSort(SCOPE())}, Var("localVarDecl"){OfSort(SORT("LocalVariableDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/LocalVariableDeclarations!localVarDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "LocalVarDecl"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}]
          ){OfSort(SORT("LocalVariableDeclaration"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclListOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("IntLiteral2Literal", [Var("intLit"){OfSort(SORT("IntLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/IntegerLiterals!intLitOk", [Var("intLit"){OfSort(SORT("IntLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("FloatLiteral2Literal", [Var("floatLit"){OfSort(SORT("FloatLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/FloatingPointLiterals!floatLitOk", [Var("floatLit"){OfSort(SORT("FloatLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("BoolLiteral2Literal", [Var("boolLit"){OfSort(SORT("BoolLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/BooleanLiterals!boolLitOk", [Var("boolLit"){OfSort(SORT("BoolLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("CharacterLiteral2Literal", [Var("charLit"){OfSort(SORT("CharacterLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/CharacterLiterals!charLitOk", [Var("charLit"){OfSort(SORT("CharacterLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("StringLiteral2Literal", [Var("stringLit"){OfSort(SORT("StringLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/StringLiterals!stringLitOk", [Var("stringLit"){OfSort(SORT("StringLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C("java/literals/Main!litOk", [Op("NullLiteral2Literal", [Var("nullLit"){OfSort(SORT("NullLiteral"))}]){OfSort(SORT("Literal"))}])
    , C("java/literals/NullLiteral!nullLitOk", [Var("nullLit"){OfSort(SORT("NullLiteral"))}], NoMessage())
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("NormalClassDeclaration2ClassDeclaration", [Var("normalClsDecl"){OfSort(SORT("NormalClassDeclaration"))}]){OfSort(SORT("ClassDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!normalClsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("normalClsDecl"){OfSort(SORT("NormalClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("EnumDeclaration2ClassDeclaration", [Var("enumDecl"){OfSort(SORT("EnumDeclaration"))}]){OfSort(SORT("ClassDeclaration"))}]
      )
    , CConj(
        C("java/classes/EnumDeclarations!enumDeclOk", [Var("s"){OfSort(SCOPE())}, Var("enumDecl"){OfSort(SORT("EnumDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!normalClsDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ClassDeclaration"
          , [ Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}
            , Var("superClsOpt"){OfSort(LIST(SORT("SuperClass")))}
            , Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}
            , Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}
            ]
          ){OfSort(SORT("NormalClassDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_cls"){OfSort(SCOPE())}]
      , CConj(
          C("java/classes/ClassDeclarations!clsModListOk", [Var("s"){OfSort(SCOPE())}, Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_cls"){OfSort(SCOPE())}])
          , CConj(
              C(
                "java/names/TypeNames!declareType"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Op("CLASS", [Var("s_cls"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/classes/ClassDeclarations!typeParamsOptOk"
                , [Var("s"){OfSort(SCOPE())}, Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}, Var("s_cls"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  C(
                    "java/classes/ClassDeclarations!superClsOptOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("superClsOpt"){OfSort(LIST(SORT("SuperClass")))}, Var("s_cls"){OfSort(SCOPE())}]
                  , NoMessage()
                  )
                , CConj(
                    C(
                      "java/classes/ClassDeclarations!superIntfsOptOk"
                    , [Var("s"){OfSort(SCOPE())}, Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}, Var("s_cls"){OfSort(SCOPE())}]
                    , NoMessage()
                    )
                  , CConj(
                      CTellEdge(Var("s_cls"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
                    , CConj(
                        C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Var("s_cls"){OfSort(SCOPE())}, Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}], NoMessage())
                      , CTrue()
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/ClassDeclarations!clsModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ClassModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ClassModifier"))}], Var("xs_2"){OfSort(LIST(SORT("ClassModifier")))}){OfSort(LIST(SORT("ClassModifier")))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ClassModifier"))}], NoMessage())
      , C("java/classes/ClassDeclarations!clsModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ClassModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2ClassModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2ClassModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Protected2ClassModifier", [Wld(){OfSort(SORT("Protected"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Private2ClassModifier", [Wld(){OfSort(SORT("Private"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Abstract2ClassModifier", [Wld(){OfSort(SORT("Abstract"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2ClassModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Final2ClassModifier", [Wld(){OfSort(SORT("Final"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Strictfp2ClassModifier", [Wld(){OfSort(SORT("Strictfp"))}]){OfSort(SORT("ClassModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/classes/ClassDeclarations!typeParamsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("TypeParameters")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!typeParamsOptOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("TypeParameters"))}], Var("xs_2"){OfSort(LIST(SORT("TypeParameters")))}){OfSort(LIST(SORT("TypeParameters")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/classes/ClassDeclarations!typeParamsOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("TypeParameters"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/classes/ClassDeclarations!typeParamsOptOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("TypeParameters")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!typeParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("TypeParameters", [Var("typeParamList"){OfSort(LIST(SORT("TypeParameter")))}]){OfSort(SORT("TypeParameters"))}, Var("s_cls"){OfSort(SCOPE())}]
      )
    , CConj(
        C(
          "java/types/TypeVariable!typeParamListOk"
        , [Var("s"){OfSort(SCOPE())}, Var("typeParamList"){OfSort(LIST(SORT("TypeParameter")))}, Var("s_cls"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/ClassDeclarations!superClsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("SuperClass")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!superClsOptOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("SuperClass"))}], Var("xs_2"){OfSort(LIST(SORT("SuperClass")))}){OfSort(LIST(SORT("SuperClass")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/classes/ClassDeclarations!superClsOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("SuperClass"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/classes/ClassDeclarations!superClsOptOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("SuperClass")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!superClsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SuperClass", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("SuperClass"))}, Var("s_cls"){OfSort(SCOPE())}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/ClassDeclarations!superIntfsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("SuperInterfaces")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!superIntfsOptOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("SuperInterfaces"))}], Var("xs_2"){OfSort(LIST(SORT("SuperInterfaces")))}){OfSort(LIST(SORT("SuperInterfaces")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/classes/ClassDeclarations!superIntfsOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("SuperInterfaces"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/classes/ClassDeclarations!superIntfsOptOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("SuperInterfaces")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!superIntfsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SuperInterface", [Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}]){OfSort(SORT("SuperInterfaces"))}, Var("s_cls"){OfSort(SCOPE())}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeListOk", [Var("s"){OfSort(SCOPE())}, Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ClassBodyDeclaration")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsBodyDeclListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ClassBodyDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("ClassBodyDeclaration")))}){OfSort(LIST(SORT("ClassBodyDeclaration")))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsBodyDeclOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ClassBodyDeclaration"))}], NoMessage())
      , C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ClassBodyDeclaration")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsBodyDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassMemberDeclaration2ClassBodyDeclaration", [Var("clsMemDecl"){OfSort(SORT("ClassMemberDeclaration"))}]){OfSort(SORT("ClassBodyDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsMemDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsMemDecl"){OfSort(SORT("ClassMemberDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsBodyDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InstanceInitializer2ClassBodyDeclaration", [Var("instInit"){OfSort(SORT("InstanceInitializer"))}]){OfSort(SORT("ClassBodyDeclaration"))}]
      )
    , CConj(C("java/classes/InstanceInitializers!instInitOk", [Var("instInit"){OfSort(SORT("InstanceInitializer"))}], NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsBodyDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("StaticInitializer2ClassBodyDeclaration", [Var("staticInit"){OfSort(SORT("StaticInitializer"))}]){OfSort(SORT("ClassBodyDeclaration"))}]
      )
    , CConj(C("java/classes/StaticInitializers!staticInitOk", [Var("staticInit"){OfSort(SORT("StaticInitializer"))}], NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsBodyDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ConstructorDeclaration2ClassBodyDeclaration", [Var("ctorDecl"){OfSort(SORT("ConstructorDeclaration"))}]){OfSort(SORT("ClassBodyDeclaration"))}]
      )
    , CConj(
        C("java/classes/ConstructorDeclarations!ctorDeclOk", [Var("s"){OfSort(SCOPE())}, Var("ctorDecl"){OfSort(SORT("ConstructorDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("FieldDeclaration2ClassMemberDeclaration", [Var("fldDecl"){OfSort(SORT("FieldDeclaration"))}]){OfSort(SORT("ClassMemberDeclaration"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!fldDeclOk", [Var("s"){OfSort(SCOPE())}, Var("fldDecl"){OfSort(SORT("FieldDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("MethodDeclaration2ClassMemberDeclaration", [Var("mthdDecl"){OfSort(SORT("MethodDeclaration"))}]){OfSort(SORT("ClassMemberDeclaration"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!mthdDeclOk", [Var("s"){OfSort(SCOPE())}, Var("mthdDecl"){OfSort(SORT("MethodDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassDeclaration2ClassMemberDeclaration", [Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}]){OfSort(SORT("ClassMemberDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InterfaceDeclaration2ClassMemberDeclaration", [Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}]){OfSort(SORT("ClassMemberDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfDeclOk", [Var("s"){OfSort(SCOPE())}, Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ClassDeclarations!clsMemDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SemiColon2ClassMemberDeclaration", [Var("semiColon"){OfSort(SORT("SemiColon"))}]){OfSort(SORT("ClassMemberDeclaration"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/packages/CompilationUnits!compilationUnitOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "CompilationUnit"
          , [Var("pkgDeclOpt"){OfSort(LIST(SORT("PackageDeclaration")))}, Var("importDeclList"){OfSort(LIST(SORT("ImportDeclaration")))}, Var("typeDeclList"){OfSort(LIST(SORT("TypeDeclaration")))}]
          ){OfSort(SORT("CompilationUnit"))}
        ]
      )
    , CExists(
        [Var("s_pkg"){OfSort(SCOPE())}, Var("d_pkg"){OfSort(CVar("trans/java/packages/CompilationUnits.stx", "ty-25"))}]
      , CConj(
          CNew([Var("s_pkg"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_pkg"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C(
                "java/packages/PackageDeclarations!pkgDeclOptOk"
              , [Var("s"){OfSort(SCOPE())}, Var("pkgDeclOpt"){OfSort(LIST(SORT("PackageDeclaration")))}, Var("s_pkg"){OfSort(SCOPE())}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/packages/ImportDeclarations!importDeclListOk"
                , [Var("s"){OfSort(SCOPE())}, Var("importDeclList"){OfSort(LIST(SORT("ImportDeclaration")))}, Var("s_pkg"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  C("java/packages/TypeDeclarations!typeDeclListOk", [Var("s_pkg"){OfSort(SCOPE())}, Var("typeDeclList"){OfSort(LIST(SORT("TypeDeclaration")))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LambdaExpression", [Var("lambdaParams"){OfSort(SORT("LambdaParameters"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out105"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld212"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out105"){OfSort(SORT("TYPE"))}, Var("wld212"){OfSort(SORT("TYPE"))}, NoMessage())
        , CExists(
            [Var("s_lambda"){OfSort(SCOPE())}, Var("exprOk90"){OfSort(SORT("TYPE"))}, Var("wld213"){OfSort(SORT("TYPE"))}]
          , CConj(
              CNew([Var("s_lambda"){OfSort(SCOPE())}])
            , CConj(
                CTellEdge(Var("s_lambda"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
              , CConj(
                  C("java/expressions/LambdaExpressions!lambdaParamsOk", [Var("s_lambda"){OfSort(SCOPE())}, Var("lambdaParams"){OfSort(SORT("LambdaParameters"))}], NoMessage())
                , CConj(
                    CConj(
                      C(
                        "java/expressions/Main!exprOk"
                      , [Var("s_lambda"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk90"){OfSort(SORT("TYPE"))}]
                      , NoMessage()
                      )
                    , CEqual(Var("wld213"){OfSort(SORT("TYPE"))}, Var("exprOk90"){OfSort(SORT("TYPE"))}, NoMessage())
                    )
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("LambdaExpressionWithBlock", [Var("lambdaParams"){OfSort(SORT("LambdaParameters"))}, Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("Expression"))}
        , Var("out106"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("wld214"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out106"){OfSort(SORT("TYPE"))}, Var("wld214"){OfSort(SORT("TYPE"))}, NoMessage())
        , CExists(
            [Var("s_lambda"){OfSort(SCOPE())}]
          , CConj(
              CNew([Var("s_lambda"){OfSort(SCOPE())}])
            , CConj(
                CTellEdge(Var("s_lambda"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
              , CConj(
                  C("java/expressions/LambdaExpressions!lambdaParamsOk", [Var("s_lambda"){OfSort(SCOPE())}, Var("lambdaParams"){OfSort(SORT("LambdaParameters"))}], NoMessage())
                , CConj(
                    C("java/statements/Blocks!blkOk", [Var("s_lambda"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/LambdaExpressions!lambdaParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SingleInferredParam", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("LambdaParameters"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/LambdaExpressions!lambdaParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Params", [Var("formalParams"){OfSort(SORT("FormalParams"))}]){OfSort(SORT("LambdaParameters"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!formalParamsOk", [Var("s"){OfSort(SCOPE())}, Var("formalParams"){OfSort(SORT("FormalParams"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/LambdaExpressions!lambdaParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InferredParams", [Var("idList"){OfSort(LIST(SORT("Id")))}]){OfSort(SORT("LambdaParameters"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/classes/InstanceInitializers!instInitOk", [Op("InstanceInit", [Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("InstanceInitializer"))}])
    , CExists(
        [Var("wld78"){OfSort(SCOPE())}]
      , CConj(
          C("java/statements/Blocks!blkOk", [Var("wld78"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/types/TypeVariable!typeParamListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("TypeParameter")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/types/TypeVariable!typeParamListOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("TypeParameter"))}], Var("xs_2"){OfSort(LIST(SORT("TypeParameter")))}){OfSort(LIST(SORT("TypeParameter")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/types/TypeVariable!typeParamOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("TypeParameter"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/types/TypeVariable!typeParamListOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("TypeParameter")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/TypeVariable!typeParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("TypeParameter", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("TypeParameter"))}
        , Var("s_ty"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/TypeVariable!typeParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "TypeParameterExtends"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}]
          ){OfSort(SORT("TypeParameter"))}
        , Var("s_ty"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!clsTypeListOk", [Var("s"){OfSort(SCOPE())}, Var("clsTypeList"){OfSort(LIST(SORT("ClassType")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/PrimitiveTypes!primTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("NumericType", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("numType"){OfSort(SORT("NumericType"))}]){OfSort(SORT("PrimitiveType"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(C("java/types/PrimitiveTypes!numTypeOk", [Var("numType"){OfSort(SORT("NumericType"))}], NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/types/PrimitiveTypes!primTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("BooleanType", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}]){OfSort(SORT("PrimitiveType"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Byte", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Short", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Int", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Long", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Char", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Float", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/types/PrimitiveTypes!numTypeOk", [Op("Double", []){OfSort(SORT("NumericType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("FieldAccess2Expression", [Var("fldAccess"){OfSort(SORT("FieldAccess"))}]){OfSort(SORT("Expression"))}, Var("out49"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld79"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out49"){OfSort(SORT("TYPE"))}, Var("wld79"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/expressions/FieldAccess!fldAccessOk", [Var("s"){OfSort(SCOPE())}, Var("fldAccess"){OfSort(SORT("FieldAccess"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/FieldAccess!fldAccessOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Field", [Var("expr"){OfSort(SORT("Expression"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("FieldAccess"))}]
      )
    , CExists(
        [Var("exprOk28"){OfSort(SORT("TYPE"))}, Var("wld80"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk28"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld80"){OfSort(SORT("TYPE"))}, Var("exprOk28"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/FieldAccess!fldAccessOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SuperField", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("FieldAccess"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/FieldAccess!fldAccessOk"
      , [Var("s"){OfSort(SCOPE())}, Op("QSuperField", [Var("typeName"){OfSort(SORT("TypeName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("FieldAccess"))}]
      )
    , CExists(
        [Var("typeNameOk6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld81"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld81"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/Annotations!annoListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("Annotation")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!annoListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("Annotation"))}], Var("xs_2"){OfSort(LIST(SORT("Annotation")))}){OfSort(LIST(SORT("Annotation")))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("Annotation"))}], NoMessage())
      , C("java/interfaces/Annotations!annoListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!annoOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Anno", [Var("typeName"){OfSort(SORT("TypeName"))}, Var("elemValPairList"){OfSort(LIST(SORT("ElementValuePair")))}]){OfSort(SORT("Annotation"))}]
      )
    , CExists(
        [Var("typeNameOk0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CConj(
            C("java/interfaces/Annotations!elemValPairListOk", [Var("s"){OfSort(SCOPE())}, Var("elemValPairList"){OfSort(LIST(SORT("ElementValuePair")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!annoOk"
      , [Var("s"){OfSort(SCOPE())}, Op("MarkerAnno", [Var("typeName"){OfSort(SORT("TypeName"))}]){OfSort(SORT("Annotation"))}]
      )
    , CExists(
        [Var("typeNameOk1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld11"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld11"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!annoOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SingleElemAnno", [Var("typeName"){OfSort(SORT("TypeName"))}, Var("elemVal"){OfSort(SORT("ElementValue"))}]){OfSort(SORT("Annotation"))}]
      )
    , CExists(
        [Var("typeNameOk2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld12"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld12"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CConj(
            C("java/interfaces/Annotations!elemValOk", [Var("s"){OfSort(SCOPE())}, Var("elemVal"){OfSort(SORT("ElementValue"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/Annotations!elemValPairListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ElementValuePair")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValPairListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ElementValuePair"))}], Var("xs_2"){OfSort(LIST(SORT("ElementValuePair")))}){OfSort(LIST(SORT("ElementValuePair")))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValPairOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ElementValuePair"))}], NoMessage())
      , C("java/interfaces/Annotations!elemValPairListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ElementValuePair")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValPairOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ElemValPair", [Var("id"){OfSort(SORT("Id"))}, Var("elemVal"){OfSort(SORT("ElementValue"))}]){OfSort(SORT("ElementValuePair"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValOk", [Var("s"){OfSort(SCOPE())}, Var("elemVal"){OfSort(SORT("ElementValue"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/Annotations!elemValListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ElementValue")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ElementValue"))}], Var("xs_2"){OfSort(LIST(SORT("ElementValue")))}){OfSort(LIST(SORT("ElementValue")))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ElementValue"))}], NoMessage())
      , C("java/interfaces/Annotations!elemValListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ElementValue")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Expression2ElementValue", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("ElementValue"))}]
      )
    , CExists(
        [Var("exprOk3"){OfSort(SORT("TYPE"))}, Var("wld13"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk3"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld13"){OfSort(SORT("TYPE"))}, Var("exprOk3"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ElementValueArrayInitializer2ElementValue", [Var("elemValArrayInit"){OfSort(SORT("ElementValueArrayInitializer"))}]){OfSort(SORT("ElementValue"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValArrayInitOk", [Var("s"){OfSort(SCOPE())}, Var("elemValArrayInit"){OfSort(SORT("ElementValueArrayInitializer"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2ElementValue", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("ElementValue"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValArrayInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ElementValArrayInit", [Var("elemValList"){OfSort(LIST(SORT("ElementValue")))}]){OfSort(SORT("ElementValueArrayInitializer"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValListOk", [Var("s"){OfSort(SCOPE())}, Var("elemValList"){OfSort(LIST(SORT("ElementValue")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/Annotations!elemValArrayInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ElementValArrayInitComma", [Var("elemValList"){OfSort(LIST(SORT("ElementValue")))}]){OfSort(SORT("ElementValueArrayInitializer"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!elemValListOk", [Var("s"){OfSort(SCOPE())}, Var("elemValList"){OfSort(LIST(SORT("ElementValue")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PostIncr", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out2"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk1"){OfSort(SORT("TYPE"))}, Var("wld4"){OfSort(SORT("TYPE"))}, Var("wld5"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out2"){OfSort(SORT("TYPE"))}, Var("wld4"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk1"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld5"){OfSort(SORT("TYPE"))}, Var("exprOk1"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PostDecr", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out3"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk2"){OfSort(SORT("TYPE"))}, Var("wld6"){OfSort(SORT("TYPE"))}, Var("wld7"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out3"){OfSort(SORT("TYPE"))}, Var("wld6"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk2"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld7"){OfSort(SORT("TYPE"))}, Var("exprOk2"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExpressionName2Expression", [Var("exprName"){OfSort(SORT("ExpressionName"))}]){OfSort(SORT("Expression"))}, Var("out4"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprNameOk0"){OfSort(TUPLE([]))}, Var("wld8"){OfSort(SORT("TYPE"))}, Var("wld9"){OfSort(TUPLE([]))}]
      , CConj(
          CEqual(Var("out4"){OfSort(SORT("TYPE"))}, Var("wld8"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/ExpressionNames!exprNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("exprName"){OfSort(SORT("ExpressionName"))}, Var("exprNameOk0"){OfSort(TUPLE([]))}]
              , NoMessage()
              )
            , CEqual(Var("exprNameOk0"){OfSort(TUPLE([]))}, Var("wld9"){OfSort(TUPLE([]))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/literals/CharacterLiterals!charLitOk", [Op("CharLiteral", [Wld(){OfSort(STRING())}]){OfSort(SORT("CharacterLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/packages/TypeDeclarations!typeDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("TypeDeclaration")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/packages/TypeDeclarations!typeDeclListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("TypeDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("TypeDeclaration")))}){OfSort(LIST(SORT("TypeDeclaration")))}]
      )
    , CConj(
        C("java/packages/TypeDeclarations!typeDeclOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("TypeDeclaration"))}], NoMessage())
      , C("java/packages/TypeDeclarations!typeDeclListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("TypeDeclaration")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/TypeDeclarations!typeDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassDeclaration2TypeDeclaration", [Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}]){OfSort(SORT("TypeDeclaration"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsDeclOk", [Var("s"){OfSort(SCOPE())}, Var("clsDecl"){OfSort(SORT("ClassDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/TypeDeclarations!typeDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("InterfaceDeclaration2TypeDeclaration", [Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}]){OfSort(SORT("TypeDeclaration"))}]
      )
    , CConj(
        C("java/interfaces/InterfaceDeclarations!intfDeclOk", [Var("s"){OfSort(SCOPE())}, Var("intfDecl"){OfSort(SORT("InterfaceDeclaration"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/TypeDeclarations!typeDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SemiColon2TypeDeclaration", [Wld(){OfSort(SORT("SemiColon"))}]){OfSort(SORT("TypeDeclaration"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Plus", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out36"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk20"){OfSort(SORT("TYPE"))}, Var("wld62"){OfSort(SORT("TYPE"))}, Var("wld63"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out36"){OfSort(SORT("TYPE"))}, Var("wld62"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk20"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld63"){OfSort(SORT("TYPE"))}, Var("exprOk20"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Minus", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out37"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk21"){OfSort(SORT("TYPE"))}, Var("wld64"){OfSort(SORT("TYPE"))}, Var("wld65"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out37"){OfSort(SORT("TYPE"))}, Var("wld64"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk21"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld65"){OfSort(SORT("TYPE"))}, Var("exprOk21"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PreIncr", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out38"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk22"){OfSort(SORT("TYPE"))}, Var("wld66"){OfSort(SORT("TYPE"))}, Var("wld67"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out38"){OfSort(SORT("TYPE"))}, Var("wld66"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk22"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld67"){OfSort(SORT("TYPE"))}, Var("exprOk22"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PreDecr", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out39"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk23"){OfSort(SORT("TYPE"))}, Var("wld68"){OfSort(SORT("TYPE"))}, Var("wld69"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out39"){OfSort(SORT("TYPE"))}, Var("wld68"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk23"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld69"){OfSort(SORT("TYPE"))}, Var("exprOk23"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Complement", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out40"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk24"){OfSort(SORT("TYPE"))}, Var("wld70"){OfSort(SORT("TYPE"))}, Var("wld71"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out40"){OfSort(SORT("TYPE"))}, Var("wld70"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk24"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld71"){OfSort(SORT("TYPE"))}, Var("exprOk24"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Not", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}, Var("out41"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprOk25"){OfSort(SORT("TYPE"))}, Var("wld72"){OfSort(SORT("TYPE"))}, Var("wld73"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out41"){OfSort(SORT("TYPE"))}, Var("wld72"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk25"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld73"){OfSort(SORT("TYPE"))}, Var("exprOk25"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("CastPrimitive", [Var("primType"){OfSort(SORT("PrimitiveType"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out42"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprOk26"){OfSort(SORT("TYPE"))}, Var("wld74"){OfSort(SORT("TYPE"))}, Var("wld75"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out42"){OfSort(SORT("TYPE"))}, Var("wld74"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/PrimitiveTypes!primTypeOk", [Var("s"){OfSort(SCOPE())}, Var("primType"){OfSort(SORT("PrimitiveType"))}], NoMessage())
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprOk"
                , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk26"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CEqual(Var("wld75"){OfSort(SORT("TYPE"))}, Var("exprOk26"){OfSort(SORT("TYPE"))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "CastReference"
          , [Var("refType"){OfSort(SORT("ReferenceType"))}, Var("additionalBoundList"){OfSort(LIST(SORT("AdditionalBound")))}, Var("expr"){OfSort(SORT("Expression"))}]
          ){OfSort(SORT("Expression"))}
        , Var("out43"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprOk27"){OfSort(SORT("TYPE"))}, Var("wld76"){OfSort(SORT("TYPE"))}, Var("wld77"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out43"){OfSort(SORT("TYPE"))}, Var("wld76"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!refTypeOk", [Var("s"){OfSort(SCOPE())}, Var("refType"){OfSort(SORT("ReferenceType"))}], NoMessage())
          , CConj(
              C("java/expressions/UnaryOperators!additionalBoundListOk", [Var("s"){OfSort(SCOPE())}, Var("additionalBoundList"){OfSort(LIST(SORT("AdditionalBound")))}], NoMessage())
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk27"){OfSort(SORT("TYPE"))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld77"){OfSort(SORT("TYPE"))}, Var("exprOk27"){OfSort(SORT("TYPE"))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/UnaryOperators!additionalBoundListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("AdditionalBound")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/UnaryOperators!additionalBoundListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("AdditionalBound"))}], Var("xs_2"){OfSort(LIST(SORT("AdditionalBound")))}){OfSort(LIST(SORT("AdditionalBound")))}]
      )
    , CConj(
        C("java/expressions/UnaryOperators!additionalBoundOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("AdditionalBound"))}], NoMessage())
      , C("java/expressions/UnaryOperators!additionalBoundListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("AdditionalBound")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/UnaryOperators!additionalBoundOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AdditionalBound", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("AdditionalBound"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!pkgNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PackageName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("PackageName"))}, Var("out58"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
      )
    , CExists(
        [Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("composePkgDecl2"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("resolveLexicalPkgNames1"){ OfSort(
                                                                                                                                                               LIST(
                                                                                                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                                                               )
                                                                                                                                                             )
                                                                                                                                                           }]
      , CConj(
          CEqual(Var("out58"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/PackageNames!composePkgDecl"
              , [Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgNames1"){ OfSort(
                                                                                  LIST(
                                                                                    TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                  )
                                                                                )
                                                                              }, Var("composePkgDecl2"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/names/PackageNames!resolveLexicalPkgNames"
                , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgNames1"){ OfSort(
                                                                                                               LIST(
                                                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                               )
                                                                                                             )
                                                                                                           }]
                , NoMessage()
                )
              , CEqual(Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("composePkgDecl2"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, NoMessage())
              )
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!pkgNameOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("PackageName", [Var("pkgName"){OfSort(SORT("PackageName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("PackageName"))}
        , Var("out59"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
        ]
      )
    , CExists(
        [Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
      , CConj(
          CEqual(Var("out59"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, NoMessage())
        , CExists(
            [ Var("s_pkg"){OfSort(SCOPE())}
            , Var("pkgDeclScope1"){OfSort(SCOPE())}
            , Var("pkgNameOk0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
            , Var("composePkgDecl3"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
            , Var("resolveMemberPkgNames1"){ OfSort(
                                               LIST(
                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                               )
                                             )
                                           }
            ]
          , CConj(
              CConj(
                C("java/names/PackageNames!pkgDeclScope", [Var("pkgNameOk0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("pkgDeclScope1"){OfSort(SCOPE())}], NoMessage())
              , CConj(
                  C(
                    "java/names/PackageNames!pkgNameOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("pkgName"){OfSort(SORT("PackageName"))}, Var("pkgNameOk0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                  , NoMessage()
                  )
                , CEqual(Var("s_pkg"){OfSort(SCOPE())}, Var("pkgDeclScope1"){OfSort(SCOPE())}, NoMessage())
                )
              )
            , CConj(
                CConj(
                  C(
                    "java/names/PackageNames!composePkgDecl"
                  , [Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames1"){ OfSort(
                                                                                     LIST(
                                                                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                     )
                                                                                   )
                                                                                 }, Var("composePkgDecl3"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                  , NoMessage()
                  )
                , CConj(
                    C(
                      "java/names/PackageNames!resolveMemberPkgNames"
                    , [Var("s_pkg"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames1"){ OfSort(
                                                                                                                      LIST(
                                                                                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                      )
                                                                                                                    )
                                                                                                                  }]
                    , NoMessage()
                    )
                  , CEqual(Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("composePkgDecl3"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, NoMessage())
                  )
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!pkgDeclScope"
      , [Tuple([Wld(){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("out60"){OfSort(SCOPE())}]
      )
    , CConj(CEqual(Var("out60"){OfSort(SCOPE())}, Var("s_pkg"){OfSort(SCOPE())}, NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!resolveLexicalPkgNames"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out61"){ OfSort(
                                                                                   LIST(
                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                   )
                                                                                 )
                                                                               }]
      )
    , CExists(
        [Var("pkgPathList"){ OfSort(
                               LIST(
                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                               )
                             )
                           }]
      , CConj(
          CEqual(Var("out61"){ OfSort(
                                 LIST(
                                   TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                 )
                               )
                             }, Var("pkgPathList"){ OfSort(
                                                      LIST(
                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                      )
                                                    )
                                                  }, NoMessage())
        , CConj(
            CResolveQuery(
              Label("java/names/PackageNames!pkg")
            , Filter(
                Closure(Label("java/names/Main!LEX"))
              , LLam(
                  [Tuple([Var("id'"){OfSort(SORT("Id"))}, Wld(){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                , CEqual(Var("id'"){OfSort(SORT("Id"))}, Var("id"){OfSort(SORT("Id"))}, NoMessage())
                )
              )
            , Min(
                [LabelPair(EOP(), Label("java/names/Main!LEX"))]
              , LLam([Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}], CTrue())
              )
            , Var("s"){OfSort(SCOPE())}
            , Var("pkgPathList"){ OfSort(
                                    LIST(
                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                    )
                                  )
                                }
            , NoMessage()
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!resolveMemberPkgNames"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out62"){ OfSort(
                                                                                   LIST(
                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                   )
                                                                                 )
                                                                               }]
      )
    , CExists(
        [Var("pkgPathList"){ OfSort(
                               LIST(
                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                               )
                             )
                           }]
      , CConj(
          CEqual(Var("out62"){ OfSort(
                                 LIST(
                                   TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                 )
                               )
                             }, Var("pkgPathList"){ OfSort(
                                                      LIST(
                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                      )
                                                    )
                                                  }, NoMessage())
        , CConj(
            CResolveQuery(
              Label("java/names/PackageNames!pkg")
            , Filter(
                Or(Epsilon(), Label("java/names/Main!PKGC"))
              , LLam(
                  [Tuple([Var("id'"){OfSort(SORT("Id"))}, Wld(){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                , CEqual(Var("id'"){OfSort(SORT("Id"))}, Var("id"){OfSort(SORT("Id"))}, NoMessage())
                )
              )
            , Min([], LLam([Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}], CFalse(NoMessage())))
            , Var("s"){OfSort(SCOPE())}
            , Var("pkgPathList"){ OfSort(
                                    LIST(
                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                    )
                                  )
                                }
            , NoMessage()
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!composePkgDecl"
      , [Var("id"){OfSort(SORT("Id"))}, Var("pkgPathList"){ OfSort(
                                                              LIST(
                                                                TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                              )
                                                            )
                                                          }, Var("out63"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
      )
    , CExists(
        [Var("s_pkg"){OfSort(SCOPE())}]
      , CConj(
          CEqual(
            Var("out63"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
          , Tuple([Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
          , NoMessage()
          )
        , CConj(
            CNew([Var("s_pkg"){OfSort(SCOPE())}])
          , CConj(
              C(
                "java/names/PackageNames!composePkgPathList"
              , [Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}, Var("pkgPathList"){ OfSort(
                                                                                                     LIST(
                                                                                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                     )
                                                                                                   )
                                                                                                 }]
              , NoMessage()
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/names/PackageNames!composePkgPathList", [Wld(){OfSort(SORT("Id"))}, Wld(){OfSort(SCOPE())}, List([]){ OfSort(
                                                                                                                      LIST(
                                                                                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                      )
                                                                                                                    )
                                                                                                                  }])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!composePkgPathList"
      , [ Var("x_1"){OfSort(SORT("Id"))}
        , Var("x_2"){OfSort(SCOPE())}
        , ListTail([Var("x_3"){OfSort(
                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                               )}], Var("xs_3"){ OfSort(
                                                   LIST(
                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                   )
                                                 )
                                               }){ OfSort(
                                                     LIST(
                                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                     )
                                                   )
                                                 }
        ]
      )
    , CConj(
        C(
          "java/names/PackageNames!composePkgPath"
        , [Var("x_1"){OfSort(SORT("Id"))}, Var("x_2"){OfSort(SCOPE())}, Var("x_3"){OfSort(
                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                   )}]
        , NoMessage()
        )
      , C(
          "java/names/PackageNames!composePkgPathList"
        , [Var("x_1"){OfSort(SORT("Id"))}, Var("x_2"){OfSort(SCOPE())}, Var("xs_3"){ OfSort(
                                                                                       LIST(
                                                                                         TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                       )
                                                                                     )
                                                                                   }]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!composePkgPath"
      , [ Wld(){OfSort(SORT("Id"))}
        , Var("s_pkg"){OfSort(SCOPE())}
        , Tuple([Wld(){OfSort(PATH())}, Tuple([Wld(){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]){OfSort(
                                                                                                                                                    TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                                                  )}
        ]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!composePkgPath"
      , [ Var("id"){OfSort(SORT("Id"))}
        , Var("s_pkg"){OfSort(SCOPE())}
        , Tuple(
            [Wld(){OfSort(PATH())}, Tuple([Var("id'"){OfSort(SORT("Id"))}, Var("s_pkg'"){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
          ){OfSort(
              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
            )}
        ]
      )
    , CExists(
        [Var("astId1"){OfSort(AST_ID())}]
      , CConj(
          CTellEdge(Var("s_pkg"){OfSort(SCOPE())}, Label("java/names/Main!PKGC"), Var("s_pkg'"){OfSort(SCOPE())})
        , CConj(
            CConj(
              CAstId(Var("id"){OfSort(SORT("Id"))}, Var("astId1"){OfSort(AST_ID())})
            , CAstProperty(Var("astId1"){OfSort(AST_ID())}, Ref(), Add(), Var("id'"){OfSort(SORT("Id"))})
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageNames!declarePkg"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]
      )
    , CTellRel(
        Label("java/names/PackageNames!pkg")
      , [Var("id"){OfSort(SORT("Id"))}, Var("s_pkg"){OfSort(SCOPE())}]
      , Var("s"){OfSort(SCOPE())}
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnqualifiedInstance2Expression", [Var("unqualInst"){OfSort(SORT("UnqualifiedInstance"))}]){OfSort(SORT("Expression"))}, Var("out28"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld22"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out28"){OfSort(SORT("TYPE"))}, Var("wld22"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(C("java/expressions/ClassInstanceCreation!unqualInstOk", [Var("unqualInst"){OfSort(SORT("UnqualifiedInstance"))}], NoMessage()), CTrue())
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("QualifiedInstance", [Var("expr"){OfSort(SORT("Expression"))}, Var("unqualInst"){OfSort(SORT("UnqualifiedInstance"))}]){OfSort(SORT("Expression"))}
        , Var("out29"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [Var("exprOk4"){OfSort(SORT("TYPE"))}, Var("wld23"){OfSort(SORT("TYPE"))}, Var("wld24"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out29"){OfSort(SORT("TYPE"))}, Var("wld23"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk4"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld24"){OfSort(SORT("TYPE"))}, Var("exprOk4"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(C("java/expressions/ClassInstanceCreation!unqualInstOk", [Var("unqualInst"){OfSort(SORT("UnqualifiedInstance"))}], NoMessage()), CTrue())
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ClassInstanceCreation!unqualInstOk"
      , [ Op(
            "NewInstance"
          , [ Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}
            , Var("annoList"){OfSort(LIST(SORT("Annotation")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("qualIdList"){OfSort(LIST(SORT("QualifiedId")))}
            , Var("typeArgsOrDiamondOpt"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}
            , Var("exprList"){OfSort(LIST(SORT("Expression")))}
            ]
          ){OfSort(SORT("UnqualifiedInstance"))}
        ]
      )
    , CExists(
        [ Var("exprListOk0"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld25"){OfSort(SCOPE())}
        , Var("wld26"){OfSort(SCOPE())}
        , Var("wld27"){OfSort(SCOPE())}
        , Var("wld28"){OfSort(LIST(SORT("TYPE")))}
        ]
      , CConj(
          C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("wld25"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("wld26"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              C("java/expressions/ClassInstanceCreation!qualIdListOk", [Var("qualIdList"){OfSort(LIST(SORT("QualifiedId")))}], NoMessage())
            , CConj(
                C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOptOk", [Var("typeArgsOrDiamondOpt"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}], NoMessage())
              , CConj(
                  CConj(
                    C(
                      "java/expressions/Main!exprListOk"
                    , [Var("wld27"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk0"){OfSort(LIST(SORT("TYPE")))}]
                    , NoMessage()
                    )
                  , CEqual(Var("wld28"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk0"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
                  )
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ClassInstanceCreation!unqualInstOk"
      , [ Op(
            "NewInstance"
          , [ Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}
            , Var("annoList"){OfSort(LIST(SORT("Annotation")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("qualIdList"){OfSort(LIST(SORT("QualifiedId")))}
            , Var("typeArgsOrDiamondOpt"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}
            , Var("exprList"){OfSort(LIST(SORT("Expression")))}
            , Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}
            ]
          ){OfSort(SORT("UnqualifiedInstance"))}
        ]
      )
    , CExists(
        [ Var("exprListOk1"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld29"){OfSort(SCOPE())}
        , Var("wld30"){OfSort(SCOPE())}
        , Var("wld31"){OfSort(SCOPE())}
        , Var("wld32"){OfSort(LIST(SORT("TYPE")))}
        , Var("wld33"){OfSort(SCOPE())}
        ]
      , CConj(
          C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("wld29"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("wld30"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              C("java/expressions/ClassInstanceCreation!qualIdListOk", [Var("qualIdList"){OfSort(LIST(SORT("QualifiedId")))}], NoMessage())
            , CConj(
                C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOptOk", [Var("typeArgsOrDiamondOpt"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}], NoMessage())
              , CConj(
                  CConj(
                    C(
                      "java/expressions/Main!exprListOk"
                    , [Var("wld31"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk1"){OfSort(LIST(SORT("TYPE")))}]
                    , NoMessage()
                    )
                  , CEqual(Var("wld32"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk1"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
                  )
                , CConj(
                    C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Var("wld33"){OfSort(SCOPE())}, Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(NoName(), C("java/expressions/ClassInstanceCreation!qualIdListOk", [List([]){OfSort(LIST(SORT("QualifiedId")))}]), CTrue())
  , Rule(
      NoName()
    , C(
        "java/expressions/ClassInstanceCreation!qualIdListOk"
      , [ListTail([Var("x_1"){OfSort(SORT("QualifiedId"))}], Var("xs_1"){OfSort(LIST(SORT("QualifiedId")))}){OfSort(LIST(SORT("QualifiedId")))}]
      )
    , CConj(
        C("java/expressions/ClassInstanceCreation!qualIdOk", [Var("x_1"){OfSort(SORT("QualifiedId"))}], NoMessage())
      , C("java/expressions/ClassInstanceCreation!qualIdListOk", [Var("xs_1"){OfSort(LIST(SORT("QualifiedId")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ClassInstanceCreation!qualIdOk"
      , [Op("QualifiedId", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("QualifiedId"))}]
      )
    , CExists(
        [Var("wld34"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("wld34"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(NoName(), C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOptOk", [List([]){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}]), CTrue())
  , Rule(
      NoName()
    , C(
        "java/expressions/ClassInstanceCreation!typeArgsOrDiamondOptOk"
      , [ListTail([Var("x_1"){OfSort(SORT("TypeArgumentsOrDiamond"))}], Var("xs_1"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}]
      )
    , CConj(
        C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOk", [Var("x_1"){OfSort(SORT("TypeArgumentsOrDiamond"))}], NoMessage())
      , C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOptOk", [Var("xs_1"){OfSort(LIST(SORT("TypeArgumentsOrDiamond")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOk", [Op("TypeArguments2TypeArgumentsOrDiamond", [Var("typeArgs"){OfSort(SORT("TypeArguments"))}]){OfSort(SORT("TypeArgumentsOrDiamond"))}])
    , CExists(
        [Var("wld35"){OfSort(SCOPE())}]
      , C("java/types/ParameterizedTypes!typeArgsOk", [Var("wld35"){OfSort(SCOPE())}, Var("typeArgs"){OfSort(SORT("TypeArguments"))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/ClassInstanceCreation!typeArgsOrDiamondOk", [Op("Diamond", []){OfSort(SORT("TypeArgumentsOrDiamond"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/BooleanLiterals!boolLitOk", [Op("True", []){OfSort(SORT("BoolLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/literals/BooleanLiterals!boolLitOk", [Op("False", []){OfSort(SORT("BoolLiteral"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/packages/ImportDeclarations!importDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ImportDeclaration")))}, Wld(){OfSort(SCOPE())}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/packages/ImportDeclarations!importDeclListOk"
      , [ Var("x_1"){OfSort(SCOPE())}
        , ListTail([Var("x_2"){OfSort(SORT("ImportDeclaration"))}], Var("xs_2"){OfSort(LIST(SORT("ImportDeclaration")))}){OfSort(LIST(SORT("ImportDeclaration")))}
        , Var("x_3"){OfSort(SCOPE())}
        ]
      )
    , CConj(
        C(
          "java/packages/ImportDeclarations!importDeclOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ImportDeclaration"))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      , C(
          "java/packages/ImportDeclarations!importDeclListOk"
        , [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ImportDeclaration")))}, Var("x_3"){OfSort(SCOPE())}]
        , NoMessage()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/ImportDeclarations!importDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SingleTypeImport", [Var("typeName"){OfSort(SORT("TypeName"))}]){OfSort(SORT("ImportDeclaration"))}, Var("s_pkg"){OfSort(SCOPE())}]
      )
    , CExists(
        [ Var("id"){OfSort(SORT("Id"))}
        , Var("T"){OfSort(SORT("TYPE"))}
        , Var("s_type"){OfSort(CVar("trans/java/packages/ImportDeclarations.stx", "ty-27"))}
        , Var("s_imp"){OfSort(SCOPE())}
        , Var("typeNameOk3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        ]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(
              Tuple([Var("id"){OfSort(SORT("Id"))}, Var("T"){OfSort(SORT("TYPE"))}]){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
            , Var("typeNameOk3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
            , NoMessage()
            )
          )
        , CConj(
            CNew([Var("s_imp"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_pkg"){OfSort(SCOPE())}, Label("java/names/Main!IMP_ST"), Var("s_imp"){OfSort(SCOPE())})
            , CConj(
                C(
                  "java/names/TypeNames!declareType"
                , [Var("s_imp"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("T"){OfSort(SORT("TYPE"))}]
                , NoMessage()
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/ImportDeclarations!importDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("TypeImportOnDemand", [Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}]){OfSort(SORT("ImportDeclaration"))}, Var("s_pkg"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("s_pkgOrType"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope2"){OfSort(SCOPE())}, Var("pkgOrTypeNameOk0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CConj(
            C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("pkgOrTypeNameOk0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope2"){OfSort(SCOPE())}], NoMessage())
          , CConj(
              C(
                "java/names/PackageOrTypeNames!pkgOrTypeNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}, Var("pkgOrTypeNameOk0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
              , NoMessage()
              )
            , CEqual(Var("s_pkgOrType"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope2"){OfSort(SCOPE())}, NoMessage())
            )
          )
        , CConj(
            CTellEdge(Var("s_pkg"){OfSort(SCOPE())}, Label("java/names/Main!IMP_OD"), Var("s_pkgOrType"){OfSort(SCOPE())})
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/ImportDeclarations!importDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("SingleStaticImport", [Var("typeName"){OfSort(SORT("TypeName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("ImportDeclaration"))}
        , Var("s_imp"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("typeNameOk4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld14"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld14"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/packages/ImportDeclarations!importDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("StaticImportOnDemand", [Var("typeName"){OfSort(SORT("TypeName"))}]){OfSort(SORT("ImportDeclaration"))}, Var("s_imp"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("typeNameOk5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld15"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("s"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld15"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ConstrDecl"
          , [ Var("ctorModList"){OfSort(LIST(SORT("ConstructorModifier")))}
            , Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("formalParams"){OfSort(SORT("FormalParams"))}
            , Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}
            , Var("ctorInvOpt"){OfSort(LIST(SORT("ConstructorInvocation")))}
            , Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}
            ]
          ){OfSort(SORT("ConstructorDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_ctor"){OfSort(SCOPE())}]
      , CConj(
          C("java/classes/ConstructorDeclarations!ctorModListOk", [Var("s"){OfSort(SCOPE())}, Var("ctorModList"){OfSort(LIST(SORT("ConstructorModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_ctor"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_ctor"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C(
                  "java/classes/ClassDeclarations!typeParamsOptOk"
                , [Var("s"){OfSort(SCOPE())}, Var("typeParamsOpt"){OfSort(LIST(SORT("TypeParameters")))}, Var("s_ctor"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  C("java/classes/MethodDeclarations!formalParamsOk", [Var("s_ctor"){OfSort(SCOPE())}, Var("formalParams"){OfSort(SORT("FormalParams"))}], NoMessage())
                , CConj(
                    C("java/classes/MethodDeclarations!throwsOptOk", [Var("s"){OfSort(SCOPE())}, Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}], NoMessage())
                  , CConj(
                      C("java/classes/ConstructorDeclarations!ctorInvOptOk", [Var("s_ctor"){OfSort(SCOPE())}, Var("ctorInvOpt"){OfSort(LIST(SORT("ConstructorInvocation")))}], NoMessage())
                    , CConj(
                        C("java/statements/Blocks!blkStmtListOk", [Var("s_ctor"){OfSort(SCOPE())}, Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}], NoMessage())
                      , CTrue()
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/ConstructorDeclarations!ctorModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ConstructorModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ConstructorModifier"))}], Var("xs_2"){OfSort(LIST(SORT("ConstructorModifier")))}){OfSort(LIST(SORT("ConstructorModifier")))}]
      )
    , CConj(
        C("java/classes/ConstructorDeclarations!ctorModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ConstructorModifier"))}], NoMessage())
      , C("java/classes/ConstructorDeclarations!ctorModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ConstructorModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2ConstructorModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("ConstructorModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2ConstructorModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("ConstructorModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Private2ConstructorModifier", [Wld(){OfSort(SORT("Private"))}]){OfSort(SORT("ConstructorModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Protected2ConstructorModifier", [Wld(){OfSort(SORT("Protected"))}]){OfSort(SORT("ConstructorModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/classes/ConstructorDeclarations!ctorInvOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ConstructorInvocation")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorInvOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ConstructorInvocation"))}], Var("xs_2"){OfSort(LIST(SORT("ConstructorInvocation")))}){OfSort(LIST(SORT("ConstructorInvocation")))}]
      )
    , CConj(
        C("java/classes/ConstructorDeclarations!ctorInvOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ConstructorInvocation"))}], NoMessage())
      , C("java/classes/ConstructorDeclarations!ctorInvOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ConstructorInvocation")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorInvOk"
      , [Var("s"){OfSort(SCOPE())}, Op("AltConstrInv", [Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]){OfSort(SORT("ConstructorInvocation"))}]
      )
    , CExists(
        [Var("exprListOk9"){OfSort(LIST(SORT("TYPE")))}, Var("wld204"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprListOk"
              , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk9"){OfSort(LIST(SORT("TYPE")))}]
              , NoMessage()
              )
            , CEqual(Var("wld204"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk9"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorInvOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SuperConstrInv", [Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]){OfSort(SORT("ConstructorInvocation"))}]
      )
    , CExists(
        [Var("exprListOk10"){OfSort(LIST(SORT("TYPE")))}, Var("wld205"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprListOk"
              , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk10"){OfSort(LIST(SORT("TYPE")))}]
              , NoMessage()
              )
            , CEqual(Var("wld205"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk10"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/ConstructorDeclarations!ctorInvOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ExprNameConstrInv"
          , [Var("expr"){OfSort(SORT("Expression"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}, Var("exprList"){OfSort(LIST(SORT("Expression")))}]
          ){OfSort(SORT("ConstructorInvocation"))}
        ]
      )
    , CExists(
        [Var("exprOk89"){OfSort(SORT("TYPE"))}, Var("exprListOk11"){OfSort(LIST(SORT("TYPE")))}, Var("wld206"){OfSort(SORT("TYPE"))}, Var("wld207"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk89"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld206"){OfSort(SORT("TYPE"))}, Var("exprOk89"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
          , CConj(
              CConj(
                C(
                  "java/expressions/Main!exprListOk"
                , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk11"){OfSort(LIST(SORT("TYPE")))}]
                , NoMessage()
                )
              , CEqual(Var("wld207"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk11"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
              )
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/MethodNames!mthdNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("MethodName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("MethodName"))}, Var("out27"){OfSort(TUPLE([]))}]
      )
    , CExists(
        [Var("wld21"){OfSort(TUPLE([]))}]
      , CConj(CEqual(Var("out27"){OfSort(TUPLE([]))}, Var("wld21"){OfSort(TUPLE([]))}, NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!pkgOrTypeNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PackageOrTypeName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("PackageOrTypeName"))}, Var("out13"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out13"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
              , NoMessage()
              )
            , CEqual(Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!pkgOrTypeNameOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("PackageOrTypeName", [Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("PackageOrTypeName"))}
        , Var("out14"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
        ]
      )
    , CExists(
        [Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out14"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
        , CExists(
            [Var("s_pkgOrType"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope4"){OfSort(SCOPE())}, Var("pkgOrTypeNameOk2"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
          , CConj(
              CConj(
                C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("pkgOrTypeNameOk2"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope4"){OfSort(SCOPE())}], NoMessage())
              , CConj(
                  C(
                    "java/names/PackageOrTypeNames!pkgOrTypeNameOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}, Var("pkgOrTypeNameOk2"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                  , NoMessage()
                  )
                , CEqual(Var("s_pkgOrType"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope4"){OfSort(SCOPE())}, NoMessage())
                )
              )
            , CConj(
                CConj(
                  C(
                    "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName"
                  , [Var("s_pkgOrType"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                  , NoMessage()
                  )
                , CEqual(Var("pkgOrTypeDecl"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberPkgOrTypeName3"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!pkgOrTypeDeclScope"
      , [Op("PKG_DECL", [Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("out15"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("pkgDeclScope0"){OfSort(SCOPE())}]
      , CConj(
          CConj(
            C("java/names/PackageNames!pkgDeclScope", [Var("pkgDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Var("pkgDeclScope0"){OfSort(SCOPE())}], NoMessage())
          , CEqual(Var("out15"){OfSort(SCOPE())}, Var("pkgDeclScope0"){OfSort(SCOPE())}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!pkgOrTypeDeclScope"
      , [Op("TYPE_DECL", [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("out16"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("typeDeclScope0"){OfSort(SCOPE())}]
      , CConj(
          CConj(
            C("java/names/TypeNames!typeDeclScope", [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("typeDeclScope0"){OfSort(SCOPE())}], NoMessage())
          , CEqual(Var("out16"){OfSort(SCOPE())}, Var("typeDeclScope0"){OfSort(SCOPE())}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out17"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("resolveLexicalPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalTypeNames2"){ OfSort(
                                                                                                                    LIST(
                                                                                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                    )
                                                                                                                  )
                                                                                                                }]
      , CConj(
          CConj(
            C(
              "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName1"
            , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames2"){ OfSort(
                                                                                                            LIST(
                                                                                                              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                            )
                                                                                                          )
                                                                                                        }, Var("resolveLexicalPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
            , NoMessage()
            )
          , CConj(
              C(
                "java/names/TypeNames!resolveLexicalTypeNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames2"){ OfSort(
                                                                                                              LIST(
                                                                                                                TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                              )
                                                                                                            )
                                                                                                          }]
              , NoMessage()
              )
            , CEqual(Var("out17"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName1"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, List([]){ OfSort(
                                                                               LIST(
                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                               )
                                                                             )
                                                                           }, Var("out18"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("resolveLexicalPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalPkgNames0"){ OfSort(
                                                                                                                   LIST(
                                                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                   )
                                                                                                                 )
                                                                                                               }]
      , CConj(
          CConj(
            C(
              "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName2"
            , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgNames0"){ OfSort(
                                                                                                           LIST(
                                                                                                             TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                           )
                                                                                                         )
                                                                                                       }, Var("resolveLexicalPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
            , NoMessage()
            )
          , CConj(
              C(
                "java/names/PackageNames!resolveLexicalPkgNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgNames0"){ OfSort(
                                                                                                             LIST(
                                                                                                               TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                             )
                                                                                                           )
                                                                                                         }]
              , NoMessage()
              )
            , CEqual(Var("out18"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveLexicalPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName1"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("typePathList"){ OfSort(
                                                                                          LIST(
                                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                          )
                                                                                        )
                                                                                      }, Var("out19"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("singleTypeDecl4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!singleTypeDecl"
            , [Var("id"){OfSort(SORT("Id"))}, Var("typePathList"){ OfSort(
                                                                     LIST(
                                                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                     )
                                                                   )
                                                                 }, Var("singleTypeDecl4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(
              Var("out19"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , Op("TYPE_DECL", [Var("singleTypeDecl4"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , NoMessage()
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName2"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, List([]){ OfSort(
                                                                               LIST(
                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                               )
                                                                             )
                                                                           }, Var("out20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("wld19"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("wld19"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
        , CFalse(
            Message(
              Error()
            , Formatted(
                [Text("Package or type "), Term(Var("id"){OfSort(SORT("Id"))}), Text(" not found")]
              )
            , NoOrigin()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName2"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("pkgPathList"){ OfSort(
                                                                                         LIST(
                                                                                           TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                         )
                                                                                       )
                                                                                     }, Var("out21"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("composePkgDecl0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
      , CConj(
          CConj(
            C(
              "java/names/PackageNames!composePkgDecl"
            , [Var("id"){OfSort(SORT("Id"))}, Var("pkgPathList"){ OfSort(
                                                                    LIST(
                                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                    )
                                                                  )
                                                                }, Var("composePkgDecl0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
            , NoMessage()
            )
          , CEqual(
              Var("out21"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , Op("PKG_DECL", [Var("composePkgDecl0"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , NoMessage()
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out22"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("resolveMemberPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberTypeNames2"){ OfSort(
                                                                                                                  LIST(
                                                                                                                    TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                  )
                                                                                                                )
                                                                                                              }]
      , CConj(
          CConj(
            C(
              "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName1"
            , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames2"){ OfSort(
                                                                                                           LIST(
                                                                                                             TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                           )
                                                                                                         )
                                                                                                       }, Var("resolveMemberPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
            , NoMessage()
            )
          , CConj(
              C(
                "java/names/TypeNames!resolveMemberTypeNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames2"){ OfSort(
                                                                                                             LIST(
                                                                                                               TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                             )
                                                                                                           )
                                                                                                         }]
              , NoMessage()
              )
            , CEqual(Var("out22"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberPkgOrTypeName10"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName1"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, List([]){ OfSort(
                                                                               LIST(
                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                               )
                                                                             )
                                                                           }, Var("out23"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("resolveMemberPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberPkgNames0"){ OfSort(
                                                                                                                 LIST(
                                                                                                                   TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                 )
                                                                                                               )
                                                                                                             }]
      , CConj(
          CConj(
            C(
              "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName2"
            , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames0"){ OfSort(
                                                                                                          LIST(
                                                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                          )
                                                                                                        )
                                                                                                      }, Var("resolveMemberPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
            , NoMessage()
            )
          , CConj(
              C(
                "java/names/PackageNames!resolveMemberPkgNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgNames0"){ OfSort(
                                                                                                            LIST(
                                                                                                              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                            )
                                                                                                          )
                                                                                                        }]
              , NoMessage()
              )
            , CEqual(Var("out23"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("resolveMemberPkgOrTypeName20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName1"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("typePathList"){ OfSort(
                                                                                          LIST(
                                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                          )
                                                                                        )
                                                                                      }, Var("out24"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("singleTypeDecl5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!singleTypeDecl"
            , [Var("id"){OfSort(SORT("Id"))}, Var("typePathList"){ OfSort(
                                                                     LIST(
                                                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                     )
                                                                   )
                                                                 }, Var("singleTypeDecl5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(
              Var("out24"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , Op("TYPE_DECL", [Var("singleTypeDecl5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , NoMessage()
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName2"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, List([]){ OfSort(
                                                                               LIST(
                                                                                 TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                               )
                                                                             )
                                                                           }, Var("out25"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("wld20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out25"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("wld20"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, NoMessage())
        , CFalse(
            Message(
              Error()
            , Formatted(
                [Text("Package or type "), Term(Var("id"){OfSort(SORT("Id"))}), Text(" not found")]
              )
            , NoOrigin()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName2"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("pkgPathList"){ OfSort(
                                                                                         LIST(
                                                                                           TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                         )
                                                                                       )
                                                                                     }, Var("out26"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      )
    , CExists(
        [Var("composePkgDecl1"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
      , CConj(
          CConj(
            C(
              "java/names/PackageNames!composePkgDecl"
            , [Var("id"){OfSort(SORT("Id"))}, Var("pkgPathList"){ OfSort(
                                                                    LIST(
                                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                    )
                                                                  )
                                                                }, Var("composePkgDecl1"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
            , NoMessage()
            )
          , CEqual(
              Var("out26"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , Op("PKG_DECL", [Var("composePkgDecl1"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , NoMessage()
            )
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "FieldDecl"
          , [Var("fldModList"){OfSort(LIST(SORT("FieldModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}]
          ){OfSort(SORT("FieldDeclaration"))}
        ]
      )
    , CConj(
        C("java/classes/FieldDeclarations!fldModListOk", [Var("s"){OfSort(SCOPE())}, Var("fldModList"){OfSort(LIST(SORT("FieldModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclListOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varDeclIdOk"
      , [Var("s"){OfSort(SCOPE())}, Op("VariableDecl", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("VarDeclId"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varDeclIdOk"
      , [Var("s"){OfSort(SCOPE())}, Op("VariableDeclArray", [Var("id"){OfSort(SORT("Id"))}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}]){OfSort(SORT("VarDeclId"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!annDimListOk", [Var("s"){OfSort(SCOPE())}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/FieldDeclarations!varDeclListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("VarDecl")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varDeclListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("VarDecl"))}], Var("xs_2"){OfSort(LIST(SORT("VarDecl")))}){OfSort(LIST(SORT("VarDecl")))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varDeclOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("VarDecl"))}], NoMessage())
      , C("java/classes/FieldDeclarations!varDeclListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("VarDecl")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("VariableDeclInit", [Var("varDeclId"){OfSort(SORT("VarDeclId"))}, Var("varInit"){OfSort(SORT("VariableInitializer"))}]){OfSort(SORT("VarDecl"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!varInitOk", [Var("s"){OfSort(SCOPE())}, Var("varInit"){OfSort(SORT("VariableInitializer"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varDeclOk"
      , [Var("s"){OfSort(SCOPE())}, Op("VarDeclId2VarDecl", [Var("varDeclId"){OfSort(SORT("VarDeclId"))}]){OfSort(SORT("VarDecl"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/FieldDeclarations!varInitListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("VariableInitializer")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varInitListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("VariableInitializer"))}], Var("xs_2"){OfSort(LIST(SORT("VariableInitializer")))}){OfSort(LIST(SORT("VariableInitializer")))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varInitOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("VariableInitializer"))}], NoMessage())
      , C("java/classes/FieldDeclarations!varInitListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("VariableInitializer")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Expression2VariableInitializer", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("VariableInitializer"))}]
      )
    , CExists(
        [Var("exprOk0"){OfSort(SORT("TYPE"))}, Var("wld0"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk0"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld0"){OfSort(SORT("TYPE"))}, Var("exprOk0"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!varInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayInitializer2VariableInitializer", [Var("arrayInit"){OfSort(SORT("ArrayInitializer"))}]){OfSort(SORT("VariableInitializer"))}]
      )
    , CConj(
        C("java/arrays/ArrayInitializers!arrayInitOk", [Var("s"){OfSort(SCOPE())}, Var("arrayInit"){OfSort(SORT("ArrayInitializer"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/FieldDeclarations!fldModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("FieldModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("FieldModifier"))}], Var("xs_2"){OfSort(LIST(SORT("FieldModifier")))}){OfSort(LIST(SORT("FieldModifier")))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!fldModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("FieldModifier"))}], NoMessage())
      , C("java/classes/FieldDeclarations!fldModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("FieldModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2FieldModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2FieldModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Protected2FieldModifier", [Wld(){OfSort(SORT("Protected"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Private2FieldModifier", [Wld(){OfSort(SORT("Private"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2FieldModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Final2FieldModifier", [Wld(){OfSort(SORT("Final"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Transient2FieldModifier", [Wld(){OfSort(SORT("Transient"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!fldModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Volatile2FieldModifier", [Wld(){OfSort(SORT("Volatile"))}]){OfSort(SORT("FieldModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannPrimitiveType2UnannType", [Var("unannPrimType"){OfSort(SORT("UnannPrimitiveType"))}]){OfSort(SORT("UnannType"))}]
      )
    , CConj(C("java/classes/FieldDeclarations!unannPrimTypeOk", [Var("unannPrimType"){OfSort(SORT("UnannPrimitiveType"))}], NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannReferenceType2UnannType", [Var("unannRefType"){OfSort(SORT("UnannReferenceType"))}]){OfSort(SORT("UnannType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannRefTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannRefType"){OfSort(SORT("UnannReferenceType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/FieldDeclarations!unannPrimTypeOk", [Op("NumericType", [Var("numType"){OfSort(SORT("NumericType"))}]){OfSort(SORT("UnannPrimitiveType"))}])
    , CConj(C("java/types/PrimitiveTypes!numTypeOk", [Var("numType"){OfSort(SORT("NumericType"))}], NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C("java/classes/FieldDeclarations!unannPrimTypeOk", [Op("BooleanType", []){OfSort(SORT("UnannPrimitiveType"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannRefTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannClassType2UnannReferenceType", [Var("unannClsType"){OfSort(SORT("UnannClassType"))}]){OfSort(SORT("UnannReferenceType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannClsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannClsType"){OfSort(SORT("UnannClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannRefTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannArrayType2UnannReferenceType", [Var("unannArrayType"){OfSort(SORT("UnannArrayType"))}]){OfSort(SORT("UnannReferenceType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannArrayTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannArrayType"){OfSort(SORT("UnannArrayType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannClsTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassType", [Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]){OfSort(SORT("UnannClassType"))}]
      )
    , CExists(
        [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("resolveLexicalTypeNames0"){ OfSort(
                                                                                                                                                                           LIST(
                                                                                                                                                                             TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                                                                           )
                                                                                                                                                                         )
                                                                                                                                                                       }]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!singleTypeDecl"
            , [Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames0"){ OfSort(
                                                                                 LIST(
                                                                                   TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                 )
                                                                               )
                                                                             }, Var("singleTypeDecl0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CConj(
              C(
                "java/names/TypeNames!resolveLexicalTypeNames"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames0"){ OfSort(
                                                                                                              LIST(
                                                                                                                TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                              )
                                                                                                            )
                                                                                                          }]
              , NoMessage()
              )
            , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl0"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
            )
          )
        , CConj(
            C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannClsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "UnannClassOrInterfaceTypeMember"
          , [Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("UnannClassType"))}
        ]
      )
    , CExists(
        [ Var("s_pkgOrCls"){OfSort(SCOPE())}
        , Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("unannPkgOrClsTypeOk0"){OfSort(SCOPE())}
        , Var("singleTypeDecl1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        , Var("resolveMemberTypeNames0"){ OfSort(
                                            LIST(
                                              TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                            )
                                          )
                                        }
        ]
      , CConj(
          CConj(
            C(
              "java/classes/FieldDeclarations!unannPkgOrClsTypeOk"
            , [Var("s"){OfSort(SCOPE())}, Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("unannPkgOrClsTypeOk0"){OfSort(SCOPE())}]
            , NoMessage()
            )
          , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("unannPkgOrClsTypeOk0"){OfSort(SCOPE())}, NoMessage())
          )
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              CConj(
                C(
                  "java/names/TypeNames!singleTypeDecl"
                , [Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames0"){ OfSort(
                                                                                    LIST(
                                                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                    )
                                                                                  )
                                                                                }, Var("singleTypeDecl1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
                , NoMessage()
                )
              , CConj(
                  C(
                    "java/names/TypeNames!resolveMemberTypeNames"
                  , [Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames0"){ OfSort(
                                                                                                                          LIST(
                                                                                                                            TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                          )
                                                                                                                        )
                                                                                                                      }]
                  , NoMessage()
                  )
                , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl1"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
                )
              )
            , CConj(
                C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannPkgOrClsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("ClassType", [Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]){OfSort(SORT("UnannClassType"))}
        , Var("out0"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope0"){OfSort(SCOPE())}, Var("resolveLexicalPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
      , CConj(
          CEqual(Var("out0"){OfSort(SCOPE())}, Var("s_pkgOrCls"){OfSort(SCOPE())}, NoMessage())
        , CConj(
            CConj(
              C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("resolveLexicalPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope0"){OfSort(SCOPE())}], NoMessage())
            , CConj(
                C(
                  "java/names/PackageOrTypeNames!resolveLexicalPkgOrTypeName"
                , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                , NoMessage()
                )
              , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope0"){OfSort(SCOPE())}, NoMessage())
              )
            )
          , CConj(
              C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannPkgOrClsTypeOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "UnannClassOrInterfaceTypeMember"
          , [Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}]
          ){OfSort(SORT("UnannClassType"))}
        , Var("out1"){OfSort(SCOPE())}
        ]
      )
    , CExists(
        [Var("s_pkgOrCls"){OfSort(SCOPE())}]
      , CConj(
          CEqual(Var("out1"){OfSort(SCOPE())}, Var("s_pkgOrCls"){OfSort(SCOPE())}, NoMessage())
        , CExists(
            [Var("s_pkgOrCls'"){OfSort(SCOPE())}, Var("unannPkgOrClsTypeOk1"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope1"){OfSort(SCOPE())}, Var("resolveMemberPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
          , CConj(
              CConj(
                C(
                  "java/classes/FieldDeclarations!unannPkgOrClsTypeOk"
                , [Var("s"){OfSort(SCOPE())}, Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("unannPkgOrClsTypeOk1"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CEqual(Var("s_pkgOrCls'"){OfSort(SCOPE())}, Var("unannPkgOrClsTypeOk1"){OfSort(SCOPE())}, NoMessage())
              )
            , CConj(
                C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
              , CConj(
                  CConj(
                    C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("resolveMemberPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope1"){OfSort(SCOPE())}], NoMessage())
                  , CConj(
                      C(
                        "java/names/PackageOrTypeNames!resolveMemberPkgOrTypeName"
                      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberPkgOrTypeName0"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                      , NoMessage()
                      )
                    , CEqual(Var("s_pkgOrCls"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope1"){OfSort(SCOPE())}, NoMessage())
                    )
                  )
                , CConj(
                    C("java/types/ParameterizedTypes!typeArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("typeArgsOpt"){OfSort(LIST(SORT("TypeArguments")))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannArrayTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannArrayTypePrimitive", [Var("unannPrimType"){OfSort(SORT("UnannPrimitiveType"))}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}]){OfSort(SORT("UnannArrayType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannPrimTypeOk", [Var("unannPrimType"){OfSort(SORT("UnannPrimitiveType"))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!annDimListOk", [Var("s"){OfSort(SCOPE())}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/FieldDeclarations!unannArrayTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannArrayTypeClassType", [Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}]){OfSort(SORT("UnannArrayType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannClsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannClsType"){OfSort(SORT("UnannClassType"))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!annDimListOk", [Var("s"){OfSort(SCOPE())}, Var("annDimList"){OfSort(LIST(SORT("AnnotatedDim")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!typeNameOk"
      , [Var("s"){OfSort(SCOPE())}, Op("TypeName", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("TypeName"))}, Var("out5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      )
    , CExists(
        [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("resolveLexicalTypeNames1"){ OfSort(
                                                                                                                                                                           LIST(
                                                                                                                                                                             TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                                                                           )
                                                                                                                                                                         )
                                                                                                                                                                       }]
      , CConj(
          CEqual(Var("out5"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/TypeNames!singleTypeDecl"
              , [Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames1"){ OfSort(
                                                                                   LIST(
                                                                                     TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                   )
                                                                                 )
                                                                               }, Var("singleTypeDecl2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/names/TypeNames!resolveLexicalTypeNames"
                , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveLexicalTypeNames1"){ OfSort(
                                                                                                                LIST(
                                                                                                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                )
                                                                                                              )
                                                                                                            }]
                , NoMessage()
                )
              , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl2"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
              )
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!typeNameOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("TypeName", [Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}, Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("TypeName"))}
        , Var("out6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        ]
      )
    , CExists(
        [Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CEqual(Var("out6"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
        , CExists(
            [ Var("s_pkgOrType"){OfSort(SCOPE())}
            , Var("pkgOrTypeDeclScope3"){OfSort(SCOPE())}
            , Var("pkgOrTypeNameOk1"){OfSort(SORT("PKG_OR_TYPE_DECL"))}
            , Var("singleTypeDecl3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
            , Var("resolveMemberTypeNames1"){ OfSort(
                                                LIST(
                                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                )
                                              )
                                            }
            ]
          , CConj(
              CConj(
                C("java/names/PackageOrTypeNames!pkgOrTypeDeclScope", [Var("pkgOrTypeNameOk1"){OfSort(SORT("PKG_OR_TYPE_DECL"))}, Var("pkgOrTypeDeclScope3"){OfSort(SCOPE())}], NoMessage())
              , CConj(
                  C(
                    "java/names/PackageOrTypeNames!pkgOrTypeNameOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("pkgOrTypeName"){OfSort(SORT("PackageOrTypeName"))}, Var("pkgOrTypeNameOk1"){OfSort(SORT("PKG_OR_TYPE_DECL"))}]
                  , NoMessage()
                  )
                , CEqual(Var("s_pkgOrType"){OfSort(SCOPE())}, Var("pkgOrTypeDeclScope3"){OfSort(SCOPE())}, NoMessage())
                )
              )
            , CConj(
                CConj(
                  C(
                    "java/names/TypeNames!singleTypeDecl"
                  , [Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames1"){ OfSort(
                                                                                      LIST(
                                                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                      )
                                                                                    )
                                                                                  }, Var("singleTypeDecl3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
                  , NoMessage()
                  )
                , CConj(
                    C(
                      "java/names/TypeNames!resolveMemberTypeNames"
                    , [Var("s_pkgOrType"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("resolveMemberTypeNames1"){ OfSort(
                                                                                                                             LIST(
                                                                                                                               TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                                             )
                                                                                                                           )
                                                                                                                         }]
                    , NoMessage()
                    )
                  , CEqual(Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("singleTypeDecl3"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
                  )
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!typeDeclScope"
      , [Tuple([Wld(){OfSort(SORT("Id"))}, Var("ty"){OfSort(SORT("TYPE"))}]){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("out7"){OfSort(SCOPE())}]
      )
    , CExists(
        [Var("typeScope0"){OfSort(SCOPE())}]
      , CConj(
          CConj(
            C("java/types/ReferenceTypes!typeScope", [Var("ty"){OfSort(SORT("TYPE"))}, Var("typeScope0"){OfSort(SCOPE())}], NoMessage())
          , CEqual(Var("out7"){OfSort(SCOPE())}, Var("typeScope0"){OfSort(SCOPE())}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!resolveLexicalTypeNames"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out8"){ OfSort(
                                                                                  LIST(
                                                                                    TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                  )
                                                                                )
                                                                              }]
      )
    , CExists(
        [Var("typePathList"){ OfSort(
                                LIST(
                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                )
                              )
                            }]
      , CConj(
          CEqual(Var("out8"){ OfSort(
                                LIST(
                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                )
                              )
                            }, Var("typePathList"){ OfSort(
                                                      LIST(
                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                      )
                                                    )
                                                  }, NoMessage())
        , CConj(
            CResolveQuery(
              Label("java/names/TypeNames!type")
            , Filter(
                Concat(
                  Closure(Label("java/names/Main!LEX"))
                , Concat(
                    Or(
                      Epsilon()
                    , Or(
                        Or(Label("java/names/Main!PKGC"), Label("java/names/Main!IMP_ST"))
                      , Concat(Label("java/names/Main!IMP_OD"), Or(Epsilon(), Label("java/names/Main!PKGC")))
                      )
                    )
                  , Concat(Closure(Label("java/names/Main!EXT")), Closure(Label("java/names/Main!IMPL")))
                  )
                )
              , LLam(
                  [Tuple([Var("id'"){OfSort(SORT("Id"))}, Wld(){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                , CEqual(Var("id'"){OfSort(SORT("Id"))}, Var("id"){OfSort(SORT("Id"))}, NoMessage())
                )
              )
            , Min(
                [ LabelPair(EOP(), Label("java/names/Main!LEX"))
                , LabelPair(EOP(), Label("java/names/Main!IMP_OD"))
                , LabelPair(EOP(), Label("java/names/Main!EXT"))
                , LabelPair(Label("java/names/Main!IMP_ST"), Label("java/names/Main!PKGC"))
                , LabelPair(Label("java/names/Main!IMP_ST"), Label("java/names/Main!IMP_OD"))
                , LabelPair(Label("java/names/Main!PKGC"), Label("java/names/Main!IMP_OD"))
                ]
              , LLam([Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}], CTrue())
              )
            , Var("s"){OfSort(SCOPE())}
            , Var("typePathList"){ OfSort(
                                     LIST(
                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                     )
                                   )
                                 }
            , NoMessage()
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!resolveMemberTypeNames"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("out9"){ OfSort(
                                                                                  LIST(
                                                                                    TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                  )
                                                                                )
                                                                              }]
      )
    , CExists(
        [Var("typePathList"){ OfSort(
                                LIST(
                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                )
                              )
                            }]
      , CConj(
          CEqual(Var("out9"){ OfSort(
                                LIST(
                                  TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                )
                              )
                            }, Var("typePathList"){ OfSort(
                                                      LIST(
                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                      )
                                                    )
                                                  }, NoMessage())
        , CConj(
            CResolveQuery(
              Label("java/names/TypeNames!type")
            , Filter(
                Concat(
                  Or(Epsilon(), Label("java/names/Main!PKGC"))
                , Concat(Closure(Label("java/names/Main!EXT")), Closure(Label("java/names/Main!IMPL")))
                )
              , LLam(
                  [Tuple([Var("id'"){OfSort(SORT("Id"))}, Wld(){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]
                , CEqual(Var("id'"){OfSort(SORT("Id"))}, Var("id"){OfSort(SORT("Id"))}, NoMessage())
                )
              )
            , Min(
                [ LabelPair(EOP(), Label("java/names/Main!LEX"))
                , LabelPair(EOP(), Label("java/names/Main!IMP_OD"))
                , LabelPair(EOP(), Label("java/names/Main!EXT"))
                , LabelPair(Label("java/names/Main!IMP_ST"), Label("java/names/Main!PKGC"))
                , LabelPair(Label("java/names/Main!IMP_ST"), Label("java/names/Main!IMP_OD"))
                , LabelPair(Label("java/names/Main!PKGC"), Label("java/names/Main!IMP_OD"))
                ]
              , LLam([Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}, Wld(){OfSort(TUPLE([SORT("Id"), SCOPE()]))}], CTrue())
              )
            , Var("s"){OfSort(SCOPE())}
            , Var("typePathList"){ OfSort(
                                     LIST(
                                       TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                     )
                                   )
                                 }
            , NoMessage()
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!singleTypeDecl"
      , [Var("id"){OfSort(SORT("Id"))}, List([]){ OfSort(
                                                    LIST(
                                                      TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                    )
                                                  )
                                                }, Var("out10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      )
    , CExists(
        [Var("wld16"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CEqual(Var("out10"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld16"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
        , CFalse(
            Message(
              Error()
            , Formatted(
                [Text("Type "), Term(Var("id"){OfSort(SORT("Id"))}), Text(" not found")]
              )
            , Origin(Var("id"){OfSort(SORT("Id"))})
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!singleTypeDecl"
      , [ Var("id"){OfSort(SORT("Id"))}
        , List([Tuple([Wld(){OfSort(PATH())}, Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}]){OfSort(
                                                                                                        TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                      )}]){ OfSort(
                                                                                                              LIST(
                                                                                                                TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                                              )
                                                                                                            )
                                                                                                          }
        , Var("out11"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
        ]
      )
    , CExists(
        [Var("id'"){OfSort(SORT("Id"))}, Var("T"){OfSort(SORT("TYPE"))}, Var("matchType0"){OfSort(SCOPE())}, Var("astId0"){OfSort(AST_ID())}]
      , CConj(
          CEqual(
            Var("out11"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
          , Tuple([Var("id'"){OfSort(SORT("Id"))}, Var("T"){OfSort(SORT("TYPE"))}]){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}
          , NoMessage()
          )
        , CConj(
            CConj(
              C("java/types/Main!matchType", [Var("T"){OfSort(SORT("TYPE"))}, Var("matchType0"){OfSort(SCOPE())}], NoMessage())
            , CEqual(
                Tuple([Var("id'"){OfSort(SORT("Id"))}, Var("matchType0"){OfSort(SCOPE())}]){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
              , Var("typeDecl"){OfSort(TUPLE([SORT("Id"), SCOPE()]))}
              , NoMessage()
              )
            )
          , CConj(
              CAstId(Var("id"){OfSort(SORT("Id"))}, Var("astId0"){OfSort(AST_ID())})
            , CAstProperty(Var("astId0"){OfSort(AST_ID())}, Ref(), Set(), Var("id'"){OfSort(SORT("Id"))})
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/names/TypeNames!singleTypeDecl", [Var("id"){OfSort(SORT("Id"))}, Wld(){ OfSort(
                                                                                        LIST(
                                                                                          TUPLE([PATH(), TUPLE([SORT("Id"), SCOPE()])])
                                                                                        )
                                                                                      )
                                                                                    }, Var("out12"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}])
    , CExists(
        [Var("wld17"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CEqual(Var("out12"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld17"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
        , CFalse(
            Message(
              Error()
            , Formatted(
                [Text("Type "), Term(Var("id"){OfSort(SORT("Id"))}), Text(" is ambiguous")]
              )
            , Origin(Var("id"){OfSort(SORT("Id"))})
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/names/TypeNames!declareType"
      , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Var("T"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("fromType0"){OfSort(SCOPE())}]
      , CConj(
          C("java/types/Main!fromType", [Var("T"){OfSort(SORT("TYPE"))}, Var("fromType0"){OfSort(SCOPE())}], NoMessage())
        , CTellRel(
            Label("java/names/TypeNames!type")
          , [Var("id"){OfSort(SORT("Id"))}, Var("fromType0"){OfSort(SCOPE())}]
          , Var("s"){OfSort(SCOPE())}
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Labeled", [Var("id"){OfSort(SORT("Id"))}, Var("stmt"){OfSort(SORT("Statement"))}]){OfSort(SORT("Statement"))}]
      )
    , CConj(
        C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("If", [Var("expr_cond"){OfSort(SORT("Expression"))}, Var("stmt_then"){OfSort(SORT("Statement"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("s_then"){OfSort(SCOPE())}, Var("exprOk5"){OfSort(SORT("TYPE"))}, Var("wld36"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr_cond"){OfSort(SORT("Expression"))}, Var("exprOk5"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld36"){OfSort(SORT("TYPE"))}, Var("exprOk5"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            CNew([Var("s_then"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_then"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/statements/Statements!stmtOk", [Var("s_then"){OfSort(SCOPE())}, Var("stmt_then"){OfSort(SORT("Statement"))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "IfElse"
          , [Var("expr_cond"){OfSort(SORT("Expression"))}, Var("stmt_then"){OfSort(SORT("Statement"))}, Var("stmt_else"){OfSort(SORT("Statement"))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_then"){OfSort(SCOPE())}, Var("s_else"){OfSort(SCOPE())}, Var("exprOk6"){OfSort(SORT("TYPE"))}, Var("wld37"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr_cond"){OfSort(SORT("Expression"))}, Var("exprOk6"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld37"){OfSort(SORT("TYPE"))}, Var("exprOk6"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            CNew([Var("s_then"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_then"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/statements/Statements!stmtOk", [Var("s_then"){OfSort(SCOPE())}, Var("stmt_then"){OfSort(SORT("Statement"))}], NoMessage())
              , CConj(
                  CNew([Var("s_else"){OfSort(SCOPE())}])
                , CConj(
                    CTellEdge(Var("s_else"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
                  , CConj(
                      C("java/statements/Statements!stmtOk", [Var("s_else"){OfSort(SCOPE())}, Var("stmt_else"){OfSort(SORT("Statement"))}], NoMessage())
                    , CTrue()
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("While", [Var("expr_cond"){OfSort(SORT("Expression"))}, Var("stmt"){OfSort(SORT("Statement"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("s_while"){OfSort(SCOPE())}, Var("exprOk7"){OfSort(SORT("TYPE"))}, Var("wld38"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr_cond"){OfSort(SORT("Expression"))}, Var("exprOk7"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld38"){OfSort(SORT("TYPE"))}, Var("exprOk7"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            CNew([Var("s_while"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_while"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "For"
          , [Var("forInit"){OfSort(SORT("ForInit"))}, Var("exprOpt"){OfSort(LIST(SORT("Expression")))}, Var("forUpdate"){OfSort(SORT("ForUpdate"))}, Var("stmt"){OfSort(SORT("Statement"))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_for"){OfSort(SCOPE())}, Var("exprOptOk0"){OfSort(SORT("TYPE"))}, Var("wld39"){OfSort(SORT("TYPE"))}]
      , CConj(
          CNew([Var("s_for"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_for"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!forInitOk", [Var("s"){OfSort(SCOPE())}, Var("forInit"){OfSort(SORT("ForInit"))}], NoMessage())
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprOptOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("exprOpt"){OfSort(LIST(SORT("Expression")))}, Var("exprOptOk0"){OfSort(SORT("TYPE"))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld39"){OfSort(SORT("TYPE"))}, Var("exprOptOk0"){OfSort(SORT("TYPE"))}, NoMessage())
                )
              , CConj(
                  C("java/statements/Statements!forUpdateOk", [Var("s"){OfSort(SCOPE())}, Var("forUpdate"){OfSort(SORT("ForUpdate"))}], NoMessage())
                , CConj(
                    C("java/statements/Statements!stmtOk", [Var("s_for"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ForEach"
          , [ Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}
            , Var("unannType"){OfSort(SORT("UnannType"))}
            , Var("varDeclId"){OfSort(SORT("VarDeclId"))}
            , Var("expr"){OfSort(SORT("Expression"))}
            , Var("stmt"){OfSort(SORT("Statement"))}
            ]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_foreach"){OfSort(SCOPE())}, Var("exprOk8"){OfSort(SORT("TYPE"))}, Var("wld40"){OfSort(SORT("TYPE"))}]
      , CConj(
          CNew([Var("s_foreach"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_foreach"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
            , CConj(
                C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
              , CConj(
                  C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
                , CConj(
                    CConj(
                      C(
                        "java/expressions/Main!exprOk"
                      , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk8"){OfSort(SORT("TYPE"))}]
                      , NoMessage()
                      )
                    , CEqual(Var("wld40"){OfSort(SORT("TYPE"))}, Var("exprOk8"){OfSort(SORT("TYPE"))}, NoMessage())
                    )
                  , CConj(
                      C("java/statements/Statements!stmtOk", [Var("s_foreach"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
                    , CTrue()
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!forInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Exprs2ForInit", [Var("exprs"){OfSort(SORT("Exprs"))}]){OfSort(SORT("ForInit"))}]
      )
    , CConj(
        C("java/statements/Statements!exprsOk", [Var("s"){OfSort(SCOPE())}, Var("exprs"){OfSort(SORT("Exprs"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!forInitOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "VarDecls"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}]
          ){OfSort(SORT("ForInit"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclListOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclList"){OfSort(LIST(SORT("VarDecl")))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!forUpdateOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Exprs2ForUpdate", [Var("exprs"){OfSort(SORT("Exprs"))}]){OfSort(SORT("ForUpdate"))}]
      )
    , CConj(
        C("java/statements/Statements!exprsOk", [Var("s"){OfSort(SCOPE())}, Var("exprs"){OfSort(SORT("Exprs"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!exprsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExprList", [Var("exprList"){OfSort(LIST(SORT("Expression")))}]){OfSort(SORT("Exprs"))}]
      )
    , CExists(
        [Var("exprListOk2"){OfSort(LIST(SORT("TYPE")))}, Var("wld41"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprListOk"
            , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk2"){OfSort(LIST(SORT("TYPE")))}]
            , NoMessage()
            )
          , CEqual(Var("wld41"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk2"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Block2Statement", [Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("Statement"))}]
      )
    , CConj(
        C("java/statements/Blocks!blkOk", [Var("s"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExpressionStatement", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk9"){OfSort(SORT("TYPE"))}, Var("wld42"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk9"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld42"){OfSort(SORT("TYPE"))}, Var("exprOk9"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Assert", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk10"){OfSort(SORT("TYPE"))}, Var("wld43"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk10"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld43"){OfSort(SORT("TYPE"))}, Var("exprOk10"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Assert", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk11"){OfSort(SORT("TYPE"))}, Var("exprOk12"){OfSort(SORT("TYPE"))}, Var("wld44"){OfSort(SORT("TYPE"))}, Var("wld45"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk11"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld44"){OfSort(SORT("TYPE"))}, Var("exprOk11"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk12"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld45"){OfSort(SORT("TYPE"))}, Var("exprOk12"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "Switch"
          , [Var("expr"){OfSort(SORT("Expression"))}, Var("switchGroupList"){OfSort(LIST(SORT("SwitchGroup")))}, Var("switchLabelList"){OfSort(LIST(SORT("SwitchLabel")))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("exprOk13"){OfSort(SORT("TYPE"))}, Var("wld46"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk13"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld46"){OfSort(SORT("TYPE"))}, Var("exprOk13"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            C("java/statements/Statements!switchGroupListOk", [Var("s"){OfSort(SCOPE())}, Var("switchGroupList"){OfSort(LIST(SORT("SwitchGroup")))}], NoMessage())
          , CConj(
              C("java/statements/Statements!switchLabelListOk", [Var("s"){OfSort(SCOPE())}, Var("switchLabelList"){OfSort(LIST(SORT("SwitchLabel")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!switchGroupListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("SwitchGroup")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!switchGroupListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("SwitchGroup"))}], Var("xs_2"){OfSort(LIST(SORT("SwitchGroup")))}){OfSort(LIST(SORT("SwitchGroup")))}]
      )
    , CConj(
        C("java/statements/Statements!switchGroupOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("SwitchGroup"))}], NoMessage())
      , C("java/statements/Statements!switchGroupListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("SwitchGroup")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!switchGroupOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SwitchGroup", [Var("switchLabelList"){OfSort(LIST(SORT("SwitchLabel")))}, Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}]){OfSort(SORT("SwitchGroup"))}]
      )
    , CConj(
        C("java/statements/Statements!switchLabelListOk", [Var("s"){OfSort(SCOPE())}, Var("switchLabelList"){OfSort(LIST(SORT("SwitchLabel")))}], NoMessage())
      , CConj(
          C("java/statements/Blocks!blkStmtListOk", [Var("s"){OfSort(SCOPE())}, Var("blkStmtList"){OfSort(LIST(SORT("BlockStatement")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!switchLabelListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("SwitchLabel")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!switchLabelListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("SwitchLabel"))}], Var("xs_2"){OfSort(LIST(SORT("SwitchLabel")))}){OfSort(LIST(SORT("SwitchLabel")))}]
      )
    , CConj(
        C("java/statements/Statements!switchLabelOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("SwitchLabel"))}], NoMessage())
      , C("java/statements/Statements!switchLabelListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("SwitchLabel")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!switchLabelOk"
      , [Var("s"){OfSort(SCOPE())}, Op("CaseExpr", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("SwitchLabel"))}]
      )
    , CExists(
        [Var("exprOk14"){OfSort(SORT("TYPE"))}, Var("wld47"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk14"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld47"){OfSort(SORT("TYPE"))}, Var("exprOk14"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!switchLabelOk", [Var("s"){OfSort(SCOPE())}, Op("DefaultCase", []){OfSort(SORT("SwitchLabel"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("DoWhile", [Var("stmt"){OfSort(SORT("Statement"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk15"){OfSort(SORT("TYPE"))}, Var("wld48"){OfSort(SORT("TYPE"))}]
      , CConj(
          C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Var("stmt"){OfSort(SORT("Statement"))}], NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk15"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld48"){OfSort(SORT("TYPE"))}, Var("exprOk15"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Op("Break", []){OfSort(SORT("Statement"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Break", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("Statement"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Op("Continue", []){OfSort(SORT("Statement"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Continue", [Var("id"){OfSort(SORT("Id"))}]){OfSort(SORT("Statement"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!stmtOk", [Var("s"){OfSort(SCOPE())}, Op("Return", []){OfSort(SORT("Statement"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Return", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk16"){OfSort(SORT("TYPE"))}, Var("wld49"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk16"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld49"){OfSort(SORT("TYPE"))}, Var("exprOk16"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Synchronized", [Var("expr"){OfSort(SORT("Expression"))}, Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk17"){OfSort(SORT("TYPE"))}, Var("wld50"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk17"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld50"){OfSort(SORT("TYPE"))}, Var("exprOk17"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            C("java/statements/Blocks!blkOk", [Var("s"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Throw", [Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Statement"))}]
      )
    , CExists(
        [Var("exprOk18"){OfSort(SORT("TYPE"))}, Var("wld51"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk18"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld51"){OfSort(SORT("TYPE"))}, Var("exprOk18"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Try", [Var("blk"){OfSort(SORT("Block"))}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}]){OfSort(SORT("Statement"))}]
      )
    , CConj(
        C("java/statements/Blocks!blkOk", [Var("s"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
      , CConj(
          C("java/statements/Statements!catchClauseListOk", [Var("s"){OfSort(SCOPE())}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!catchClauseListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("CatchClause")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchClauseListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("CatchClause"))}], Var("xs_2"){OfSort(LIST(SORT("CatchClause")))}){OfSort(LIST(SORT("CatchClause")))}]
      )
    , CConj(
        C("java/statements/Statements!catchClauseOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("CatchClause"))}], NoMessage())
      , C("java/statements/Statements!catchClauseListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchClauseOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Catch", [Var("catchFormalParam"){OfSort(SORT("CatchFormalParameter"))}, Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("CatchClause"))}]
      )
    , CExists(
        [Var("s_catch"){OfSort(SCOPE())}]
      , CConj(
          CNew([Var("s_catch"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_catch"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!catchFormalParamOk", [Var("s_catch"){OfSort(SCOPE())}, Var("catchFormalParam"){OfSort(SORT("CatchFormalParameter"))}], NoMessage())
            , CConj(
                C("java/statements/Blocks!blkOk", [Var("s_catch"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchFormalParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "CatchParam"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("catchType"){OfSort(SORT("CatchType"))}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}]
          ){OfSort(SORT("CatchFormalParameter"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      , CConj(
          C("java/statements/Statements!catchTypeOk", [Var("s"){OfSort(SCOPE())}, Var("catchType"){OfSort(SORT("CatchType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("CatchType", [Var("unannClsType"){OfSort(SORT("UnannClassType"))}, Var("catchTypeRestList"){OfSort(LIST(SORT("CatchTypeRest")))}]){OfSort(SORT("CatchType"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannClsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannClsType"){OfSort(SORT("UnannClassType"))}], NoMessage())
      , CConj(
          C("java/statements/Statements!catchTypeRestListOk", [Var("s"){OfSort(SCOPE())}, Var("catchTypeRestList"){OfSort(LIST(SORT("CatchTypeRest")))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!catchTypeRestListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("CatchTypeRest")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchTypeRestListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("CatchTypeRest"))}], Var("xs_2"){OfSort(LIST(SORT("CatchTypeRest")))}){OfSort(LIST(SORT("CatchTypeRest")))}]
      )
    , CConj(
        C("java/statements/Statements!catchTypeRestOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("CatchTypeRest"))}], NoMessage())
      , C("java/statements/Statements!catchTypeRestListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("CatchTypeRest")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!catchTypeRestOk"
      , [Var("s"){OfSort(SCOPE())}, Op("CatchTypeElem", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("CatchTypeRest"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "TryWithResources"
          , [Var("resourceList"){OfSort(LIST(SORT("Resource")))}, Var("blk_catch"){OfSort(SORT("Block"))}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_try"){OfSort(SCOPE())}]
      , CConj(
          CNew([Var("s_try"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_try"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!resourceListOk", [Var("s_try"){OfSort(SCOPE())}, Var("resourceList"){OfSort(LIST(SORT("Resource")))}], NoMessage())
            , CConj(
                C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_catch"){OfSort(SORT("Block"))}], NoMessage())
              , CConj(
                  C("java/statements/Statements!catchClauseListOk", [Var("s_try"){OfSort(SCOPE())}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "TryWithResourcesSemiColon"
          , [Var("resourceList"){OfSort(LIST(SORT("Resource")))}, Var("blk_catch"){OfSort(SORT("Block"))}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_try"){OfSort(SCOPE())}]
      , CConj(
          CNew([Var("s_try"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_try"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!resourceListOk", [Var("s_try"){OfSort(SCOPE())}, Var("resourceList"){OfSort(LIST(SORT("Resource")))}], NoMessage())
            , CConj(
                C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_catch"){OfSort(SORT("Block"))}], NoMessage())
              , CConj(
                  C("java/statements/Statements!catchClauseListOk", [Var("s_try"){OfSort(SCOPE())}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "TryWithResources"
          , [Var("resourceList"){OfSort(LIST(SORT("Resource")))}, Var("blk_catch"){OfSort(SORT("Block"))}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}, Var("blk_finally"){OfSort(SORT("Block"))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_try"){OfSort(SCOPE())}]
      , CConj(
          CNew([Var("s_try"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_try"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!resourceListOk", [Var("s_try"){OfSort(SCOPE())}, Var("resourceList"){OfSort(LIST(SORT("Resource")))}], NoMessage())
            , CConj(
                C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_catch"){OfSort(SORT("Block"))}], NoMessage())
              , CConj(
                  C("java/statements/Statements!catchClauseListOk", [Var("s_try"){OfSort(SCOPE())}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
                , CConj(
                    C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_finally"){OfSort(SORT("Block"))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!stmtOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "TryWithResourcesSemiColon"
          , [Var("resourceList"){OfSort(LIST(SORT("Resource")))}, Var("blk_catch"){OfSort(SORT("Block"))}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}, Var("blk_finally"){OfSort(SORT("Block"))}]
          ){OfSort(SORT("Statement"))}
        ]
      )
    , CExists(
        [Var("s_try"){OfSort(SCOPE())}]
      , CConj(
          CNew([Var("s_try"){OfSort(SCOPE())}])
        , CConj(
            CTellEdge(Var("s_try"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
          , CConj(
              C("java/statements/Statements!resourceListOk", [Var("s_try"){OfSort(SCOPE())}, Var("resourceList"){OfSort(LIST(SORT("Resource")))}], NoMessage())
            , CConj(
                C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_catch"){OfSort(SORT("Block"))}], NoMessage())
              , CConj(
                  C("java/statements/Statements!catchClauseListOk", [Var("s_try"){OfSort(SCOPE())}, Var("catchClauseList"){OfSort(LIST(SORT("CatchClause")))}], NoMessage())
                , CConj(
                    C("java/statements/Blocks!blkOk", [Var("s_try"){OfSort(SCOPE())}, Var("blk_finally"){OfSort(SORT("Block"))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/statements/Statements!resourceListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("Resource")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!resourceListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("Resource"))}], Var("xs_2"){OfSort(LIST(SORT("Resource")))}){OfSort(LIST(SORT("Resource")))}]
      )
    , CConj(
        C("java/statements/Statements!resourceOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("Resource"))}], NoMessage())
      , C("java/statements/Statements!resourceListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("Resource")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/statements/Statements!resourceOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "Resource"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}, Var("expr"){OfSort(SORT("Expression"))}]
          ){OfSort(SORT("Resource"))}
        ]
      )
    , CExists(
        [Var("exprOk19"){OfSort(SORT("TYPE"))}, Var("wld52"){OfSort(SORT("TYPE"))}]
      , CConj(
          C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
          , CConj(
              C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
            , CConj(
                CConj(
                  C(
                    "java/expressions/Main!exprOk"
                  , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk19"){OfSort(SORT("TYPE"))}]
                  , NoMessage()
                  )
                , CEqual(Var("wld52"){OfSort(SORT("TYPE"))}, Var("exprOk19"){OfSort(SORT("TYPE"))}, NoMessage())
                )
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayCreationExpression2Expression", [Var("arrayCreationExpr"){OfSort(SORT("ArrayCreationExpression"))}]){OfSort(SORT("Expression"))}, Var("out79"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld135"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out79"){OfSort(SORT("TYPE"))}, Var("wld135"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/expressions/ArrayCreation!arrayCreationExprOk", [Var("s"){OfSort(SCOPE())}, Var("arrayCreationExpr"){OfSort(SORT("ArrayCreationExpression"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!arrayCreationExprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "NewArray"
          , [Var("arrayBaseType"){OfSort(SORT("ArrayBaseType"))}, Var("dimExprList"){OfSort(LIST(SORT("DimExpr")))}, Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}]
          ){OfSort(SORT("ArrayCreationExpression"))}
        ]
      )
    , CConj(
        C("java/expressions/ArrayCreation!arrayBaseTypeOk", [Var("s"){OfSort(SCOPE())}, Var("arrayBaseType"){OfSort(SORT("ArrayBaseType"))}], NoMessage())
      , CConj(
          C("java/expressions/ArrayCreation!dimExprListOk", [Var("s"){OfSort(SCOPE())}, Var("dimExprList"){OfSort(LIST(SORT("DimExpr")))}], NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!annDimsEmptyOk", [Var("s"){OfSort(SCOPE())}, Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!arrayCreationExprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "NewArrayInit"
          , [Var("arrayBaseType"){OfSort(SORT("ArrayBaseType"))}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}, Var("arrayInit"){OfSort(SORT("ArrayInitializer"))}]
          ){OfSort(SORT("ArrayCreationExpression"))}
        ]
      )
    , CConj(
        C("java/expressions/ArrayCreation!arrayBaseTypeOk", [Var("s"){OfSort(SCOPE())}, Var("arrayBaseType"){OfSort(SORT("ArrayBaseType"))}], NoMessage())
      , CConj(
          C("java/types/ReferenceTypes!annDimsOk", [Var("s"){OfSort(SCOPE())}, Var("annDims"){OfSort(SORT("AnnotatedDims"))}], NoMessage())
        , CConj(
            C("java/arrays/ArrayInitializers!arrayInitOk", [Var("s"){OfSort(SCOPE())}, Var("arrayInit"){OfSort(SORT("ArrayInitializer"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!arrayBaseTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassType2ArrayBaseType", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("ArrayBaseType"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!arrayBaseTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("PrimitiveType2ArrayBaseType", [Var("primType"){OfSort(SORT("PrimitiveType"))}]){OfSort(SORT("ArrayBaseType"))}]
      )
    , CConj(
        C("java/types/PrimitiveTypes!primTypeOk", [Var("s"){OfSort(SCOPE())}, Var("primType"){OfSort(SORT("PrimitiveType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/ArrayCreation!dimExprListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("DimExpr")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!dimExprListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("DimExpr"))}], Var("xs_2"){OfSort(LIST(SORT("DimExpr")))}){OfSort(LIST(SORT("DimExpr")))}]
      )
    , CConj(
        C("java/expressions/ArrayCreation!dimExprOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("DimExpr"))}], NoMessage())
      , C("java/expressions/ArrayCreation!dimExprListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("DimExpr")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayCreation!dimExprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Dim", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("DimExpr"))}]
      )
    , CExists(
        [Var("exprOk44"){OfSort(SORT("TYPE"))}, Var("wld136"){OfSort(SORT("TYPE"))}]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk44"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld136"){OfSort(SORT("TYPE"))}, Var("exprOk44"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "EnumDeclComma"
          , [ Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}
            , Var("enumConstList"){OfSort(LIST(SORT("EnumConstant")))}
            , Var("enumBodyDeclsOpt"){OfSort(LIST(SORT("EnumBodyDeclarations")))}
            ]
          ){OfSort(SORT("EnumDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_enum"){OfSort(SCOPE())}]
      , CConj(
          C("java/classes/ClassDeclarations!clsModListOk", [Var("s"){OfSort(SCOPE())}, Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_enum"){OfSort(SCOPE())}])
          , CConj(
              C(
                "java/names/TypeNames!declareType"
              , [Var("s"){OfSort(SCOPE())}, Var("id"){OfSort(SORT("Id"))}, Op("ENUM", [Var("s_enum"){OfSort(SCOPE())}]){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CConj(
                C(
                  "java/classes/ClassDeclarations!superIntfsOptOk"
                , [Var("s"){OfSort(SCOPE())}, Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}, Var("s_enum"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  CTellEdge(Var("s_enum"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
                , CConj(
                    C("java/classes/EnumDeclarations!enumConstListOk", [Var("s_enum"){OfSort(SCOPE())}, Var("enumConstList"){OfSort(LIST(SORT("EnumConstant")))}], NoMessage())
                  , CConj(
                      C("java/classes/EnumDeclarations!enumBodyDeclsOptOk", [Var("s_enum"){OfSort(SCOPE())}, Var("enumBodyDeclsOpt"){OfSort(LIST(SORT("EnumBodyDeclarations")))}], NoMessage())
                    , CTrue()
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "EnumDecl"
          , [ Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}
            , Var("enumConstList"){OfSort(LIST(SORT("EnumConstant")))}
            , Var("enumBodyDeclsOpt"){OfSort(LIST(SORT("EnumBodyDeclarations")))}
            ]
          ){OfSort(SORT("EnumDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_enum"){OfSort(SCOPE())}]
      , CConj(
          C("java/classes/ClassDeclarations!clsModListOk", [Var("s"){OfSort(SCOPE())}, Var("clsModList"){OfSort(LIST(SORT("ClassModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_enum"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_enum"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C(
                  "java/classes/ClassDeclarations!superIntfsOptOk"
                , [Var("s"){OfSort(SCOPE())}, Var("superIntfsOpt"){OfSort(LIST(SORT("SuperInterfaces")))}, Var("s_enum"){OfSort(SCOPE())}]
                , NoMessage()
                )
              , CConj(
                  C("java/classes/EnumDeclarations!enumConstListOk", [Var("s_enum"){OfSort(SCOPE())}, Var("enumConstList"){OfSort(LIST(SORT("EnumConstant")))}], NoMessage())
                , CConj(
                    C("java/classes/EnumDeclarations!enumBodyDeclsOptOk", [Var("s_enum"){OfSort(SCOPE())}, Var("enumBodyDeclsOpt"){OfSort(LIST(SORT("EnumBodyDeclarations")))}], NoMessage())
                  , CTrue()
                  )
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/EnumDeclarations!enumConstListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("EnumConstant")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumConstListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("EnumConstant"))}], Var("xs_2"){OfSort(LIST(SORT("EnumConstant")))}){OfSort(LIST(SORT("EnumConstant")))}]
      )
    , CConj(
        C("java/classes/EnumDeclarations!enumConstOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("EnumConstant"))}], NoMessage())
      , C("java/classes/EnumDeclarations!enumConstListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("EnumConstant")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumConstOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "EnumConst"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("enumConstArgsOpt"){OfSort(LIST(SORT("EnumConstantArgs")))}, Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}]
          ){OfSort(SORT("EnumConstant"))}
        ]
      )
    , CExists(
        [Var("s_const"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CConj(
            CNew([Var("s_const"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_const"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/classes/EnumDeclarations!enumConstArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("enumConstArgsOpt"){OfSort(LIST(SORT("EnumConstantArgs")))}], NoMessage())
              , CConj(
                  C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Var("s_const"){OfSort(SCOPE())}, Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumConstOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "EnumConstNoBody"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("id"){OfSort(SORT("Id"))}, Var("enumConstArgsOpt"){OfSort(LIST(SORT("EnumConstantArgs")))}]
          ){OfSort(SORT("EnumConstant"))}
        ]
      )
    , CExists(
        [Var("s_const"){OfSort(SCOPE())}]
      , CConj(
          C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
        , CConj(
            CNew([Var("s_const"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_const"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/classes/EnumDeclarations!enumConstArgsOptOk", [Var("s"){OfSort(SCOPE())}, Var("enumConstArgsOpt"){OfSort(LIST(SORT("EnumConstantArgs")))}], NoMessage())
              , CTrue()
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/EnumDeclarations!enumConstArgsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("EnumConstantArgs")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumConstArgsOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("EnumConstantArgs"))}], Var("xs_2"){OfSort(LIST(SORT("EnumConstantArgs")))}){OfSort(LIST(SORT("EnumConstantArgs")))}]
      )
    , CConj(
        C("java/classes/EnumDeclarations!enumConstArgsOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("EnumConstantArgs"))}], NoMessage())
      , C("java/classes/EnumDeclarations!enumConstArgsOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("EnumConstantArgs")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumConstArgsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("EnumConstArgs", [Var("exprList"){OfSort(LIST(SORT("Expression")))}]){OfSort(SORT("EnumConstantArgs"))}]
      )
    , CExists(
        [Var("exprListOk3"){OfSort(LIST(SORT("TYPE")))}, Var("wld82"){OfSort(LIST(SORT("TYPE")))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprListOk"
            , [Var("s"){OfSort(SCOPE())}, Var("exprList"){OfSort(LIST(SORT("Expression")))}, Var("exprListOk3"){OfSort(LIST(SORT("TYPE")))}]
            , NoMessage()
            )
          , CEqual(Var("wld82"){OfSort(LIST(SORT("TYPE")))}, Var("exprListOk3"){OfSort(LIST(SORT("TYPE")))}, NoMessage())
          )
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/EnumDeclarations!enumBodyDeclsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("EnumBodyDeclarations")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumBodyDeclsOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("EnumBodyDeclarations"))}], Var("xs_2"){OfSort(LIST(SORT("EnumBodyDeclarations")))}){OfSort(LIST(SORT("EnumBodyDeclarations")))}]
      )
    , CConj(
        C("java/classes/EnumDeclarations!enumBodyDeclsOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("EnumBodyDeclarations"))}], NoMessage())
      , C("java/classes/EnumDeclarations!enumBodyDeclsOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("EnumBodyDeclarations")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/EnumDeclarations!enumBodyDeclsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("EnumBodyDecs", [Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}]){OfSort(SORT("EnumBodyDeclarations"))}]
      )
    , CConj(
        C("java/classes/ClassDeclarations!clsBodyDeclListOk", [Var("s"){OfSort(SCOPE())}, Var("clsBodyDeclList"){OfSort(LIST(SORT("ClassBodyDeclaration")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayAccess2Expression", [Var("arrayAccess"){OfSort(SORT("ArrayAccess"))}]){OfSort(SORT("Expression"))}, Var("out101"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld200"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out101"){OfSort(SORT("TYPE"))}, Var("wld200"){OfSort(SORT("TYPE"))}, NoMessage())
        , C("java/expressions/ArrayAccess!arrayAccessOk", [Var("s"){OfSort(SCOPE())}, Var("arrayAccess"){OfSort(SORT("ArrayAccess"))}], NoMessage())
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/ArrayAccess!arrayAccessOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayAccess", [Var("expr1"){OfSort(SORT("Expression"))}, Var("expr2"){OfSort(SORT("Expression"))}]){OfSort(SORT("ArrayAccess"))}]
      )
    , CExists(
        [Var("exprOk87"){OfSort(SORT("TYPE"))}, Var("exprOk88"){OfSort(SORT("TYPE"))}, Var("wld201"){OfSort(SORT("TYPE"))}, Var("wld202"){OfSort(SORT("TYPE"))}]
      , CConj(
          CConj(
            C(
              "java/expressions/Main!exprOk"
            , [Var("s"){OfSort(SCOPE())}, Var("expr1"){OfSort(SORT("Expression"))}, Var("exprOk87"){OfSort(SORT("TYPE"))}]
            , NoMessage()
            )
          , CEqual(Var("wld201"){OfSort(SORT("TYPE"))}, Var("exprOk87"){OfSort(SORT("TYPE"))}, NoMessage())
          )
        , CConj(
            CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr2"){OfSort(SORT("Expression"))}, Var("exprOk88"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld202"){OfSort(SORT("TYPE"))}, Var("exprOk88"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/StaticInitializers!staticInitOk", [Op("StaticInit", [Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("StaticInitializer"))}])
    , CExists(
        [Var("wld18"){OfSort(SCOPE())}]
      , CConj(
          C("java/statements/Blocks!blkOk", [Var("wld18"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Literal2Expression", [Var("lit"){OfSort(SORT("Literal"))}]){OfSort(SORT("Expression"))}, Var("out107"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld215"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out107"){OfSort(SORT("TYPE"))}, Var("wld215"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(C("java/literals/Main!litOk", [Var("lit"){OfSort(SORT("Literal"))}], NoMessage()), CTrue())
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassLiteral2Expression", [Var("clsLit"){OfSort(SORT("ClassLiteral"))}]){OfSort(SORT("Expression"))}, Var("out108"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld216"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out108"){OfSort(SORT("TYPE"))}, Var("wld216"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(C("java/expressions/PrimaryExpressions!clsLitOk", [Var("clsLit"){OfSort(SORT("ClassLiteral"))}], NoMessage()), CTrue())
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("This", []){OfSort(SORT("Expression"))}, Var("out109"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld217"){OfSort(SORT("TYPE"))}]
      , CConj(CEqual(Var("out109"){OfSort(SORT("TYPE"))}, Var("wld217"){OfSort(SORT("TYPE"))}, NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [Var("s"){OfSort(SCOPE())}, Op("QThis", [Var("typeName"){OfSort(SORT("TypeName"))}]){OfSort(SORT("Expression"))}, Var("out110"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("typeNameOk8"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld218"){OfSort(SORT("TYPE"))}, Var("wld219"){OfSort(SCOPE())}, Var("wld220"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CEqual(Var("out110"){OfSort(SORT("TYPE"))}, Var("wld218"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/TypeNames!typeNameOk"
              , [Var("wld219"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk8"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
              , NoMessage()
              )
            , CEqual(Var("typeNameOk8"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld220"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/PrimaryExpressions!clsLitOk"
      , [Op("TypeNameClassLiteral", [Var("typeName"){OfSort(SORT("TypeName"))}, Var("dimsList"){OfSort(LIST(SORT("Dims")))}]){OfSort(SORT("ClassLiteral"))}]
      )
    , CExists(
        [Var("typeNameOk9"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld221"){OfSort(SCOPE())}, Var("wld222"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
      , CConj(
          CConj(
            C(
              "java/names/TypeNames!typeNameOk"
            , [Var("wld221"){OfSort(SCOPE())}, Var("typeName"){OfSort(SORT("TypeName"))}, Var("typeNameOk9"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}]
            , NoMessage()
            )
          , CEqual(Var("typeNameOk9"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, Var("wld222"){OfSort(TUPLE([SORT("Id"), SORT("TYPE")]))}, NoMessage())
          )
        , CConj(C("java/expressions/PrimaryExpressions!dimsListOk", [Var("dimsList"){OfSort(LIST(SORT("Dims")))}], NoMessage()), CTrue())
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/PrimaryExpressions!clsLitOk"
      , [Op("NumericTypeClassLiteral", [Var("numType"){OfSort(SORT("NumericType"))}, Var("dimsList"){OfSort(LIST(SORT("Dims")))}]){OfSort(SORT("ClassLiteral"))}]
      )
    , CConj(
        C("java/types/PrimitiveTypes!numTypeOk", [Var("numType"){OfSort(SORT("NumericType"))}], NoMessage())
      , CConj(C("java/expressions/PrimaryExpressions!dimsListOk", [Var("dimsList"){OfSort(LIST(SORT("Dims")))}], NoMessage()), CTrue())
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/PrimaryExpressions!clsLitOk", [Op("BooleanClassLiteral", [Var("dimsList"){OfSort(LIST(SORT("Dims")))}]){OfSort(SORT("ClassLiteral"))}])
    , CConj(C("java/expressions/PrimaryExpressions!dimsListOk", [Var("dimsList"){OfSort(LIST(SORT("Dims")))}], NoMessage()), CTrue())
    )
  , Rule(
      NoName()
    , C("java/expressions/PrimaryExpressions!clsLitOk", [Op("VoidClassLiteral", []){OfSort(SORT("ClassLiteral"))}])
    , CTrue()
    )
  , Rule(NoName(), C("java/expressions/PrimaryExpressions!dimsListOk", [List([]){OfSort(LIST(SORT("Dims")))}]), CTrue())
  , Rule(
      NoName()
    , C(
        "java/expressions/PrimaryExpressions!dimsListOk"
      , [ListTail([Var("x_1"){OfSort(SORT("Dims"))}], Var("xs_1"){OfSort(LIST(SORT("Dims")))}){OfSort(LIST(SORT("Dims")))}]
      )
    , CConj(
        C("java/expressions/PrimaryExpressions!dimsOk", [Var("x_1"){OfSort(SORT("Dims"))}], NoMessage())
      , C("java/expressions/PrimaryExpressions!dimsListOk", [Var("xs_1"){OfSort(LIST(SORT("Dims")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C("java/expressions/PrimaryExpressions!dimsOk", [Op("Dimension", []){OfSort(SORT("Dims"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("Assign", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out64"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk0"){OfSort(SORT("TYPE"))}
        , Var("exprOk32"){OfSort(SORT("TYPE"))}
        , Var("wld95"){OfSort(SORT("TYPE"))}
        , Var("wld96"){OfSort(SORT("TYPE"))}
        , Var("wld97"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out64"){OfSort(SORT("TYPE"))}, Var("wld95"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk0"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld96"){OfSort(SORT("TYPE"))}, Var("lhsOk0"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk32"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld97"){OfSort(SORT("TYPE"))}, Var("exprOk32"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignMul", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out65"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk1"){OfSort(SORT("TYPE"))}
        , Var("exprOk33"){OfSort(SORT("TYPE"))}
        , Var("wld98"){OfSort(SORT("TYPE"))}
        , Var("wld99"){OfSort(SORT("TYPE"))}
        , Var("wld100"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out65"){OfSort(SORT("TYPE"))}, Var("wld98"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk1"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld99"){OfSort(SORT("TYPE"))}, Var("lhsOk1"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk33"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld100"){OfSort(SORT("TYPE"))}, Var("exprOk33"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignDiv", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out66"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk2"){OfSort(SORT("TYPE"))}
        , Var("exprOk34"){OfSort(SORT("TYPE"))}
        , Var("wld101"){OfSort(SORT("TYPE"))}
        , Var("wld102"){OfSort(SORT("TYPE"))}
        , Var("wld103"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out66"){OfSort(SORT("TYPE"))}, Var("wld101"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk2"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld102"){OfSort(SORT("TYPE"))}, Var("lhsOk2"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk34"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld103"){OfSort(SORT("TYPE"))}, Var("exprOk34"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignMod", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out67"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk3"){OfSort(SORT("TYPE"))}
        , Var("exprOk35"){OfSort(SORT("TYPE"))}
        , Var("wld104"){OfSort(SORT("TYPE"))}
        , Var("wld105"){OfSort(SORT("TYPE"))}
        , Var("wld106"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out67"){OfSort(SORT("TYPE"))}, Var("wld104"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk3"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld105"){OfSort(SORT("TYPE"))}, Var("lhsOk3"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk35"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld106"){OfSort(SORT("TYPE"))}, Var("exprOk35"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignAdd", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out68"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk4"){OfSort(SORT("TYPE"))}
        , Var("exprOk36"){OfSort(SORT("TYPE"))}
        , Var("wld107"){OfSort(SORT("TYPE"))}
        , Var("wld108"){OfSort(SORT("TYPE"))}
        , Var("wld109"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out68"){OfSort(SORT("TYPE"))}, Var("wld107"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk4"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld108"){OfSort(SORT("TYPE"))}, Var("lhsOk4"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk36"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld109"){OfSort(SORT("TYPE"))}, Var("exprOk36"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignSub", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out69"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk5"){OfSort(SORT("TYPE"))}
        , Var("exprOk37"){OfSort(SORT("TYPE"))}
        , Var("wld110"){OfSort(SORT("TYPE"))}
        , Var("wld111"){OfSort(SORT("TYPE"))}
        , Var("wld112"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out69"){OfSort(SORT("TYPE"))}, Var("wld110"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk5"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld111"){OfSort(SORT("TYPE"))}, Var("lhsOk5"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk37"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld112"){OfSort(SORT("TYPE"))}, Var("exprOk37"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignLeftShift", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out70"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk6"){OfSort(SORT("TYPE"))}
        , Var("exprOk38"){OfSort(SORT("TYPE"))}
        , Var("wld113"){OfSort(SORT("TYPE"))}
        , Var("wld114"){OfSort(SORT("TYPE"))}
        , Var("wld115"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out70"){OfSort(SORT("TYPE"))}, Var("wld113"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk6"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld114"){OfSort(SORT("TYPE"))}, Var("lhsOk6"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk38"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld115"){OfSort(SORT("TYPE"))}, Var("exprOk38"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignRightShift", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out71"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk7"){OfSort(SORT("TYPE"))}
        , Var("exprOk39"){OfSort(SORT("TYPE"))}
        , Var("wld116"){OfSort(SORT("TYPE"))}
        , Var("wld117"){OfSort(SORT("TYPE"))}
        , Var("wld118"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out71"){OfSort(SORT("TYPE"))}, Var("wld116"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk7"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld117"){OfSort(SORT("TYPE"))}, Var("lhsOk7"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk39"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld118"){OfSort(SORT("TYPE"))}, Var("exprOk39"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignURightShift", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out72"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk8"){OfSort(SORT("TYPE"))}
        , Var("exprOk40"){OfSort(SORT("TYPE"))}
        , Var("wld119"){OfSort(SORT("TYPE"))}
        , Var("wld120"){OfSort(SORT("TYPE"))}
        , Var("wld121"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out72"){OfSort(SORT("TYPE"))}, Var("wld119"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk8"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld120"){OfSort(SORT("TYPE"))}, Var("lhsOk8"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk40"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld121"){OfSort(SORT("TYPE"))}, Var("exprOk40"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignAnd", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out73"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk9"){OfSort(SORT("TYPE"))}
        , Var("exprOk41"){OfSort(SORT("TYPE"))}
        , Var("wld122"){OfSort(SORT("TYPE"))}
        , Var("wld123"){OfSort(SORT("TYPE"))}
        , Var("wld124"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out73"){OfSort(SORT("TYPE"))}, Var("wld122"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk9"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld123"){OfSort(SORT("TYPE"))}, Var("lhsOk9"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk41"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld124"){OfSort(SORT("TYPE"))}, Var("exprOk41"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignXor", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out74"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk10"){OfSort(SORT("TYPE"))}
        , Var("exprOk42"){OfSort(SORT("TYPE"))}
        , Var("wld125"){OfSort(SORT("TYPE"))}
        , Var("wld126"){OfSort(SORT("TYPE"))}
        , Var("wld127"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out74"){OfSort(SORT("TYPE"))}, Var("wld125"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk10"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld126"){OfSort(SORT("TYPE"))}, Var("lhsOk10"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk42"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld127"){OfSort(SORT("TYPE"))}, Var("exprOk42"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/Main!exprOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op("AssignOr", [Var("lhs"){OfSort(SORT("LHS"))}, Var("expr"){OfSort(SORT("Expression"))}]){OfSort(SORT("Expression"))}
        , Var("out75"){OfSort(SORT("TYPE"))}
        ]
      )
    , CExists(
        [ Var("lhsOk11"){OfSort(SORT("TYPE"))}
        , Var("exprOk43"){OfSort(SORT("TYPE"))}
        , Var("wld128"){OfSort(SORT("TYPE"))}
        , Var("wld129"){OfSort(SORT("TYPE"))}
        , Var("wld130"){OfSort(SORT("TYPE"))}
        ]
      , CConj(
          CEqual(Var("out75"){OfSort(SORT("TYPE"))}, Var("wld128"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/expressions/AssignmentOperators!lhsOk"
              , [Var("s"){OfSort(SCOPE())}, Var("lhs"){OfSort(SORT("LHS"))}, Var("lhsOk11"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld129"){OfSort(SORT("TYPE"))}, Var("lhsOk11"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          , CConj(
              C(
                "java/expressions/Main!exprOk"
              , [Var("s"){OfSort(SCOPE())}, Var("expr"){OfSort(SORT("Expression"))}, Var("exprOk43"){OfSort(SORT("TYPE"))}]
              , NoMessage()
              )
            , CEqual(Var("wld130"){OfSort(SORT("TYPE"))}, Var("exprOk43"){OfSort(SORT("TYPE"))}, NoMessage())
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/AssignmentOperators!lhsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ExpressionName2LHS", [Var("exprName"){OfSort(SORT("ExpressionName"))}]){OfSort(SORT("LHS"))}, Var("out76"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("exprNameOk1"){OfSort(TUPLE([]))}, Var("wld131"){OfSort(SORT("TYPE"))}, Var("wld132"){OfSort(TUPLE([]))}]
      , CConj(
          CEqual(Var("out76"){OfSort(SORT("TYPE"))}, Var("wld131"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            CConj(
              C(
                "java/names/ExpressionNames!exprNameOk"
              , [Var("s"){OfSort(SCOPE())}, Var("exprName"){OfSort(SORT("ExpressionName"))}, Var("exprNameOk1"){OfSort(TUPLE([]))}]
              , NoMessage()
              )
            , CEqual(Var("exprNameOk1"){OfSort(TUPLE([]))}, Var("wld132"){OfSort(TUPLE([]))}, NoMessage())
            )
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/AssignmentOperators!lhsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("FieldAccess2LHS", [Var("fldAccess"){OfSort(SORT("FieldAccess"))}]){OfSort(SORT("LHS"))}, Var("out77"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld133"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out77"){OfSort(SORT("TYPE"))}, Var("wld133"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/expressions/FieldAccess!fldAccessOk", [Var("s"){OfSort(SCOPE())}, Var("fldAccess"){OfSort(SORT("FieldAccess"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/expressions/AssignmentOperators!lhsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayAccess2LHS", [Var("arrayAccess"){OfSort(SORT("ArrayAccess"))}]){OfSort(SORT("LHS"))}, Var("out78"){OfSort(SORT("TYPE"))}]
      )
    , CExists(
        [Var("wld134"){OfSort(SORT("TYPE"))}]
      , CConj(
          CEqual(Var("out78"){OfSort(SORT("TYPE"))}, Var("wld134"){OfSort(SORT("TYPE"))}, NoMessage())
        , CConj(
            C("java/expressions/ArrayAccess!arrayAccessOk", [Var("s"){OfSort(SCOPE())}, Var("arrayAccess"){OfSort(SORT("ArrayAccess"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/arrays/ArrayInitializers!arrayInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayInit", [Var("varInitList"){OfSort(LIST(SORT("VariableInitializer")))}]){OfSort(SORT("ArrayInitializer"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varInitListOk", [Var("s"){OfSort(SCOPE())}, Var("varInitList"){OfSort(LIST(SORT("VariableInitializer")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/arrays/ArrayInitializers!arrayInitOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ArrayInitComma", [Var("varInitList"){OfSort(LIST(SORT("VariableInitializer")))}]){OfSort(SORT("ArrayInitializer"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!varInitListOk", [Var("s"){OfSort(SCOPE())}, Var("varInitList"){OfSort(LIST(SORT("VariableInitializer")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "AbstractMethodDec"
          , [Var("intfMthdModList"){OfSort(LIST(SORT("InterfaceMethodModifier")))}, Var("mthdHeader"){OfSort(SORT("MethodHeader"))}, Var("mthdBody"){OfSort(SORT("MethodBody"))}]
          ){OfSort(SORT("InterfaceMethodDeclaration"))}
        ]
      )
    , CConj(
        C("java/interfaces/InterfaceMethodDeclarations!intfMthdModListOk", [Var("s"){OfSort(SCOPE())}, Var("intfMthdModList"){OfSort(LIST(SORT("InterfaceMethodModifier")))}], NoMessage())
      , CConj(
          C("java/classes/MethodDeclarations!mthdHeaderOk", [Var("s"){OfSort(SCOPE())}, Var("mthdHeader"){OfSort(SORT("MethodHeader"))}], NoMessage())
        , CConj(
            C("java/classes/MethodDeclarations!mthdBodyOk", [Var("s"){OfSort(SCOPE())}, Var("mthdBody"){OfSort(SORT("MethodBody"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/interfaces/InterfaceMethodDeclarations!intfMthdModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("InterfaceMethodModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("InterfaceMethodModifier"))}], Var("xs_2"){OfSort(LIST(SORT("InterfaceMethodModifier")))}){OfSort(LIST(SORT("InterfaceMethodModifier")))}]
      )
    , CConj(
        C("java/interfaces/InterfaceMethodDeclarations!intfMthdModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("InterfaceMethodModifier"))}], NoMessage())
      , C("java/interfaces/InterfaceMethodDeclarations!intfMthdModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("InterfaceMethodModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2InterfaceMethodModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2InterfaceMethodModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Abstract2InterfaceMethodModifier", [Wld(){OfSort(SORT("Abstract"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Default2InterfaceMethodModifier", [Wld(){OfSort(SORT("Default"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2InterfaceMethodModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/interfaces/InterfaceMethodDeclarations!intfMthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Strictfp2InterfaceMethodModifier", [Wld(){OfSort(SORT("Strictfp"))}]){OfSort(SORT("InterfaceMethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdDeclOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodDecl"
          , [Var("mthdModList"){OfSort(LIST(SORT("MethodModifier")))}, Var("mthdHeader"){OfSort(SORT("MethodHeader"))}, Var("mthdBody"){OfSort(SORT("MethodBody"))}]
          ){OfSort(SORT("MethodDeclaration"))}
        ]
      )
    , CExists(
        [Var("s_mthd"){OfSort(SCOPE())}]
      , CConj(
          C("java/classes/MethodDeclarations!mthdModListOk", [Var("s"){OfSort(SCOPE())}, Var("mthdModList"){OfSort(LIST(SORT("MethodModifier")))}], NoMessage())
        , CConj(
            CNew([Var("s_mthd"){OfSort(SCOPE())}])
          , CConj(
              CTellEdge(Var("s_mthd"){OfSort(SCOPE())}, Label("java/names/Main!LEX"), Var("s"){OfSort(SCOPE())})
            , CConj(
                C("java/classes/MethodDeclarations!mthdHeaderOk", [Var("s_mthd"){OfSort(SCOPE())}, Var("mthdHeader"){OfSort(SORT("MethodHeader"))}], NoMessage())
              , CConj(
                  C("java/classes/MethodDeclarations!mthdBodyOk", [Var("s_mthd"){OfSort(SCOPE())}, Var("mthdBody"){OfSort(SORT("MethodBody"))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdHeaderOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodHeader"
          , [ Var("result"){OfSort(SORT("Result"))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("formalParams"){OfSort(SORT("FormalParams"))}
            , Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}
            , Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}
            ]
          ){OfSort(SORT("MethodHeader"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!resultOk", [Var("s"){OfSort(SCOPE())}, Var("result"){OfSort(SORT("Result"))}], NoMessage())
      , CConj(
          C("java/classes/MethodDeclarations!formalParamsOk", [Var("s"){OfSort(SCOPE())}, Var("formalParams"){OfSort(SORT("FormalParams"))}], NoMessage())
        , CConj(
            C("java/types/ReferenceTypes!annDimsEmptyOk", [Var("s"){OfSort(SCOPE())}, Var("annDimsEmpty"){OfSort(SORT("AnnotatedDimsEmpty"))}], NoMessage())
          , CConj(
              C("java/classes/MethodDeclarations!throwsOptOk", [Var("s"){OfSort(SCOPE())}, Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdHeaderOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "MethodHeaderTypeParameters"
          , [ Var("typeParams"){OfSort(SORT("TypeParameters"))}
            , Var("annoList"){OfSort(LIST(SORT("Annotation")))}
            , Var("result"){OfSort(SORT("Result"))}
            , Var("id"){OfSort(SORT("Id"))}
            , Var("formalParams"){OfSort(SORT("FormalParams"))}
            , Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}
            ]
          ){OfSort(SORT("MethodHeader"))}
        ]
      )
    , CExists(
        [Var("wld53"){OfSort(SCOPE())}]
      , CConj(
          C(
            "java/classes/ClassDeclarations!typeParamsOk"
          , [Var("s"){OfSort(SCOPE())}, Var("typeParams"){OfSort(SORT("TypeParameters"))}, Var("wld53"){OfSort(SCOPE())}]
          , NoMessage()
          )
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              C("java/classes/MethodDeclarations!resultOk", [Var("s"){OfSort(SCOPE())}, Var("result"){OfSort(SORT("Result"))}], NoMessage())
            , CConj(
                C("java/classes/MethodDeclarations!formalParamsOk", [Var("s"){OfSort(SCOPE())}, Var("formalParams"){OfSort(SORT("FormalParams"))}], NoMessage())
              , CConj(
                  C("java/classes/MethodDeclarations!throwsOptOk", [Var("s"){OfSort(SCOPE())}, Var("throwsOpt"){OfSort(LIST(SORT("Throws")))}], NoMessage())
                , CTrue()
                )
              )
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!resultOk"
      , [Var("s"){OfSort(SCOPE())}, Op("UnannType2Result", [Var("unannType"){OfSort(SORT("UnannType"))}]){OfSort(SORT("Result"))}]
      )
    , CConj(
        C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!resultOk", [Var("s"){OfSort(SCOPE())}, Op("Void", []){OfSort(SORT("Result"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!throwsOptOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("Throws")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!throwsOptOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("Throws"))}], Var("xs_2"){OfSort(LIST(SORT("Throws")))}){OfSort(LIST(SORT("Throws")))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!throwsOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("Throws"))}], NoMessage())
      , C("java/classes/MethodDeclarations!throwsOptOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("Throws")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!throwsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ThrowsDec", [Var("exceptTypeList"){OfSort(LIST(SORT("ExceptionType")))}]){OfSort(SORT("Throws"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!exceptTypeListOk", [Var("s"){OfSort(SCOPE())}, Var("exceptTypeList"){OfSort(LIST(SORT("ExceptionType")))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!exceptTypeListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("ExceptionType")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!exceptTypeListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("ExceptionType"))}], Var("xs_2"){OfSort(LIST(SORT("ExceptionType")))}){OfSort(LIST(SORT("ExceptionType")))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!exceptTypeOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("ExceptionType"))}], NoMessage())
      , C("java/classes/MethodDeclarations!exceptTypeListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("ExceptionType")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!exceptTypeOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ClassType2ExceptionType", [Var("clsType"){OfSort(SORT("ClassType"))}]){OfSort(SORT("ExceptionType"))}]
      )
    , CConj(
        C("java/types/ReferenceTypes!clsTypeOk", [Var("s"){OfSort(SCOPE())}, Var("clsType"){OfSort(SORT("ClassType"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!mthdModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("MethodModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("MethodModifier"))}], Var("xs_2"){OfSort(LIST(SORT("MethodModifier")))}){OfSort(LIST(SORT("MethodModifier")))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!mthdModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("MethodModifier"))}], NoMessage())
      , C("java/classes/MethodDeclarations!mthdModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("MethodModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2MethodModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Public2MethodModifier", [Wld(){OfSort(SORT("Public"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Protected2MethodModifier", [Wld(){OfSort(SORT("Protected"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Private2MethodModifier", [Wld(){OfSort(SORT("Private"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Abstract2MethodModifier", [Wld(){OfSort(SORT("Abstract"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Static2MethodModifier", [Wld(){OfSort(SORT("Static"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Final2MethodModifier", [Wld(){OfSort(SORT("Final"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Synchronized2MethodModifier", [Wld(){OfSort(SORT("Synchronized"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Native2MethodModifier", [Wld(){OfSort(SORT("Native"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Strictfp2MethodModifier", [Wld(){OfSort(SORT("Strictfp"))}]){OfSort(SORT("MethodModifier"))}]
      )
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!mthdBodyOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Block2MethodBody", [Var("blk"){OfSort(SORT("Block"))}]){OfSort(SORT("MethodBody"))}]
      )
    , CConj(
        C("java/statements/Blocks!blkOk", [Var("s"){OfSort(SCOPE())}, Var("blk"){OfSort(SORT("Block"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!mthdBodyOk", [Var("s"){OfSort(SCOPE())}, Op("NoMethodBody", []){OfSort(SORT("MethodBody"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!recvParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ReceiverParamQual"
          , [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("id"){OfSort(SORT("Id"))}]
          ){OfSort(SORT("ReceiverParam"))}
        ]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!recvParamOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ReceiverParam", [Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("unannType"){OfSort(SORT("UnannType"))}]){OfSort(SORT("ReceiverParam"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!formalParamsOk", [Var("s"){OfSort(SCOPE())}, Op("NoParams", []){OfSort(SORT("FormalParams"))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ReceiverParam2FormalParams", [Var("recvParam"){OfSort(SORT("ReceiverParam"))}]){OfSort(SORT("FormalParams"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!recvParamOk", [Var("s"){OfSort(SCOPE())}, Var("recvParam"){OfSort(SORT("ReceiverParam"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("SingleParam", [Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}]){OfSort(SORT("FormalParams"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!lastFormalParamOk", [Var("s"){OfSort(SCOPE())}, Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamsOk"
      , [Var("s"){OfSort(SCOPE())}, Op("ParamList", [Var("formalParamList"){OfSort(LIST(SORT("FormalParam")))}, Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}]){OfSort(SORT("FormalParams"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!formalParamListOk", [Var("s"){OfSort(SCOPE())}, Var("formalParamList"){OfSort(LIST(SORT("FormalParam")))}], NoMessage())
      , CConj(
          C("java/classes/MethodDeclarations!lastFormalParamOk", [Var("s"){OfSort(SCOPE())}, Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}], NoMessage())
        , CTrue()
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamsOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "ReceiverParamList"
          , [Var("recvParam"){OfSort(SORT("ReceiverParam"))}, Var("formalParamList"){OfSort(LIST(SORT("FormalParam")))}, Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}]
          ){OfSort(SORT("FormalParams"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!recvParamOk", [Var("s"){OfSort(SCOPE())}, Var("recvParam"){OfSort(SORT("ReceiverParam"))}], NoMessage())
      , CConj(
          C("java/classes/MethodDeclarations!formalParamListOk", [Var("s"){OfSort(SCOPE())}, Var("formalParamList"){OfSort(LIST(SORT("FormalParam")))}], NoMessage())
        , CConj(
            C("java/classes/MethodDeclarations!lastFormalParamOk", [Var("s"){OfSort(SCOPE())}, Var("lastFormalParam"){OfSort(SORT("LastFormalParam"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!lastFormalParamOk"
      , [Var("s"){OfSort(SCOPE())}, Op("FormalParam2LastFormalParam", [Var("formalParam"){OfSort(SORT("FormalParam"))}]){OfSort(SORT("LastFormalParam"))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!formalParamOk", [Var("s"){OfSort(SCOPE())}, Var("formalParam"){OfSort(SORT("FormalParam"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!lastFormalParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "VarArityParam"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}]
          ){OfSort(SORT("LastFormalParam"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/interfaces/Annotations!annoListOk", [Var("s"){OfSort(SCOPE())}, Var("annoList"){OfSort(LIST(SORT("Annotation")))}], NoMessage())
          , CConj(
              C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
            , CTrue()
            )
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!formalParamListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("FormalParam")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("FormalParam"))}], Var("xs_2"){OfSort(LIST(SORT("FormalParam")))}){OfSort(LIST(SORT("FormalParam")))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!formalParamOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("FormalParam"))}], NoMessage())
      , C("java/classes/MethodDeclarations!formalParamListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("FormalParam")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!formalParamOk"
      , [ Var("s"){OfSort(SCOPE())}
        , Op(
            "FormalParam"
          , [Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}, Var("unannType"){OfSort(SORT("UnannType"))}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}]
          ){OfSort(SORT("FormalParam"))}
        ]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModListOk", [Var("s"){OfSort(SCOPE())}, Var("varModList"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      , CConj(
          C("java/classes/FieldDeclarations!unannTypeOk", [Var("s"){OfSort(SCOPE())}, Var("unannType"){OfSort(SORT("UnannType"))}], NoMessage())
        , CConj(
            C("java/classes/FieldDeclarations!varDeclIdOk", [Var("s"){OfSort(SCOPE())}, Var("varDeclId"){OfSort(SORT("VarDeclId"))}], NoMessage())
          , CTrue()
          )
        )
      )
    )
  , Rule(
      NoName()
    , C("java/classes/MethodDeclarations!varModListOk", [Wld(){OfSort(SCOPE())}, List([]){OfSort(LIST(SORT("VariableModifier")))}])
    , CTrue()
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!varModListOk"
      , [Var("x_1"){OfSort(SCOPE())}, ListTail([Var("x_2"){OfSort(SORT("VariableModifier"))}], Var("xs_2"){OfSort(LIST(SORT("VariableModifier")))}){OfSort(LIST(SORT("VariableModifier")))}]
      )
    , CConj(
        C("java/classes/MethodDeclarations!varModOk", [Var("x_1"){OfSort(SCOPE())}, Var("x_2"){OfSort(SORT("VariableModifier"))}], NoMessage())
      , C("java/classes/MethodDeclarations!varModListOk", [Var("x_1"){OfSort(SCOPE())}, Var("xs_2"){OfSort(LIST(SORT("VariableModifier")))}], NoMessage())
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!varModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Annotation2VariableModifier", [Var("anno"){OfSort(SORT("Annotation"))}]){OfSort(SORT("VariableModifier"))}]
      )
    , CConj(
        C("java/interfaces/Annotations!annoOk", [Var("s"){OfSort(SCOPE())}, Var("anno"){OfSort(SORT("Annotation"))}], NoMessage())
      , CTrue()
      )
    )
  , Rule(
      NoName()
    , C(
        "java/classes/MethodDeclarations!varModOk"
      , [Var("s"){OfSort(SCOPE())}, Op("Final2VariableModifier", [Wld(){OfSort(SORT("Final"))}]){OfSort(SORT("VariableModifier"))}]
      )
    , CTrue()
    )
  ]
, [ ("java/statements/Statements!switchGroupListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/PackageDeclarations!declarePkgIds", 1, Label("java/names/PackageNames!pkg"))
  , ("java/names/TypeNames!declareType", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/MethodDeclarations!mthdBodyOk", 1, Label("java/names/TypeNames!type"))
  , ("java/interfaces/InterfaceMethodDeclarations!intfMthdDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/ClassDeclarations!normalClsDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/EnumDeclarations!enumDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/statements/Blocks!blkOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/TypeDeclarations!typeDeclListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/ClassDeclarations!clsBodyDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/names/PackageNames!composePkgPathList", 2, Label("java/names/Main!PKGC"))
  , ("java/packages/ImportDeclarations!importDeclListOk", 3, Label("java/names/Main!IMP_ST"))
  , ("java/packages/ImportDeclarations!importDeclListOk", 3, Label("java/names/Main!IMP_OD"))
  , ("java/packages/CompilationUnits!compilationUnitOk", 1, Label("java/names/PackageNames!pkg"))
  , ("java/interfaces/InterfaceDeclarations!intfDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/PackageDeclarations!pkgDeclOptOk", 1, Label("java/names/PackageNames!pkg"))
  , ("java/classes/ClassDeclarations!clsBodyDeclListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/TypeDeclarations!typeDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/names/PackageNames!declarePkg", 1, Label("java/names/PackageNames!pkg"))
  , ("java/packages/PackageDeclarations!pkgDeclOptOk", 3, Label("java/names/Main!PKGC"))
  , ("java/statements/Blocks!blkStmtListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/interfaces/AnnotationTypes!annoTypeMemDeclListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/EnumDeclarations!enumBodyDeclsOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/ClassDeclarations!clsMemDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/statements/Statements!stmtOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/ImportDeclarations!importDeclOk", 3, Label("java/names/Main!IMP_ST"))
  , ("java/packages/ImportDeclarations!importDeclOk", 3, Label("java/names/Main!IMP_OD"))
  , ("java/statements/Statements!switchGroupOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/EnumDeclarations!enumBodyDeclsOptOk", 1, Label("java/names/TypeNames!type"))
  , ("java/interfaces/AnnotationTypes!annoTypeMemDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/PackageDeclarations!pkgDeclOk", 1, Label("java/names/PackageNames!pkg"))
  , ("java/interfaces/InterfaceDeclarations!intfMemDeclListOk", 1, Label("java/names/TypeNames!type"))
  , ("java/classes/ClassDeclarations!clsDeclOk", 1, Label("java/names/TypeNames!type"))
  , ("java/packages/PackageDeclarations!pkgDeclOk", 3, Label("java/names/Main!PKGC"))
  , ("statics!fileOk", 1, Label("java/names/PackageNames!pkg"))
  , ("java/packages/PackageDeclarations!declarePkgIds", 3, Label("java/names/Main!PKGC"))
  , ("java/statements/Blocks!blkStmtOk", 1, Label("java/names/TypeNames!type"))
  , ("java/names/PackageNames!composePkgPath", 2, Label("java/names/Main!PKGC"))
  , ("java/interfaces/InterfaceDeclarations!intfMemDeclOk", 1, Label("java/names/TypeNames!type"))
  ]
)