module testsuites/nameresolution

imports

  signatures/testsuites/-

rules

  [[ ResolveXToXInSameScope(xr,xd) ^ () ]] :=
    new s,
    {xr} -> s,
    {xd} <- s,
    {xr} |-> _.

  [[ ResolveXToYInSameScope(xr,yd) ^ () ]] :=
    new s,
    {xr} -> s,
    {yd} <- s,
    {xr} |-> _.

  [[ ResolveNs1XToNs2XInSameScope(xr,xd) ^ () ]] :=
    new s,
    Ns1{xr} -> s,
    Ns2{xd} <- s,
    Ns1{xr} |-> _.

  [[ ResolveXToXOrXInSameScope(xr,xd1,xd2) ^ () ]] :=
    new s,
    {xr} -> s,
    {xd1} <- s,
    {xd2} <- s,
    {xr} |-> _.

rules

  [[ ResolveXToXInParentScope(xr,xd) ^ () ]] :=
    new s ps,
    {xd} <- ps,
    s -P-> ps,
    {xr} -> s,
    {xr} |-> _.

  [[ ResolveXToXOrXInParentScopes(xr,xd1,xd2) ^ () ]] :=
    new s ps1 ps2,
    {xd1} <- ps1,
    {xd2} <- ps2,
    s -P-> ps1,
    s -P-> ps2,
    {xr} -> s,
    {xr} |-> _.

  [[ ResolveXToXInImportScopeNotInParentScope(xr,xd1,xd2) ^ () ]] :=
    new s is ps,
    {xd1} <- is,
    {xd2} <- ps,
    s -I-> is,
    s -P-> ps,
    {xr} -> s,
    {xr} |-> _.

rules

  [[ ResolveXViaY(xr,yr,yd,xd) ^ () ]] :=
    new s sx sy,
    {yd} <- s,
    {yd} ===> sy,
    {xd} <- sy,
    {yr} -> s,
    {yr} <=== s,
    sx ---> s,
    {xr} -> sx,
    {xr} |-> _.

  [[ ResolveXViaYAndZ(xr,yr,yd,zr,zd,xd) ^ () ]] :=
    new s sx sy sz,
    {yd} <- s,
    {yd} ===> sy,
    {zr} -> s,
    {zr} <=== sy,
    {zd} <- s,
    {zd} ===> sz,
    {xd} <- sz,
    {yr} <=== s,
    {yr} -> s,
    sx ---> s,
    {xr} -> sx,
    {xr} |-> _.

rules

  [[ ResolveYViaTypeOfX(yr,xr,xd,yd) ^ () ]] :=
    new s s' sx,
    {xd} <- s,
    {xd} : sx,
    {yd} <- sx,
    {xr} -> s,
    {xr} |-> d,
    d : s'',
    {yr} -> s',
    s' ---> s'',
    {yr} |-> _.
