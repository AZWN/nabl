Module(
  "generate"
, [ Imports(
      [ Import("libstrc")
      , Import("libstratego-lib")
      , Import("libstratego-gpp")
      , Import("libstratego-aterm")
      , Import("include/NameDefinitionLanguage")
      , Import("lib/editor-common.generated")
      , Import("lib/compilation-library.generated")
      ]
    )
  , Rules(
      [ SDefT(
          "NEWNAME"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Tuple(
                  [ Var("selected")
                  , Var("position")
                  , As(
                      Var("ast")
                    , NoAnnoList(
                        Op("Naming", [Var("name"), Wld(), Wld(), Wld()])
                      )
                    )
                  , Var("path")
                  , Var("project-path")
                  ]
                )
              )
            , NoAnnoList(Tuple([Var("filename"), Var("result")]))
            , [ WithClause(
                  Seq(
                    Assign(
                      Var("filename")
                    , App(
                        CallT(SVar("guarantee-extension"), [], [NoAnnoList(Str("\"str\""))])
                      , Var("path")
                      )
                    )
                  , Seq(
                      Assign(
                        Var("str-module")
                      , App(CallT(SVar("to-analysis"), [], []), Var("ast"))
                      )
                    , Assign(
                        Var("result")
                      , App(CallT(SVar("pp-stratego-string"), [], []), Var("str-module"))
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , Overlays(
      [ Overlay(
          "TERM"
        , ["o", "args"]
        , NoAnnoList(
            Op(
              "NoAnnoList"
            , [NoAnnoList(Op("Op", [Var("o"), Var("args")]))]
            )
          )
        )
      , Overlay(
          "TERM"
        , ["o"]
        , NoAnnoList(
            Op(
              "NoAnnoList"
            , [NoAnnoList(
                 Op("Op", [Var("o"), NoAnnoList(List([]))])
               )]
            )
          )
        )
      , Overlay(
          "CALL"
        , ["c"]
        , NoAnnoList(
            Op(
              "CallNoArgs"
            , [NoAnnoList(Op("SVar", [Var("c")]))]
            )
          )
        )
      , Overlay(
          "CALL"
        , ["c", "t"]
        , NoAnnoList(
            Op(
              "CallT"
            , [ NoAnnoList(Op("SVar", [Var("c")]))
              , NoAnnoList(List([]))
              , NoAnnoList(List([Var("t")]))
              ]
            )
          )
        )
      , Overlay(
          "RULE"
        , ["n", "lhs", "rhs", "clauses"]
        , NoAnnoList(
            Op(
              "RDefNoArgs"
            , [ Var("n")
              , NoAnnoList(
                  Op(
                    "Rule"
                  , [Var("lhs"), Var("rhs"), Var("clauses")]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , Overlays(
      [ Overlay(
          "GEN_IMPORTS"
        , []
        , NoAnnoList(
            Op(
              "Imports"
            , [ NoAnnoList(
                  List(
                    [ NoAnnoList(Op("Import", [NoAnnoList(Str("\"lib/analysis-library.generated\""))]))
                    , NoAnnoList(Op("Import", [NoAnnoList(Str("\"lib/index-library.generated\""))]))
                    ]
                  )
                )
              ]
            )
          )
        )
      , Overlay(
          "GEN_CONSTRUCTORS"
        , []
        , NoAnnoList(
            Op(
              "Constructors"
            , [ NoAnnoList(
                  List(
                    [ NoAnnoList(
                        Op(
                          "CONS_DECL"
                        , [NoAnnoList(Str("\"Type\"")), NoAnnoList(Str("\"DefDataKind\""))]
                        )
                      )
                    ]
                  )
                )
              ]
            )
          )
        )
      , Overlay(
          "CONS_DECL"
        , ["c", "t"]
        , NoAnnoList(
            Op(
              "OpDecl"
            , [ Var("c")
              , NoAnnoList(
                  Op(
                    "ConstType"
                  , [NoAnnoList(Op("SortNoArgs", [Var("t")]))]
                  )
                )
              ]
            )
          )
        )
      , Overlay(
          "ADJUST_DATA"
        , ["term", "kind", "data", "clauses"]
        , NoAnnoList(
            Op(
              "RDefT"
            , [ NoAnnoList(Str("\"adjust-index-def-data\""))
              , NoAnnoList(
                  List(
                    [NoAnnoList(Op("DefaultVarDec", [NoAnnoList(Str("\"store\""))]))]
                  )
                )
              , NoAnnoList(
                  List(
                    [ NoAnnoList(Op("DefaultVarDec", [NoAnnoList(Str("\"namespace\""))]))
                    , NoAnnoList(Op("DefaultVarDec", [NoAnnoList(Str("\"path\""))]))
                    ]
                  )
                )
              , NoAnnoList(
                  Op(
                    "Rule"
                  , [ Var("term")
                    , NoAnnoList(
                        Op(
                          "App"
                        , [ NoAnnoList(Op("CALL", [NoAnnoList(Str("\"store\""))]))
                          , NoAnnoList(
                              Op(
                                "TERM"
                              , [ NoAnnoList(Str("\"DefData\""))
                                , NoAnnoList(
                                    List(
                                      [ NoAnnoList(Op("Var", [NoAnnoList(Str("\"path\""))]))
                                      , NoAnnoList(Op("TERM", [Var("kind")]))
                                      , Var("data")
                                      ]
                                    )
                                  )
                                ]
                              )
                            )
                          ]
                        )
                      )
                    , Var("clauses")
                    ]
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-analysis"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "Naming"
                , [Var("name"), Var("import*"), Var("namespace*"), Var("rule*")]
                )
              )
            , NoAnnoList(
                Op(
                  "Module"
                , [ Var("name")
                  , NoAnnoList(
                      ListTail(
                        [ Var("GEN_IMPORTS")
                        , NoAnnoList(Op("Imports", [Var("import*")]))
                        , NoAnnoList(
                            Op(
                              "Signature"
                            , [ NoAnnoList(
                                  List(
                                    [ Var("GEN_CONSTRUCTORS")
                                    , NoAnnoList(
                                        Op(
                                          "Constructors"
                                        , [ App(
                                              CallT(
                                                SVar("map")
                                              , [CallT(SVar("to-opdecl"), [], [])]
                                              , []
                                              )
                                            , Var("namespace*")
                                            )
                                          ]
                                        )
                                      )
                                    ]
                                  )
                                )
                              ]
                            )
                          )
                        ]
                      , App(
                          CallT(
                            SVar("filter")
                          , [CallT(SVar("to-rules"), [], [])]
                          , []
                          )
                        , Var("rule*")
                        )
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      , SDefT(
          "to-opdecl"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(Op("Namespace", [Var("ns")]))
            , NoAnnoList(
                Op("CONS_DECL", [Var("ns"), NoAnnoList(Str("\"Namespace\""))])
              )
            , []
            )
          )
        )
      , SDefT(
          "to-rules"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Rule"
                , [Var("term"), Var("part*"), Var("cond*")]
                )
              )
            , NoAnnoList(
                Op(
                  "Rules"
                , [ App(
                      CallT(SVar("concat"), [], [])
                    , NoAnnoList(
                        List(
                          [Var("scope-rule*"), Var("definition-rule*"), Var("annotate-rule*"), Var("type-rule*")]
                        )
                      )
                    )
                  ]
                )
              )
            , [ WhereClause(
                  BA(CallT(SVar("debug"), [], []), Var("term"))
                )
              , WhereClause(
                  Seq(
                    Assign(
                      Var("clause1*")
                    , App(
                        CallT(
                          SVar("filter")
                        , [CallT(SVar("to-clauses"), [], [])]
                        , []
                        )
                      , Var("part*")
                      )
                    )
                  , Seq(
                      Assign(
                        Var("clause2*")
                      , App(
                          CallT(
                            SVar("filter")
                          , [CallT(SVar("to-clauses"), [], [])]
                          , []
                          )
                        , Var("cond*")
                        )
                      )
                    , Seq(
                        Assign(
                          Var("clause*")
                        , App(
                            CallT(SVar("conc"), [], [])
                          , NoAnnoList(Tuple([Var("clause1*"), Var("clause2*")]))
                          )
                        )
                      , Seq(
                          Assign(
                            Var("scope-rule*")
                          , App(
                              Seq(
                                CallT(
                                  SVar("to-scope-rules")
                                , []
                                , [Var("term"), Var("clause*")]
                                )
                              , CallT(
                                  SVar("debug")
                                , [Build(NoAnnoList(Str("\"scope \"")))]
                                , []
                                )
                              )
                            , Var("part*")
                            )
                          )
                        , Seq(
                            Assign(
                              Var("definition-rule*")
                            , App(
                                Seq(
                                  CallT(
                                    SVar("filter")
                                  , [CallT(
                                       SVar("to-definition-rules")
                                     , []
                                     , [Var("term"), Var("clause*")]
                                     )]
                                  , []
                                  )
                                , Seq(
                                    CallT(SVar("concat"), [], [])
                                  , CallT(
                                      SVar("debug")
                                    , [Build(NoAnnoList(Str("\"def \"")))]
                                    , []
                                    )
                                  )
                                )
                              , Var("part*")
                              )
                            )
                          , Seq(
                              Assign(
                                Var("annotate-rule*")
                              , App(
                                  Seq(
                                    CallT(
                                      SVar("to-annotate-rules")
                                    , []
                                    , [Var("term"), Var("clause*")]
                                    )
                                  , CallT(
                                      SVar("debug")
                                    , [Build(NoAnnoList(Str("\"anno \"")))]
                                    , []
                                    )
                                  )
                                , Var("part*")
                                )
                              )
                            , Assign(
                                Var("type-rule*")
                              , App(
                                  Seq(
                                    CallT(
                                      SVar("filter")
                                    , [CallT(
                                         SVar("to-type-rules")
                                       , []
                                       , [Var("term"), Var("clause*")]
                                       )]
                                    , []
                                    )
                                  , Seq(
                                      CallT(SVar("concat"), [], [])
                                    , CallT(
                                        SVar("debug")
                                      , [Build(NoAnnoList(Str("\"type \"")))]
                                      , []
                                      )
                                    )
                                  )
                                , Var("part*")
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-clauses"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Ref"
                , [ Wld()
                  , Var("name")
                  , NoAnnoList(Op("TypeBinding", [Var("type")]))
                  , Wld()
                  ]
                )
              )
            , NoAnnoList(
                Op(
                  "WhereClause"
                , [ NoAnnoList(
                      Op(
                        "Assign"
                      , [ NoAnnoList(
                            Op(
                              "NoAnnoList"
                            , [NoAnnoList(
                                 Op("List", [NoAnnoList(List([Var("type")]))])
                               )]
                            )
                          )
                        , NoAnnoList(
                            Op(
                              "App"
                            , [ NoAnnoList(
                                  Op(
                                    "Seq"
                                  , [ NoAnnoList(Op("CALL", [NoAnnoList(Str("\"index-lookup\""))]))
                                    , NoAnnoList(
                                        Op(
                                          "CALL"
                                        , [ NoAnnoList(Str("\"index-get-data-all\""))
                                          , NoAnnoList(Op("TERM", [NoAnnoList(Str("\"Type\""))]))
                                          ]
                                        )
                                      )
                                    ]
                                  )
                                )
                              , Var("name")
                              ]
                            )
                          )
                        ]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      , SDefT(
          "to-clauses"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "Where"
                , [Var("term"), NoAnnoList(Op("TypeCheck", [Var("type")]))]
                )
              )
            , NoAnnoList(
                Op(
                  "WhereClause"
                , [ NoAnnoList(
                      Op(
                        "Assign"
                      , [ Var("type")
                        , NoAnnoList(
                            Op(
                              "App"
                            , [NoAnnoList(Op("CALL", [NoAnnoList(Str("\"type-of\""))])), Var("term")]
                            )
                          )
                        ]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-scope-rules"
        , []
        , [ VarDec("term", ConstType(SortNoArgs("ATerm")))
          , VarDec("clause*", ConstType(SortNoArgs("ATerm")))
          ]
        , SRule(
            Rule(
              Var("part*")
            , Var("result")
            , [ WhereClause(
                  Seq(
                    Assign(
                      Var("scope*")
                    , App(
                        CallT(
                          SVar("filter")
                        , [CallT(SVar("to-scope"), [], [])]
                        , []
                        )
                      , Var("part*")
                      )
                    )
                  , GuardedLChoice(
                      Where(BA(Match(NoAnnoList(List([]))), Var("scope*")))
                    , Assign(Var("result"), NoAnnoList(List([])))
                    , Assign(
                        Var("result")
                      , NoAnnoList(
                          List(
                            [ NoAnnoList(
                                Op(
                                  "RULE"
                                , [ NoAnnoList(Str("\"nam-get-scope-types\""))
                                  , Var("term")
                                  , NoAnnoList(Op("List", [Var("scope*")]))
                                  , Var("clause*")
                                  ]
                                )
                              )
                            ]
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      , SDefT(
          "to-scope"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Scope"
                , [Wld(), NoAnnoList(Op("NsRef", [Var("namespace")])), Wld()]
                )
              )
            , NoAnnoList(Op("TERM", [Var("namespace")]))
            , []
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-definition-rules"
        , []
        , [ VarDec("term", ConstType(SortNoArgs("ATerm")))
          , VarDec("clause*", ConstType(SortNoArgs("ATerm")))
          ]
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Def"
                , [ NoAnnoList(Op("NsRef", [Var("namespace")]))
                  , Var("name")
                  , Wld()
                  , NoAnnoList(Op("None", []))
                  ]
                )
              )
            , NoAnnoList(
                List(
                  [ NoAnnoList(
                      Op(
                        "RULE"
                      , [NoAnnoList(Str("\"nam-get-definition-key\"")), Var("term"), Var("name"), Var("clause*")]
                      )
                    )
                  , NoAnnoList(
                      Op(
                        "RULE"
                      , [ NoAnnoList(Str("\"nam-get-definition\""))
                        , Var("term")
                        , NoAnnoList(
                            Op(
                              "App"
                            , [ NoAnnoList(
                                  Op(
                                    "CALL"
                                  , [NoAnnoList(Str("\"nam-get-def\"")), NoAnnoList(Op("TERM", [Var("namespace")]))]
                                  )
                                )
                              , Var("name")
                              ]
                            )
                          )
                        , Var("clause*")
                        ]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-annotate-rules"
        , []
        , [ VarDec("term", ConstType(SortNoArgs("ATerm")))
          , VarDec("clause*", ConstType(SortNoArgs("ATerm")))
          ]
        , SRule(
            Rule(
              Var("part*")
            , Var("result")
            , [ WhereClause(
                  Seq(
                    Assign(
                      Var("replacement*")
                    , App(
                        CallT(
                          SVar("filter")
                        , [CallT(SVar("to-annotate-replacement"), [], [])]
                        , []
                        )
                      , Var("part*")
                      )
                    )
                  , GuardedLChoice(
                      Where(BA(Match(NoAnnoList(List([]))), Var("replacement*")))
                    , Assign(Var("result"), NoAnnoList(List([])))
                    , Assign(
                        Var("result")
                      , NoAnnoList(
                          List(
                            [ NoAnnoList(
                                Op(
                                  "SDefT"
                                , [ NoAnnoList(Str("\"nam-annotate-names\""))
                                  , NoAnnoList(List([]))
                                  , NoAnnoList(
                                      List(
                                        [NoAnnoList(Op("DefaultVarDec", [NoAnnoList(Str("\"path\""))]))]
                                      )
                                    )
                                  , App(
                                      CallT(
                                        SVar("alltd")
                                      , [ GuardedLChoice(
                                            CallT(SVar("replace"), [], [Var("replacement*")])
                                          , Id()
                                          , CallT(SVar("introduce-id"), [], [])
                                          )
                                        ]
                                      , []
                                      )
                                    , Var("term")
                                    )
                                  ]
                                )
                              )
                            ]
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          )
        )
      , SDefT(
          "to-annotate-replacement"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Def"
                , [Wld(), Var("name"), Wld(), NoAnnoList(Op("None", []))]
                )
              )
            , NoAnnoList(
                Tuple(
                  [ Var("name")
                  , NoAnnoList(
                      Op(
                        "CALL"
                      , [ NoAnnoList(Str("\"nam-annotate-def\""))
                        , NoAnnoList(Op("Var", [NoAnnoList(Str("\"path\""))]))
                        ]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      , SDefT(
          "to-annotate-replacement"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Ref"
                , [ NoAnnoList(Op("NsRef", [Var("namespace")]))
                  , Var("name")
                  , Wld()
                  , NoAnnoList(Op("None", []))
                  ]
                )
              )
            , NoAnnoList(
                Tuple(
                  [ Var("name")
                  , NoAnnoList(
                      Op(
                        "CALL"
                      , [NoAnnoList(Str("\"nam-annotate-use\"")), NoAnnoList(Op("TERM", [Var("namespace")]))]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      , SDefT(
          "replace"
        , []
        , [VarDec("replacement*", ConstType(SortNoArgs("ATerm")))]
        , SRule(
            Rule(
              Var("t1")
            , Var("t2")
            , [ WhereClause(
                  BA(
                    CallT(
                      SVar("fetch-elem")
                    , [Match(NoAnnoList(Tuple([Var("t1"), Var("t2")])))]
                    , []
                    )
                  , Var("replacement*")
                  )
                )
              ]
            )
          )
        )
      , SDefT(
          "introduce-id"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(Op("Wld", []))
            , NoAnnoList(Op("Id", []))
            , []
            )
          )
        )
      , SDefT(
          "introduce-id"
        , []
        , []
        , SRule(
            Rule(
              NoAnnoList(Op("Var", [Wld()]))
            , NoAnnoList(Op("Id", []))
            , []
            )
          )
        )
      ]
    )
  , Rules(
      [ SDefT(
          "to-type-rules"
        , []
        , [ VarDec("term", ConstType(SortNoArgs("ATerm")))
          , VarDec("clause*", ConstType(SortNoArgs("ATerm")))
          ]
        , SRule(
            Rule(
              NoAnnoList(
                Op(
                  "ND-Def"
                , [ NoAnnoList(Op("NsRef", [Var("namespace")]))
                  , Var("name")
                  , NoAnnoList(Op("TypeBinding", [Var("type")]))
                  , Wld()
                  ]
                )
              )
            , NoAnnoList(
                List(
                  [ NoAnnoList(
                      Op(
                        "ADJUST_DATA"
                      , [Var("term"), NoAnnoList(Str("\"Type\"")), Var("type"), Var("clause*")]
                      )
                    )
                  , NoAnnoList(
                      Op(
                        "RULE"
                      , [NoAnnoList(Str("\"type-of\"")), Var("term"), Var("type"), Var("clause*")]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      , SDefT(
          "to-type-rules"
        , []
        , [ VarDec("term", ConstType(SortNoArgs("ATerm")))
          , VarDec("clause*", ConstType(SortNoArgs("ATerm")))
          ]
        , SRule(
            Rule(
              NoAnnoList(Op("ND-Type", [Var("type")]))
            , NoAnnoList(
                List(
                  [ NoAnnoList(
                      Op(
                        "RULE"
                      , [NoAnnoList(Str("\"type-of\"")), Var("term"), Var("type"), Var("clause*")]
                      )
                    )
                  ]
                )
              )
            , []
            )
          )
        )
      ]
    )
  ]
)