module generation/sections

imports
  
  libstrc
  include/NameBindingLanguage
  
  generation/util
  generation/rules
    
rules // namespaces 
      
  nabl-to-str(|replace*, bound*, rule*):
    Namespaces(namespaces) -> Signature([Constructors(<map(nabl-to-str)> namespaces)])
    
  nabl-to-str: // generates constructors for namespaces
    Namespace(ns) -> CONS_DECL($[NablNs[ns]], "Namespace")
  
  nabl-to-str: NamespaceRef(ns) -> TERM($[NablNs[ns]])

rules // properties
        
  nabl-to-str(|replace*, bound*, rule*):
    Properties(props) -> Signature([Constructors(<map(nabl-to-str)> props)])
  
  nabl-to-str: // generate constructors for properties
    Property(prop, _, _) -> CONS_DECL($[NablProp_[prop]], "Property") 

  nabl-to-str: PropertyRef(p) -> TERM($[NablProp_[p]])
  nabl-to-str: TypeProp()     -> TERM("Type")

rules // imports
    
  nabl-to-str(|replace*, bound*, rule*) = Imports(![ImportWildcard("lib/nbl"), ImportWildcard("lib/task")|<id>])
    
rules // binding rules

  nabl-to-str(|replace*, bound*, rule*):
    BindingRules(rs) -> Rules(<iset-elements; nonempty> rule*)
    where
      <iset-clear> rule*;
      <filter(nabl-to-str(|replace*, bound*, rule*))> rs
     