[
   Var                      -- _1,
   Wld                      -- KW["_"],
   Int                      -- _1,
   Real                     -- _1,
   Str                      -- _1,
   Op                       -- _1 KW["("] _2 KW[")"],
   Op.2:iter-star-sep       -- _1 KW[","],
   OpQ                      -- _1 KW["("] _2 KW[")"],
   OpQ.2:iter-star-sep      -- _1 KW[","],
   NoAnnoList               -- _1,
   ListVar                  -- _1,
   Var                      -- _1,
   Char                     -- _1,
   List                     -- KW["["] _1 KW["]"],
   List.1:iter-star-sep     -- _1 KW[","],
   ListTail                 -- KW["["] _1 KW["|"] _2 KW["]"],
   ListTail.1:iter-star-sep -- _1 KW[","],
   Naming                   -- KW["module"] _1 _2 _3 _4,
   Import                   -- _1,
   Namespace                -- _1,
   NsRef                    -- _1,
   ND-Rule                  -- _1 KW[":"] _2 _3,
   ND-Rule.2:iter           -- _1,
   ND-Rule.3:iter-star      -- _1,
   ND-Def                   -- KW["defines"] _1 _2 _3 _4,
   ND-Ref                   -- KW["refers"] KW["to"] _1 _2 _3 _4,
   ND-Scope                 -- _1 KW["scope"] KW["for"] _2 _3,
   ND-Type                  -- KW["has"] KW["type"] _1,
   Where                    -- KW["where"] _1 _2,
   TypeCheck                -- KW["has"] KW["type"] _1,
   ReferenceCheck           -- KW["refers"] KW["to"] _1 _2 _3 _4,
   Unique                   -- KW["unique"],
   Nonunique                -- ,
   TypeBinding              -- KW["of"] KW["type"] _1,
   None                     -- ,
   DefScope                 -- KW["in"] _1,
   None                     -- ,
   RefScope                 -- KW["in"] _1 _2,
   None                     -- ,
   Ordered                  -- KW["ordered"],
   Unordered                -- KW["unordered"],
   Unordered                -- ,
   Including                -- KW["including"] _1 KW["in"] _2,
   Overriding               -- KW["overriding"] _1 KW["in"] _2,
   None                     -- 
]