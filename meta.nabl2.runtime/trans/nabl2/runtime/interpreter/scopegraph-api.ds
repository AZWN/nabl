module nabl2/runtime/interpreter/scopegraph-api

signature

  sorts
    Name
    Type
    Scope
    Occurrence
 
  sorts Label constructors
		P     : Label
    I     : Label
    Label : String -> Label

  sort aliases
    Path = List(Step)
 
  sorts Step constructors
    D : Scope * Occurrence -> Step
    E : Scope * Label -> Step
    N : Scope * Label * Occurrence * Path -> Step

  sorts Namespace constructors
    DefaultNamespace : Namespace
    Namespace        : String -> Namespace
 
  arrows // occurrences
    Name                  -mkOccurrence-> Occurrence
    (String * Name)       -mkOccurrence-> Occurrence
    (Name * AST)          -mkOccurrence-> Occurrence
    (String * Name * AST) -mkOccurrence-> Occurrence

    namespaceOf(Occurrence) --> Namespace
    nameOf(Occurrence) --> Name

  arrows // scope graph
    NaBL2 |- Scope -declsOf-> List(Occurrence)
    NaBL2 |- Scope -edgesOf-> Map(Label, List(Scope))
    NaBL2 |- Scope -importsOf-> Map(Label, List(Occurrence))

    NaBL2 |- Occurrence -scopeOfDecl-> Scope
    NaBL2 |- Occurrence -scopeOfRef-> Scope
    NaBL2 |- Occurrence -assocsOf-> Map(Label, List(Scope))
    NaBL2 |- Occurrence -typeOf-> Type

  arrows // name resolution
    NaBL2 |- Occurrence -pathOf-> Path

  sorts
    NaBL2

  components
    NaBL2 : NaBL2

  arrows
    initNaBL2(AST) --> NaBL2
