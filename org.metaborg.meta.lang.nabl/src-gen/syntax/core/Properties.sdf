module core/Properties
imports common/Identifiers terms/Vars terms/Signatures core/Namespaces
        formulas/Formulas

exports
  lexical syntax
    Id           -> PropertyID     
    "type"       -> PropertyID     {reject}
    "properties" -> SectionKeyword 

  context-free syntax
    "properties" PropertyDef*                    -> ModuleSection {cons("Properties")}
    PropertyID "of" {NamespaceRef ","}+ ":" Sort -> PropertyDef   {cons("PropertyDef")}
    "type"                                       -> PropertyRef   {cons("TypeProp")}
    PropertyID                                   -> PropertyRef   {cons("PropertyRef")}

  context-free syntax
    CONTENTCOMPLETE -> ModuleSection {cons("COMPLETION-ModuleSection")}
    CONTENTCOMPLETE -> PropertyDef   {cons("COMPLETION-PropertyDef")}
    CONTENTCOMPLETE -> PropertyRef   {cons("COMPLETION-PropertyRef")}

  context-free syntax
    "=>" NamespaceRef VarRef "has" PropertyRef VarRef "where" Formula -> BindingClause {cons("Property")}

  context-free syntax
    CONTENTCOMPLETE -> BindingClause {cons("COMPLETION-BindingClause")}