module coq-semantics/refersto

imports
  include/NameBindingLanguage
  generation/util
  lib/Coq/pp/-
  lib/Coq/signatures/-
  coq-semantics/patterns
  coq-semantics/main
  
rules
  
  refers-to-to-coq(|c, pattern):
    RefClause([RefClausePart(All(), NamespaceRef(CurrentLanguage(), ns), VarRef(identx), _, Current(), _)]) ->
      D|[identcons optBinders' optTypecoq]|
    where
      (termt, optBinder*, _, Some(identk)) := <pattern-to-term(|0, Some(identx))> pattern
    with
      identns     := $[[ns]NS]
    ; optBinders' := OptBinders(<nub> [Bind(identx), optBinder*])
    ; optTypecoq  := OptType(T|[refers_toR termt identx identns identk]|)
    ; identcons   := $[[c]_refers_to_[ns]]
