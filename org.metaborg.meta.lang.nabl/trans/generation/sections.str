module generation/sections

imports
  
  libstrc
  include/NameBindingLanguage
  lib/editor-common.generated
  
  generation/-
        	
rules // binding rules

  rules-to-str:
    BindingRules(rs) -> Rules(<mapconcat(to-str-rules)> rs)
    
  to-str-rules:
  BindingRule(pattern, f, clause*) -> [s*, n*, d*, p*] //, u*, f*, i*, m1*, m2*]
    with 
       s* := <binding-to-scope-rules <+ ![]> 
    with 
       n* := <binding-to-name-rules <+ ![]>
    with
       d* := <binding-to-def-rules <+ ![]> 
    with 
      p* := <binding-to-prop-rule; MkSingleton <+ ![]>
    // with 
    //    u* := [<binding-to-use-rule(|bound*, task*, repl*)>]
    // <+ u* := []
    // with 
    //    f* := <binding-to-filter-rules(|bound*, task*, repl*)>
    // with 
    //    i* := [<binding-to-import-rule(|bound*, task*, repl*)>]
    // <+ i* := []
    // with
    //    m1* := <constraints-to-match-rules(|bound*, i, 0)> constr*
    //  ; m2* := <filter-with-index(to-match-rules(|bound*, i)); concat> clause*
    