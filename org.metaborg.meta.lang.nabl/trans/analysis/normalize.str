module analysis/normalize

imports
  include/NameBindingLanguage
  generation/util
  
strategies
   
  normalize-all = innermost(normalize)
  
rules
  
  normalize: 
    Match(v, t) -> Eq(v, t)
    where
      <topdown(not(?Var(_) + ?ListVar(_) + ?Wld()))> t
    
rules

  normalize: And(True(), e)   -> e
  normalize: And(e, True())   -> e
  normalize: And(False(), _)  -> False()
  normalize: And(_, False())  -> False()
  normalize: Else(False(), e) -> e
  normalize: Else(e, False()) -> e
  normalize: Else(True(), _)  -> True()
  normalize: Else(_, True())  -> True()

rules
  
  normalize: And(e1, And(e2, e3))   -> And(And(e1, e2), e3)
  normalize: Else(e1, Else(e2, e3)) -> Else(Else(e1, e2), e3)
  normalize: And(e1, Else(e2, e3))  -> Else(And(e1, e2), e3) 
  
rules
  
  normalize: Not(True())       -> False()
  normalize: Not(False())      -> True()
  normalize: Not(Not(e))       -> e
  normalize: Not(And(e1, e2))  -> Else(Not(e1), Not(e2))
  normalize: Not(Else(e1, e2)) -> And(Not(e1), Not(e2))
  
rules
  
  normalize: Not(Message(_, _, _))           -> False()
  normalize: And(Not(e), m@Message(_, _, _)) -> Else(e, m)
  normalize: Else(m@Message(_, _, _), e)     -> m
    