module analysis/desugar

imports
  
  include/NameBindingLanguage
  
rules
  
  desugar-all = alltd(nabl-desugar)
  
  nabl-desugar: QualityDef(q, ns*) -> PropertyDef(q, ns*, SortNoArgs("Quality"))
        
  nabl-desugar:
    QualityTerm(QualityRef(q)) -> PropertyTerm(PropertyRef(q), NoAnnoList(Op("True", [])))
    
  nabl-desugar:
    QualityPattern(QualityRef(q)) -> PropertyPattern(Equal(), PropertyRef(q), NoAnnoList(Op("True", [])))
    
  nabl-desugar:
    QualityConstraint(t, QualityRef(q)) -> PropertyConstraint(t, PropertyRef(q), NoAnnoList(Op("True", [])))
    
  nabl-desugar:
    RefQualityConstraint(ns, t, QualityRef(q)) -> RefPropertyConstraint(ns, t, PropertyRef(q), NoAnnoList(Op("True", [])))
    
  nabl-desugar:
    Module(name, section*) -> Module(name, [binding, other*])
    where
      (binding*, other*) := <partition(?BindingRules(_))> section*
    ; rules*  := <mapconcat(?BindingRules(<id>))> binding*
    ; binding := BindingRules(rules*)
