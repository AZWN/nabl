module namebindinglanguage

imports

	libstratego-lib
	libstratego-gpp
	libstratego-aterm
  include/NameBindingLanguage
  editor-common.generated
  runtime/analysis/-
  runtime/nabl/-
  runtime/task/-
  runtime/index/-
  runtime/tmpl/-
  runtime/properties/-
  runtime/types/-
  runtime/editor/-
  editor/NameBindingLanguage-Outliner

  names/analysis/names
  analysis/-
	generation/-
  coq-semantics/-

rules // Analysis

  editor-analyze = analyze-all(desugar-all; normalize-all, id, id|<language>, <project-path>)

  editor-save = generate-name-analysis

rules // Editor services

  editor-resolve:
    (node, position, ast, path, project-path) -> definition
    where
    	definition := <analysis-resolve(|<language>, project-path)> node

  editor-hover:
    (selected, position, ast, path, project-path) -> <fail>

  editor-complete:
    (node, position, ast, path, project-path) -> proposals
    where
    	proposals := <analysis-propose-completions(|<language>, project-path)> ast

  editor-outline:
    (node, position, ast, path, project-path) -> outline
    where
      outline := <outline> ast

rules // Debugging

  debug-show-aterm:
    (selected, position, ast, path, project-path) -> (filename, selected)
    with
      filename := <guarantee-extension(|"aterm")> path

  debug-show-analyzed:
    (selected, position, ast, path, project-path) -> (filename, selected)
    with
      filename := <guarantee-extension(|"analyzed.aterm")> path

  debug-index-project =
    analysis-debug-index-project(|<language>)
  debug-index-partition =
    analysis-debug-index-partition(|<language>)

  debug-task-project =
    analysis-debug-task-project(|<language>)
  debug-task-partition =
    analysis-debug-task-partition(|<language>)
  debug-task-selection =
    analysis-debug-task-selection(|<language>)

  debug-project =
    analysis-debug-project(|<language>)
  debug-partition =
    analysis-debug-partition(|<language>)
