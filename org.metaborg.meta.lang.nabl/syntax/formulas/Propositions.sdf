module formulas/Propositions
imports terms/Terms terms/Vars common/Identifiers core/Namespaces core/Scopes
        NameBindingLanguage

exports
  context-free syntax
    "true"                            -> Proposition {cons("True")}
    "false"                           -> Proposition {cons("False")}
    VarRef "==" Term                  -> Proposition {cons("Eq")}
    VarRef "=>" Pattern               -> Proposition {cons("Match")}
    "definition" "of" VarRef "=>" Var -> Proposition {cons("DefOf")}
    Scope "=>" Var                    -> Proposition {cons("ScopeOf")}
    VarRef "refers" "to" NamespaceRef -> Proposition {cons("RefersTo")}
    VarRef "has" PropertyRef Var      -> Proposition {cons("Property")}
    Term SubTypeOp Term               -> Proposition {cons("SubType")}

  context-free syntax
    CONTENTCOMPLETE -> Proposition {cons("COMPLETION-Proposition")}

  lexical syntax
    "<:" -> SubTypeOp 