module formulas/Propositions

imports 
  terms/Terms
  terms/Vars
  common/Identifiers
  core/Namespaces
  core/Scopes
  NameBindingLanguage
  
templates // propositions
  
  Proposition.True     = <true>
  Proposition.False    = <false>
  
  Proposition.Eq       = [[VarRef] == [Term]] 
  Proposition.Match    = [[VarRef] => [Pattern]]
  Proposition.DefOf    = [definition of [VarRef] => [Var]]
  Proposition.ScopeOf  = [[Scope] => [Var]]
  
  Proposition.RefersTo = <<Term> refers to <NamespaceRef> <Var>>
  Proposition.Property = <<VarRef> has <PropertyRef> <Var>>  
  
  Proposition.PropertyPattern = <<VarRef> has <PropertyRef> <Pattern>> {avoid}
  
  Proposition.SubType = [[Term] [Relation] [Term]]  
  
lexical syntax

  Relation = "<" [A-Za-z\-]* ":" 
 
