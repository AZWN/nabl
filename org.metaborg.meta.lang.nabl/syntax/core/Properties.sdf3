module core/Properties

imports
  common/Identifiers

  terms/Vars
  terms/Signatures
    
  core/Namespaces
  // extends sort SectionKeyword from core/Modules
  // extends sort BindingClause from core/Bindings

  formulas/Formulas

lexical syntax

  PropertyID     = Id
  PropertyID     = "type" {reject}
  
  SectionKeyword = "properties"

context-free syntax

  ModuleSection.Properties  = <
  properties   
    <PropertyDef*>
  > 
  
  PropertyDef.PropertyDef = <
  <PropertyID> of <{NamespaceRef ", "}+> : <Sort>>
  
  PropertyRef.TypeProp    = <type>  
  PropertyRef.PropertyRef = <<PropertyID>>

context-free syntax

  BindingClause.Property = [
       => [NamespaceRef] [VarRef] has [PropertyRef] [VarRef]
    where [Formula]
  ]
  
  