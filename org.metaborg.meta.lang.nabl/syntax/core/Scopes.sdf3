module core/Scopes

imports

  common/Identifiers
  terms/Vars
  
  core/Namespaces
  // extends sorts BindingClause from core/Bindings
  
lexical syntax

  ScopeID = Id
  
context-free syntax // access current and future scopes

  LocalScope.NamedScope   = <<NamespaceRef> <VarRef>>
  LocalScope.CurrentScope = <current <NamespaceRef> scope>
  LocalScope.TermScope    = <<NamespaceRef> scope  at <VarRef>>
  LocalScope.Enclosing    = <enclosing <NamespaceRef> of <LocalScope>>
  
  Scope.GlobalScope       = <global scope>
  Scope                   = <<LocalScope>>
  Scope.Anonymous         = <new scope in <Scope>>

context-free syntax // scope clause

  BindingClause.ChildScope = <
    <Scope> scopes <NamespaceRef> at child nodes
  >
  
  BindingClause.SubsequentScope = <
    <Scope> scopes <NamespaceRef> at subsequent nodes
  >
  
  BindingClause.NodeScope = <
    requires <NamespaceRef> scope at <VarRef>
  >
  
    
  
  
  	
  