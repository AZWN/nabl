module core/Bindings
imports common/Identifiers terms/Terms terms/Vars core/Namespaces core/Scopes
        formulas/Formulas

exports
  lexical syntax
    Id -> RuleID 

  context-free syntax
    "binding" "rules" BindingRule*                               -> ModuleSection {cons("Bindings")}
    RuleID ":" Pattern BindingClause                             -> BindingRule   {cons("Binding")}
    "defines" Unique NamespaceRef VarRef "in" Scope              -> BindingClause {cons("Defines")}
    "unique"                                                     -> Unique        {cons("Unique")}
    "non-unique"                                                 -> Unique        {cons("NonUnique")}
    "refers" "to" NamespaceRef VarRef "in" Scope "where" Formula -> BindingClause {cons("RefersTo")}
    "imports" VarRef "as" VarRef                                 -> BindingClause {cons("Alias")}
    "imports" NamespaceRef "from" Scope "into" Scope             -> BindingClause {cons("Wildcard")}

  context-free syntax
    CONTENTCOMPLETE -> ModuleSection {cons("COMPLETION-ModuleSection")}
    CONTENTCOMPLETE -> BindingRule   {cons("COMPLETION-BindingRule")}
    CONTENTCOMPLETE -> Unique        {cons("COMPLETION-Unique")}
    CONTENTCOMPLETE -> BindingClause {cons("COMPLETION-BindingClause")}