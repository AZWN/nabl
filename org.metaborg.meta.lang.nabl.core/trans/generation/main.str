module generation/main

imports
  
  libstrc
  src-gen/signatures/-
  src-gen/signatures/common/-
  src-gen/signatures/core/-
  src-gen/signatures/formulas/-
  src-gen/signatures/terms/-
  generation/util
  generation/core/bindings/-
  generation/core/namespaces/-
  generation/core/properties/-
  generation/core/scope/-
  generation/formulas/-
  
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/index/-
  editor-common.generated
  
rules
  
  generate-name-analysis:
    (selected, position, ast@Module(name, _), path, project-path) -> (filename, result)
    with
      task-setup(|project-path);
      index-setup(|<language>, project-path)
    with
      filename   := <guarantee-extension(|"str")> $[src-gen/[name]]
    ; str-module := <to-ppable-str; module-to-str> ast
    with
       result := <pp-stratego-string> str-module
    <+ <bottomup(try(not(is-string) ; not(is-list) ; not(pp-stratego-string) ; debug(!"cannot pp ")))> str-module
    ;  result := ""
      
rules // modules
  
  to-ppable-str = alltd(to-ppable-str-local)
    
  to-ppable-str-local: ListVar(x)    -> Var(x)
  to-ppable-str-local: VarRef(x)     -> Var(x)
  to-ppable-str-local: ListVarRef(x) -> Var(x)

  module-to-str:
    Module(n, s*) -> 
    Module(
    	$[src-gen/[n]]
    , [ Imports([lib*, i*])
      , Signature([Constructors(c*)])
      , Rules(r*)
      ]
    )
    with
      i* := <filterconcat(section-to-imports)> s*
    ; c* := <filterconcat(section-to-constructors)> s*
    ; r* := <filterconcat(section-to-rules)> s*
    with
       <fetch(?ImportWildcard(<string-ends-with(|"/nabl")>))> i* 
     ; lib* := []
    <+ lib* := [ ImportWildcard("lib/runtime/nabl")
               , ImportWildcard("lib/runtime/task")
               , ImportWildcard("lib/runtime/properties")
               , ImportWildcard("lib/runtime/types")
               , ImportWildcard("lib/runtime/relations")
               , ImportWildcard("lib/runtime/editor")
               ]
  
  section-to-imports:
  	Import(i*) -> i'*
  	with i'* := <map(try(import-to-str))> i*
  	    
  import-to-str: 
    Import(i) -> Import($[src-gen/[i]]) 
    where <nabl-collect-use-task; not(task-has-failed)> i
      