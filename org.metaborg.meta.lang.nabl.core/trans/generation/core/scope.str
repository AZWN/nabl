module generation/core/scope

imports
  src-gen/signatures/-
  src-gen/signatures/common/-
  src-gen/signatures/core/-
  src-gen/signatures/formulas/-
  src-gen/signatures/terms/-
  generation/util
  generation/core/-
  libstrc
  
rules

  scope-to-str:
    CurrentScope(ns) -> LOOKUP(CURRENT(), <ns-to-term> ns)
  
  scope-to-str:
  	TermScope(ns, ChildScope()) -> LOOKUP(CHILD(), <ns-to-term> ns)
  	
  scope-to-str:
    TermScope(ns, SubsequentScope()) -> LOOKUP(SUBSEQ(), <ns-to-term> ns)
  
rules
	
  scope-to-task(|dep): 
  	CurrentScope(_) -> NEW_TASK(dep, TERM("Id", [scope']))
  	with scope' := <scope-to-str>
  
  scope-to-task(|dep): 
    TermScope(_, _) -> NEW_TASK(dep, TERM("Id", [scope']))
    with scope' := <scope-to-str>
    
  scope-to-task(|dep):
    NamedScope(_, n) -> n
     
  scope-to-task(|dep):
  	Enclosing(ns, s) -> NEW_TASK(dep, TERM("SubURI", [ns', s']))
  	with
  		ns' := <ns-to-term> ns
  	; s'  := <scope-to-task(|dep)> s

overlays
	
  CURRENT()   = Var("current__")
  CHILD()     = Var("child__")
  SUBSEQ()    = Var("subsequent__")

  SCOPEVARS() = [CURRENT, CHILD, SUBSEQ]

  LOOKUP(ns, v) = App(CALL("lookup-uri", [v]), ns)