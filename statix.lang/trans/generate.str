module generate

imports

  libstrc

  libspoofax/core/language
  
  nabl2/api

  signatures/-
  statics/-

rules

  generate-aterm:
    (_, _, ast@Module(name,_), path, project-path) -> None()
    where a := <nabl2-get-resource-analysis> $[[project-path]/[path]];
          <nabl2-analysis-has-errors> a

  generate-aterm:
    (_, _, ast@Module(name,_), path, project-path) -> <unzip> [(rule-file, rule), (ext-file, ext)]
    where a := <nabl2-get-resource-analysis> $[[project-path]/[path]];
          not(<nabl2-analysis-has-errors> a)
    with (spec, ext) := <nabl2-get-custom-analysis;strip-annos> a;
         rule := <collect-all(?Rule(_, _, _, _, _));eliminate-all> spec;
         rule-file := <src-gen-file(|"statix/", ".rules.aterm")> name;
         ext-file  := <src-gen-file(|"statix/", ".ext.aterm")> name
 
  src-gen-file(|sub-dir, ext): name -> file-name
    with file-name := $[[<src-gen-dir(|sub-dir)>]/[name][ext]]

  src-gen-dir(|sub-dir): _ -> dir-name
    with dir-name := <language-srcgen-dir> sub-dir

rules

  eliminate-all =
    eliminate-ascribe

  eliminate-ascribe = topdown(try(\ Ascribe(t, _) -> t \))
