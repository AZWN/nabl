module analysis

imports
  
  nabl2shared
  nabl2runtime
  nabl2/api
  
  signatures/-
  
  statics/-

  pp

rules // Analysis

  editor-analyze = nabl2-analyze(desugar-all)

  nabl2-custom-analysis-unit-hook: (resource, ast, _) -> ast
  nabl2-custom-analysis-final-hook(|a):
      (resource, _, [ast]) -> (error*, warning*, note*, None())
    where <not(nabl2-analysis-has-errors)> a
    with if id then
           nabl2-custom-analysis-info-msg(|"Computing scope extensions...");
           (ext*, error*, warning*, note*) := <compute-scope-extensions(|a)> ast;
           nabl2-custom-analysis-info-msg(|"Computed scope extensions.")
         else
           (ext*, error*, warning*, note*) := ([], [], [], [])
         end

  nabl2-prettyprint-hook       = prettyprint-StatixLang-IType
  prettyprint-StatixLang-IType = nabl2-prettyprint-term

  nabl2-prettyprint-hook       = prettyprint-StatixLang-TType
  prettyprint-StatixLang-TType = nabl2-prettyprint-term

rules // Debugging

  // Prints the abstract syntax ATerm of a selection.
  debug-show-aterm: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path
       ; result   := ast

  format-aterm: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"formatted.stx")> path
       ; result   := <pp-StatixLang-string> ast

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-analyzed: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := <nabl2-simplify-ast-indices> ast

  format-analyzed: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.stx")> path
       ; result   := <pp-StatixLang-string> ast

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-normalized: (_, _, ast, path, project-path) -> (filename, result)
    with a := <nabl2-get-resource-analysis> $[[project-path]/[path]]
       ; filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := <normalize-all(|a);nabl2-simplify-ast-indices> ast

  format-normalized: (_, _, ast, path, project-path) -> (filename, result)
    with a := <nabl2-get-resource-analysis> $[[project-path]/[path]]
       ; filename := <guarantee-extension(|"analyzed.stx")> path
       ; result   := <normalize-all(|a);pp-StatixLang-string> ast
