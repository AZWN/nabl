module statix/lang/normalize/terms

imports

  libspoofax/term/annotation
  libspoofax/term/origin

  nabl2/shared/vars
  nabl2/api

  signatures/statix/lang/-
  statix/lang/statics/-
  statix/lang/normalize/util

rules

  // normalization for a bunch of context-free things that appear in terms
  // none of these depend on analysis

  normalize-terms(|a) =
    nabl2-custom-analysis-info-msg(|"| Normalize terms...");
    bottomup(
      try(normalize-term-ids(|a))
    ; try(normalize-in-rules(replace-term,not(term-no-add),term-to-c))
    )


  normalize-term-ids(|a) = Occurrence(id, id, normalize-term-or-id(|a))
  normalize-term-ids(|a) = CTermProperty(normalize-term-or-id(|a), id, id)

  normalize-term-or-id(|a): t -> TermIdOp(t)
    with ty := <norm-get-ast-type(|a)> t
    where <not(?TERM_ID() + ?SCOPE() + nabl2--is-var + nabl2--is-wld)> ty


  replace-term: Wld() -> <make-fresh-var> "wld"
  
  term-to-c: (Wld(), _) -> <fail>


  replace-term: As(v, t) -> v

  term-to-c: (As(v, t), _) -> CEqual(v, t)

  term-no-add = ?As(_, _)


  replace-term: NewOp() -> v
    with v := <make-fresh-var> "new"

  term-to-c: (NewOp(), v) -> CNew([v])


  replace-term: TermIdOp(_) -> v
    with v := <make-fresh-var> "termId"

  term-to-c: (TermIdOp(t), v) -> CTermId(t, v)
