module statix/lang/scope-extension

imports

  statix/lang/scope-extension/-

rules

  // collect extension constraints
  collect-ext-constraints:
      Module(_, section*) -> (provide*, require*)
    with (provide*, require*) :=
             < collect-om(rule-ext-constraints)
             ; combine-ext-constraints
             > section*

  // convert ast terms in constraints to occurrences
  // filter out constraints not involving scope terms
  explicate-ext-constraints(|a) =
    (filter(expl-ext-constraint(|a)), filter(expl-ext-constraint(|a)))

/*

  compute-scope-extensions: ast -> (ext*, error*, [], note*)
    with error-iset := <new-iset>;
         note-iset := <new-iset>;
         base-ext* := <collect-om(base-extensions(|error-iset, note-iset));concat> ast;
         ext-iset := <new-iset>;
         <iset-addlist(|base-ext*)> ext-iset;
         <iset-fixpoint(derive-extensions(|ast, error-iset, note-iset))> ext-iset;
         ext* := <iset-elements> ext-iset;
         error* := <iset-elements> error-iset;
         note* := <iset-elements> note-iset

*/