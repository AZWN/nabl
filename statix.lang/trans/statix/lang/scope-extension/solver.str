module statix/lang/scope-extension/solver

imports

  nabl2/api

  signatures/statix/lang/-
  statix/lang/-
  statix/lang/statics/-
  statix/lang/scope-extension/-

rules

//  external solve-ext-constraints(combine|)
//
//  solve-ext-constraints: (provide*, require*) -> (ext, e*)
//    with p* := <map(\ Provide(ext1, ext2) -> (ext1, ext2) \)> provide*
//       ; with(strip-annos;debug(!"p* := "))
//       ; p'* := <solve-ext-constraints(combine-provides)> p*
//       ; with(strip-annos;debug(!"p'* := "))
//    with r* := <map(\ Require(ext1, ext2, _) -> (ext2, ext1) \)> require*
//       ; with(strip-annos;debug(!"r* := "))
//       ; r'* := <solve-ext-constraints(combine-requires)> r*
//       ; with(strip-annos;debug(!"r'* := "))
//    with ext := <filter(ext-entries);concat> r'*
//       ; e* := <filter(ext-error(|p'*, r'*))> require*
//       ; with(strip-annos;debug(!"e* := "))
//
//  ext-entries: (ParamExt(d, i), lbl*) -> ext
//    with x := <nabl2-get-occurrence-name> d
//       ; ext := <map(!(x, i, <id>))> lbl*
//
//  ext-error(|p*, r*): Require(ext1, ext2, origin) -> (origin, "Cannot extend local scope")
//    where <ext-error(|p*, r*)> ext1
//        + <ext-error(|p*, r*)> ext2
//
//  ext-error(|p*, r*): ext@VarExt(_) -> <id>
//    where [_|_] := <raw-lookup> (ext, r*)
//        ; not([_|_] := <raw-lookup> (ext, p*))
//
//  combine-provides =
//    foldr(![()], raw-isect)
//
//  combine-requires =
//    foldr(![], raw-union)
