module statics/deprecated

imports

  signatures/-
  statics/statix

rules

  [[ ResolutionQuery(r, filter, min) ^ (s) ]] :=
    new s', s' ---> s,
    VarDecl[[ r ^ (s') : OCCURRENCE() ]],
    [[ filter ^ (s', OCCURRENCE()) ]],
    [[ min ^ (s', OCCURRENCE()) ]].

  [[ CResolveOld(pt, st, target, filter, min) ^ (s) ]] :=
    [[ target ^ (s, wfty, resty) ]],
    [[ filter ^ (s, wfty) ]],
    [[ min ^ (s, wfty) ]],
    Build[[ st ^ (s) : SCOPE() ]],
    Build[[ pt ^ (s) : LIST(resty) ]].

  [[ CQueryOld(target, filter, min, st, pt) ^ (s) ]] :=
    OldTarget[[ target ^ (s, ty) ]],
    [[ filter ^ (s, ty) ]],
    [[ min ^ (s, ty) ]],
    Build[[ st ^ (s) : SCOPE() ]],
    Build[[ pt ^ (s) : LIST(rty) ]].

  OldTarget[[ EmptyTarget() ^ (s, ty) ]] :=
    ty == SCOPE().

  OldTarget[[ RelTarget(rel) ^ (s, ty) ]] :=
    RelRef[[ rel ^ (s) : ty' ]],
    ty is `inout-type` of ty'.

  [[ FilterOld(p, c) ^ (s, ty) ]] :=
    new s', s' ---> s,
    Match[[ p ^ (s') : TUPLE([LIST(LABEL()), ty]) ]],
    [[ c ^ (s') ]]. 

  [[ MinOld(p1, p2, c) ^ (s, ty) ]] :=
    new s', s' ---> s,
    Match[[ p1 ^ (s') : TUPLE([LABEL(), ty]) ]],
    Match[[ p2 ^ (s') : TUPLE([LABEL(), ty]) ]],
    [[ c ^ (s') ]].
